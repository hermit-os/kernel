rd_("CiAccessed; indicates whether software has accessed the \xe2\x80\xa60ClAccessed; indicates whether this entry has been used for \xe2\x80\xa60CfAccessed; if PS set indicates whether software has \xe2\x80\xa602ChDirty; indicates whether software has written to the \xe2\x80\xa60CnDirty; if PS indicates whether software has written to the \xe2\x80\xa601AoDevice-independent Feature BitsAkConsole Device Feature BitsAkNetwork Device Feature BitsAjSocket Device Feature BitsAoFile System Device Feature BitsBnTraditional Memory Balloon Device Feature BitsCnGlobal; if CR4.PGE = 1, determines whether the translation \xe2\x80\xa60D`Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the \xe2\x80\xa601BiPresent; must be 1 to map a 4-MByte page.BiPresent; must be 1 to map a 4-KByte page.ClPresent; must be 1 to reference a page-directory-pointer \xe2\x80\xa6BlPresent; must be 1 to reference a PML5 entryCkPresent; must be 1 to map a 1-GByte page or reference a \xe2\x80\xa6CkPresent; must be 1 to map a 2-MByte page or reference a \xe2\x80\xa64Ci0: The fault was caused by a non-present page. 1: The \xe2\x80\xa6AkNetwork Device Status FlagsdBlueeGreenCmSet L bit if this descriptor is a 64-bit code segment. In \xe2\x80\xa6cRedB`B0 breakpoint condition detectedB`B1 breakpoint condition detectedB`B2 breakpoint condition detectedB`B3 breakpoint condition detectedBaBD debug register access detectedBhA type alias for <code>BigEndian</code>.0nBS single stepnBT task switchBkAn integer stored in big-endian byte order.0A`Bluetooth devicelCode SegmentlData SegmentjES SegmentjFS SegmentAbfile system devicejGS SegmentCk0: The fault was not caused by an instruction fetch. 1: \xe2\x80\xa6BfProcessor feature identification flag.AaVirtio Device IDsiI/O errorCeIPv4 or IPv6 packets (depending on the version field)BkA type alias for <code>LittleEndian</code>.0BnAn integer stored in little-endian byte order.0CkDevice supports multiqueue with automatic receive steering.AhMultiqueue mode commandsCdThe type of successful values yielded by this future0AjContains the success value000EbFuture for the <code>or()</code> function and the <code>FutureExt::or()</code> \xe2\x80\xa6EbStream for the <code>or()</code> function and the <code>StreamExt::or()</code> \xe2\x80\xa6AaA page directory.0Ck0: The fault was not by protection keys. 1: There was a \xe2\x80\xa6CePage size; if set this entry maps a 4-MByte page; \xe2\x80\xa6CePage size; if set this entry maps a 1-GByte page; \xe2\x80\xa6CePage size; if set this entry maps a 2-MByte page; \xe2\x80\xa6mA page table.0CnRead/write; if 0, writes may not be allowed to the 4-MByte \xe2\x80\xa6CnRead/write; if 0, writes may not be allowed to the 4-KByte \xe2\x80\xa6CfRead/write; if 0, writes may not be allowed to the \xe2\x80\xa60CnRead/write; if 0, writes may not be allowed to the 1-GByte \xe2\x80\xa6CnRead/write; if 0, writes may not be allowed to the 2-MByte \xe2\x80\xa63AoVerify checksum when receiving.BaPacked Receive Filtering commandsmStack SegmentB`Compute checksum before sending.CmUser/supervisor; if 0, user-mode accesses are not allowed \xe2\x80\xa6000CnUser/supervisor; user-mode accesses are not allowed to the \xe2\x80\xa600Cg0: The access causing the fault originated when the \xe2\x80\xa6Cm0: The access causing the fault was a read. 1: The access \xe2\x80\xa6CkIf IA32_EFER.NXE = 1, execute-disable If 1, instruction \xe2\x80\xa60000CgReturns the current value of the code segment register.CmSet default operation size (false for 16bit segment, true \xe2\x80\xa6BlRead dr{0-3} register based on enum variant.CgReturns the current value of the data segment register.ChReturns the current value of the extra segment register.ClOffsets and values used to interpret the boot params (\xe2\x80\x9c\xe2\x80\xa6ofile descriptorAlFile descriptor of the file.000AbFile System DeviceCeReturns the current value of the FS segment register.CeReturns the current value of the GS segment register.CfGenerates a random <code>i8</code> in the given range.AjReturns the vendor\xe2\x80\x99s ID.AjReturns the device\xe2\x80\x99s ID.AhReturns the class\xe2\x80\x99 ID.AkReturns the subclass\xe2\x80\x99 ID.BiReturns the programming interface\xe2\x80\x99s ID.kPort numberBfMultiple capabilities of the same type0jBuffer ID.BhIndex of start of used descriptor chain.oReturn APIC ID.AeRead local x2APIC ID.AcRead local APIC ID.AgI/O port functionality.AgLittle-Endian utilitiesAbMemory management.AcReturn the NS flag.CgCreate a <code>Style</code> with this as the foreground000CjReturns the result of the future that completes first, \xe2\x80\xa6FeReturns the result of <code>self</code> or <code>other</code> future, preferring <code>self</code>\xe2\x80\xa6DkMerges two streams, preferring items from <code>stream1</code> whenever \xe2\x80\xa6EbMerges with <code>other</code> stream, preferring items from <code>self</code> \xe2\x80\xa6AlReborrow with a new lifetimeAkVM-exit information fields.CkReturns whether checksum should be verified when receiving.ChReturns the current value of the stack segment register.BoReturns the current value of the task register.CiReturns whether checksum should be verified when sending.CfGenerates a random <code>u8</code> in the given range.CmCreate an address wrapping an IPv4 address with the given \xe2\x80\xa6CmCreate an address wrapping an IPv6 address with the given \xe2\x80\xa6AjA value with all bits set.CnEnables AVX instructions and using the upper halves of the \xe2\x80\xa6oAdvertise errorCnThe logical processor invalidates all mappings\xe2\x80\x94including \xe2\x80\xa6ClIndicates whether the current processor is the bootstrap \xe2\x80\xa6BcA pointer type for heap allocation.iHost CR0.jGuest CR0.iHost CR3.jGuest CR3.iHost CR4.jGuest CR4.jCAN devicenPCI CapabilityDfRepresents a <code>/cpus/cpu*</code> node with specific helper methodsCnVarious control flags modifying the basic operation of the \xe2\x80\xa6BnContains the Page Fault Linear Address (PFLA).CkContains the physical address of the highest-level page \xe2\x80\xa6ClContains various control flags that enable architectural \xe2\x80\xa6AkContains the task priority.BdEquivalent to <code>1.days()</code>.jGuest DR7.BlA unit of time representing exactly one day.0BcMath argument out of domain of funcCjThe debug address register number of <code>Dr0</code> (0).AfDebug Address RegisterCjThe debug address register number of <code>Dr1</code> (1).1CjThe debug address register number of <code>Dr2</code> (2).2CjThe debug address register number of <code>Dr3</code> (3).3AmDebug register 6 (dr6) flags.AlDebug Status Register (DR6).AmDebug Control Register (DR7).CgSets the offset to the size of this object plus the \xe2\x80\xa6AhContains the error value000ClA 32-bit floating point number stored in big-endian byte \xe2\x80\xa6CjA 32-bit floating point number stored in little-endian \xe2\x80\xa6CkA 32-bit floating point number stored in network-endian \xe2\x80\xa6CjA 32-bit floating point number stored in native-endian \xe2\x80\xa6CiA 32-bit floating point number stored in a given byte \xe2\x80\xa6ClA 64-bit floating point number stored in big-endian byte \xe2\x80\xa6CjA 64-bit floating point number stored in little-endian \xe2\x80\xa6CkA 64-bit floating point number stored in network-endian \xe2\x80\xa6CjA 64-bit floating point number stored in native-endian \xe2\x80\xa6CiA 64-bit floating point number stored in a given byte \xe2\x80\xa6CbA flattened devicetree located somewhere in memorydFDT.AhGlobal Descriptor Table.jGPU deviceAeNetwork Device HeaderAdSocket Device HeaderChA 16-bit signed integer stored in big-endian byte order.CkA 16-bit signed integer stored in little-endian byte order.CiA 16-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 16-bit signed integer stored in native-endian byte order.CeA 16-bit signed integer stored in a given byte order.ChA 32-bit signed integer stored in big-endian byte order.CkA 32-bit signed integer stored in little-endian byte order.CiA 32-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 32-bit signed integer stored in native-endian byte order.CeA 32-bit signed integer stored in a given byte order.ChA 64-bit signed integer stored in big-endian byte order.CkA 64-bit signed integer stored in little-endian byte order.CiA 64-bit signed integer stored in network-endian byte \xe2\x80\xa6CkA 64-bit signed integer stored in native-endian byte order.CeA 64-bit signed integer stored in a given byte order.BaAbstract the IPI control registerAkInterrupt Descriptor Table.jISR StatusCmEnables Lightweight Profiling extensions and managing LWP \xe2\x80\xa6AiLogical Descriptor Table.CjA trait encapsulating the operations required of a logger.AmDevice has given MAC address.CgThe largest value that can be represented by this type.00000000000CmThe largest value that can be represented by this integer \xe2\x80\xa600000000000000000000000BlThe longest possible duration we can encode.BdThe maximum valid <code>Date</code>.CfThe maximum possible duration. Adding any positive \xe2\x80\xa6C`The largest value that can be represented by \xe2\x80\xa6DkA <code>Time</code> that is one nanosecond before midnight. This is the \xe2\x80\xa6DfThe largest value that can be represented by <code>UtcDateTime</code>.666666666666666666666666ChThe smallest value that can be represented by this type.00000000000CnThe smallest value that can be represented by this integer \xe2\x80\xa600000000000000000000000BdThe minimum valid <code>Date</code>.CfThe minimum possible duration. Adding any negative \xe2\x80\xa6CaThe smallest value that can be represented by \xe2\x80\xa6DgThe smallest value that can be represented by <code>UtcDateTime</code>.444444444444444444444444DlEnables using the PKRU register with <code>XSAVE</code>/<code>XRSTOR</code>.BgThe underlying model specific register.000000000ClDevice maximum MTU reporting is supported. If offered by \xe2\x80\xa6AnMAC Address Filtering commandsCdStream for the <code>StreamExt::map()</code> method.BmAn immutable map constructed at compile time.0hMax-heapCdMarker for Max sorted <code>SortedLinkedList</code>.mMemory devicehMin-heapCdMarker for Min sorted <code>SortedLinkedList</code>.DdMessage signalling interrupts capability, Cap ID = <code>0x05</code>AjA model specific register.cMTUChDelivers an NMI interrupt to the target processor or \xe2\x80\xa6CjThe corresponding <code>DebugAddressRegisterNumber</code>.BaRedirect Datagram for the Networklnetwork cardBbA level lower than all log levels.BcThe result contains one page range.BfRepresents the level for a page table.CmIf the PAT is supported, indirectly determines the memory \xe2\x80\xa60ClIndirectly determines the memory type used to access the \xe2\x80\xa60AiPage-level cache disable.0CnPage-level cache disable; indirectly determines the memory \xe2\x80\xa60111AiPage-level write-through.0CnPage-level write-through; indirectly determines the memory \xe2\x80\xa60111AhPCI configuration accessAbInner address typeiHost RIP.jGuest RIP.CnIf this flag is set, it indicates that the page fault is a \xe2\x80\xa6iHost RSP.jGuest RSP.ClDevice supports RSS (receive-side scaling) with Toeplitz \xe2\x80\xa6CnEnables (when set) advanced debugging of RTM transactional \xe2\x80\xa6DbWhen <em>clear</em>, indicates a debug or breakpoint exception \xe2\x80\xa6DkRed: #1 (foreground code <code>31</code>, background code <code>41</code>).BlA typed reference derived from a byte slice.Ak24-bit ANSI RGB color codesAjA random number generator.nentropy sourcejRPL OptionAiRPL Source Routing HeaderCmIf this flag is set, it indicates that the page fault was \xe2\x80\xa6ChDelivers an SMI interrupt to the target processor or \xe2\x80\xa6BjHyper-thread (Simultaneous multithreading)0EhEnables using MXCSR and the XMM registers with <code>XSAVE</code>/<code>XRSTOR</code>\xe2\x80\xa6AlSocket Device Sequence FlagsBmAn immutable set constructed at compile time.0BfSee Section 17.13, Time-Stamp Counter.BlThe tag data associated with a notification.BdThe result contains two page ranges.BjRepresents the level for a page directory.CjA 16-bit unsigned integer stored in big-endian byte order.CjA 16-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 16-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 16-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 16-bit unsigned integer stored in a given byte order.CjA 32-bit unsigned integer stored in big-endian byte order.CjA 32-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 32-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 32-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 32-bit unsigned integer stored in a given byte order.CjA 64-bit unsigned integer stored in big-endian byte order.CjA 64-bit unsigned integer stored in little-endian byte \xe2\x80\xa6CkA 64-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CjA 64-bit unsigned integer stored in native-endian byte \xe2\x80\xa6CgA 64-bit unsigned integer stored in a given byte order.BeA <code>UtcOffset</code> that is UTC.BkType returned by <code>load_consume</code>.EaA contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short \xe2\x80\xa6BbA fixed capacity <code>Vec</code>.DlEnables using the x87 FPU state with <code>XSAVE</code>/<code>XRSTOR</code>.BkFuture for the <code>zip()</code> function.CdStream for the <code>StreamExt::zip()</code> method.ElAbsolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if \xe2\x80\xa600000BdComputes the absolute value of self.00000000000BgGet the absolute value of the duration.111111111111AdReturn the ACK flag.BoAdd a socket to the set, and return its handle.CjAdd a new contiguous range to the assembler, or return \xe2\x80\xa6fPanics0000000DiAdd the sub-day time of the [<code>std::time::Duration</code>] to the \xe2\x80\xa6EhAdd the sub-day time of the <code>Duration</code> to the <code>Time</code>. Wraps on \xe2\x80\xa622BcAdd an offset to a virtual address.BjGet a flags value with all known bits set.0CeReturns an iterator over all of the available aliasesCbReturns an iterator over all of the listed CPU IDsCiReturns an iterator over all available compatible stringsEbTests if <code>predicate</code> returns <code>true</code> for all items in the \xe2\x80\xa644444444BeReturns the set containing all flags.000555555555555555550000000000000000000055555555555555EeTests if <code>predicate</code> returns <code>true</code> for any item in the stream.AmThe return code of the guest.AcToggle the AVL bit.CnGet the contents of a BAR in a given slot. Empty bars will \xe2\x80\xa6AaWhere to find it.0AiIs a bootstrap processor?0AkIs this the bootstrap core?CjA buffer for constructing a string while avoiding heap \xe2\x80\xa6BcBuffer to be written into the file.AmBuffer to read the file into.hRead cr0BcContains page-fault linear address.BaContains page-table root pointer.CmContains various flags to control operations in protected \xe2\x80\xa6AdReturn the CWR flag.AiGet the day of the month.BmGet the day of the date in the stored offset.AhGet the day of the date.0CjPrints and returns the value of a given expression for \xe2\x80\xa6BmSpecifies the privilege level of the segment.ClReturns the Descriptor Privilege Level (DPL). When using \xe2\x80\xa6iRead dr0.iRead dr1.iRead dr2.iRead dr3.iRead dr6.iRead dr7.AiReturn value EAX register0AiReturn value EBX register0AdReturn the ECE flag.CbReturn the Explicit Congestion Notification field.AiReturn value ECX register0AiReturn value EDX register0CkUtility to place the Uhyve interface version in the elf \xe2\x80\xa6BkReturns the end address of this page range.AgEnd address (exclusive)B`The end of the range, exclusive.B`The end of the range, inclusive.1BbThe start of the range, inclusive.CdEnd Of Interrupt \xe2\x80\x93 Acknowledge interrupt delivery.00AaExtension traits.0CoGenerates a random <code>f32</code> in range <code>0..1</code>.CoGenerates a random <code>f64</code> in range <code>0..1</code>.A`<code>fdt</code>AdReturn the FIN flag.DkReturns the first page range that is contained in <code>self</code> and \xe2\x80\xa6CkFormat the value using the given formatter. This is the \xe2\x80\xa6CeTypes for the Global Descriptor Table and segment \xe2\x80\xa6DiGet a reference to the inner value, or <code>None</code> if the value \xe2\x80\xa6BfReturns the value as a primitive type.DgReturns the value as the standard library\xe2\x80\x99s <code>Option</code> type.1010101010101010101010BkGets the reference to the underlying value.CmGets the reference to the result of this lazy value if it \xe2\x80\xa6CjReturns a reference to the value corresponding to the key.CmReturns a reference to the value in the set, if any, that \xe2\x80\xa6BkGets a reference to the value in the entry.BlReturns a reference to this entry\xe2\x80\x99s value.1CiGets a reference to the value that would be used when \xe2\x80\xa62CfReturns a reference to the element at the given index.ChGets a reference to the value associated with this entry66AjRetrieve a value by index.BiGets a reference to the underlying value.0AjGets the underlying value.01:CoReturns a reference to the value that <code>key</code> maps to.0CmReturn a reference to the value associated with the given \xe2\x80\xa6CdGet a socket from the set by its handle, as mutable.BgReturns the number as a primitive type.BhGets a copy of the inner <code>T</code>.CnReturns the value as a primitive type, possibly performing \xe2\x80\xa600000000000BoHalts the CPU until the next interrupt arrives.CgGenerates a random <code>i16</code> in the given range.CgGenerates a random <code>i32</code> in the given range.CgGenerates a random <code>i64</code> in the given range.B`Return the IDs for the given CPUCmProvides types for the Interrupt Descriptor Table and its \xe2\x80\xa6AeRead 8 bits from portAfRead 32 bits from portCkGenerate a software interrupt. This is a macro argument \xe2\x80\xa6AfRead 16 bits from portCiShared interrupt description and set-up code. See the \xe2\x80\xa6CjThe full 64-bit canonical forms of the interrupt stack \xe2\x80\xa6ClSet a the interrupt stack table index (only if this ends \xe2\x80\xa6BjReturns a reference to this entry\xe2\x80\x99s key.BiGets a reference to the key in the entry.CgGets a reference to the key that would be used when \xe2\x80\xa6202CkGets a reference to the key that this entity corresponds toBfGet the key associated with this entryCcGet the key used by this hasher as a 16 byte vector00000BjReturn the key associated with this entry.CfReturns the number of elements in the vector, also \xe2\x80\xa6BiReturns the number of items in the queue.BoReturns the length of this page range in bytes.BjReturns the number of elements in the map.BjReturns the number of elements in the set.BlReturns the number of elements in the table.BfReturns the length of the binary heap.CfReturns the number of elements currently in the deque.0BmReturns the current fill level of the buffer.C`Return the number of key-value pairs in the map.5BkReturns the number of elements in this map.BlReturns the number of elements in the queue.00BfReturns the size of the file, in bytesCaReturns the number of elements in the ManagedMap.CfReturns the number of entries in the <code>Map</code>.CmReturns the number of entries in the <code>OrderedMap</code>.CnReturns the number of elements in the <code>OrderedSet</code>.CgReturns the number of elements in the <code>Set</code>.BcReturn the number of stored values.BkThe number of elements stored in the vectorCiReturn the current number of elements in the ring buffer.CmReturn the length of a control flag, in terms of sequence \xe2\x80\xa6AhReturn the length field.BlNumber of bytes in the buffer to be written.BhNumber of bytes to read into the buffer.nBuffer Length.gLength.ChThe number of bytes written into the device writable \xe2\x80\xa6BiReturns the number of pages in the range.BjReturns the number of frames in the range.00AmA lightweight logging facade.AmLogs the <code>Record</code>.AkThe standard logging macro.CgMaps items of the stream to new values using a closure.DkMakes a new <code>MappedMutexGuard</code> for a component of the locked \xe2\x80\xa60DiMakes a new <code>MappedReentrantMutexGuard</code> for a component of \xe2\x80\xa60DhMake a new <code>MappedRwLockReadGuard</code> for a component of the \xe2\x80\xa6DiMake a new <code>MappedRwLockWriteGuard</code> for a component of the \xe2\x80\xa610BmAn immutable map constructed at compile time.DdConstructs a new <code>VolatilePtr</code> by mapping the wrapped \xe2\x80\xa6BgReturns the most verbose logging level.BnReturns the most verbose logging level filter.CcMSR value list and function to read and write them.AeReturn the MTU value.EjNegation. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if the \xe2\x80\xa600000000000nNetwork DeviceEaCreate a new <code>RandomState</code> <code>BuildHasher</code> using random keys.EeConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.CbConstructs a new, empty <code>Vec&lt;T&gt;</code>.DdAllocates memory on the heap and then places <code>x</code> into it.AbNo effects enabled0AmCreates a new StaticExecutor.BbCreates a new StaticLocalExecutor.AgCreates a new executor.BcCreates a single-threaded executor.AjCreates a new async mutex.CbCreate a new, uninitialized <code>OnceCell</code>.BaCreates a new reader-writer lock.CkCreates a barrier that can block the given number of tasks.DeCreates a new semaphore with a limit of <code>n</code> concurrent \xe2\x80\xa6AkCreates a new task builder.nDefine a flag.BdCreates a new <code>CallOnce</code>.BcCreates a new <code>Backoff</code>.CfPads and aligns a value to the length of a cache line.ClCreates a new atomic cell initialized with <code>val</code>.CiCreates a ranged integer if the given value is in the \xe2\x80\xa600000000000BaCreates a new <code>Event</code>.DaCreate a new <code>FutureWrapper</code> from the provided future.6DdCreates a new <code>ExclusiveCell</code> containing the given value.CcConstruct a new <code>Fdt</code> from a byte bufferFdConstructs a new <code>PageRange</code> from a given <code>start</code> and <code>end</code>, or \xe2\x80\xa6BoCreates a new free list without any free space.AiCreates a new empty cell.ChCreates a new lazy value with the given initializing \xe2\x80\xa6An<code>const</code> constructorBhCreates an empty <code>HashTable</code>.DfConstructs a new, empty vector with a fixed capacity of <code>N</code>0CfCreates an empty <code>BinaryHeap</code> as a $K-heap.0ClCreates a new C-compatible string with a terminating nul \xe2\x80\xa6DeConstructs a new, empty deque with a fixed capacity of <code>N</code>0B`Constructs a new history buffer.0BgCreates an empty <code>IndexMap</code>.BfCreates an empty <code>IndexSet</code>BhCreates an empty <code>LinearMap</code>.0EgConstructs a new, empty <code>String</code> with a fixed capacity of <code>N</code> \xe2\x80\xa60AgCreates an empty queue.000BhCreates a new canonical virtual address.AoCreates a new physical address.BdCreates a new <code>CallOnce</code>.DdCreates a new <code>ExclusiveCell</code> containing the given value.CgCreates a new mutex in an unlocked state ready for use.ClCreates a new reentrant mutex in an unlocked state ready \xe2\x80\xa6DlCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.BiConstruct new <code>RecordBuilder</code>.BmConstruct a new <code>MetadataBuilder</code>.AbCreate a slot map.EhConstruct a new memory range from <code>start</code> (inclusive) to <code>end</code> \xe2\x80\xa6:9:9:9:9AiCreates a new empty cell.0000ChCreates a new lazy value with the given initializing \xe2\x80\xa6BcCreate a new, empty, immutable map.AhCreates an empty buffer.DjCreates a new <code>Metadata</code> with the given width and metadata. \xe2\x80\xa6DhCreate a new <code>BlockRng</code> from an existing RNG implementing \xe2\x80\xa60BiCreate a new <code>CpuId</code> instance.DkCreates a new <code>SipHasher13</code> with the two initial keys set to \xe2\x80\xa6DkCreates a new <code>SipHasher24</code> with the two initial keys set to \xe2\x80\xa6DhCreates a new <code>SipHasher</code> with the two initial keys set to 0.210BiConstruct a new, empty <code>Slab</code>.AiConstruct an empty vectorBhCreate a socket using the given buffers.AfCreate a DHCPv4 socketClCreate a network interface using the previously provided \xe2\x80\xa6BbCreates a new empty routing table.BoCreate a socket set using the provided storage.AgCreate a tracer device.CjCreate a fault injector device, using the given random \xe2\x80\xa6AnCreate a fuzz injector device.AjCreates a loopback device.B`Creates a packet capture writer.AnCreate a new buffer assembler.CmCreate a new packet buffer with the provided metadata and \xe2\x80\xa6BlCreate a ring buffer with the given storage.CiCreate a CIDR block from the given address and prefix \xe2\x80\xa6CgCreate an endpoint address from given address and port.CnCreate a new IpRepr, choosing the right IP version for the \xe2\x80\xa6ChCreate an IPv4 CIDR block from the given address and \xe2\x80\xa6ChCreate an IPv6 CIDR block from the given address and \xe2\x80\xa6DkCreate a new <code>Ipv6OptionsIterator</code>, used to iterate over the \xe2\x80\xa6ClCreate a new MLDv2 address record representation with an \xe2\x80\xa6CfCreates a new IPv4 address from four eight-bit octets.CfCreates a new IPv6 address from eight 16-bit segments.ChFormat the listing with the recorded parameters when \xe2\x80\xa6CkCreate an indentation state. The entire listing will be \xe2\x80\xa6fSafetyBkReturns an uninitialized <code>Talc</code>.AbCreate a new span.B`Create a new <code>Talck</code>.DdCreate a new <code>Duration</code> with the provided seconds and \xe2\x80\xa6EgCreate a new <code>PrimitiveDateTime</code> from the provided <code>Date</code> and \xe2\x80\xa6F`Create a new <code>UtcDateTime</code> from the provided <code>Date</code> and <code>Time</code>.CkCreates a new UART interface on the given memory mapped \xe2\x80\xa6CmCreates a new serial port interface on the given I/O base \xe2\x80\xa6BhCreates a new canonical virtual address.AoCreates a new physical address.BkCreates a new overaligned volatile pointer.BkCreates a new default initialized bitfield.00ChTurns the given pointer into a <code>VolatilePtr</code>.ChTurns the given pointer into a <code>VolatileRef</code>.C`Creates a new Flags entry. Ensures bit 1 is set.AfCreates a new PDEntry.AfCreates a new PTEntry.AhCreates a new empty TSS.AhCreates a new PML4Entry.AhCreates a new PML5Entry.AhCreates a new PDPTEntry.546AiInstantiate a new IoApic.CeCreate a new x2APIC driver object for the local core.BlCreate a new xAPIC object for the local CPU.AlCreate a new SegmentSelectorAhReturn new CpuId struct.BoCreates an I/O port with the given port number.CkCreates Some(RdRand) if RDRAND is supported, None otherwiseCkCreate a new PCID. Will result in a failure if the value ofEdCheck that <code>invlpgb</code> and <code>tlbsync</code> are supported and query \xe2\x80\xa6BhCreates a new canonical virtual address.AoCreates a new physical address.CgCreates a debug address register number if it is valid.DeCreates a new hardware breakpoint size if <code>size</code> is valid.AmCreates a new SegmentSelectorBcCreate an instance from a register.BfConvert a number into a priority classBcCreates an unused page table entry.AlCreates an empty page table.DfCreates a new index from the given <code>u16</code>. Panics if the \xe2\x80\xa6DgCreates a new offset from the given <code>u16</code>. Panics if the \xe2\x80\xa6DcCreates a new <code>MappedPageTable</code> that uses the passed \xe2\x80\xa6DiCreates a new <code>OffsetPageTable</code> that uses the given offset \xe2\x80\xa6ClCreates a new RecursivePageTable from the passed level 4 \xe2\x80\xa6AjCreate a new flush promise0CbCreates an empty GDT with the default length of 8.CjCreates a new interrupt stack frame with the given values.CbCreates a new IDT filled with non-present entries.1CjCreate a SelectorErrorCode. Returns None is any of the \xe2\x80\xa6CiCreates a new TSS with zeroed privilege and interrupt \xe2\x80\xa6BfConstructs a new <code>Unalign</code>.CmConstructs a new value, possibly performing an endianness \xe2\x80\xa600000000000DkExecutes the <code>nop</code> instructions, which performs no operation \xe2\x80\xa6DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa60000000BlReturns the complement of this set of flags.000111111111111111110000000000000000000011111111111111CcReturns the system time corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.BmGets the <code>n</code>th item of the stream.AnNumber as retrieved from cpuid0CfReturn the number of octets used for padding after \xe2\x80\xa6DkNumber of octets that are used for padding after <code>address[n]</code>\xe2\x80\xa6BdDefinitions for Virtio over PCI bus.FeObtain the number of times <code>Nanosecond</code> can fit into <code>T</code>. If <code>T</code> \xe2\x80\xa6FeObtain the number of times <code>Microsecond</code> can fit into <code>T</code>. If <code>T</code>\xe2\x80\xa6FeObtain the number of times <code>Millisecond</code> can fit into <code>T</code>. If <code>T</code>\xe2\x80\xa6FdObtain the number of times <code>Second</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FdObtain the number of times <code>Minute</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FbObtain the number of times <code>Hour</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FaObtain the number of times <code>Day</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FbObtain the number of times <code>Week</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa676543210CmRust-PHF is a library to generate efficient lookup tables \xe2\x80\xa6AnAccess to networking hardware.GaConstructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>\xe2\x80\xa6DiPins a variable of type <code>T</code> on the stack and rebinds it as \xe2\x80\xa6CmRemoves the last element from a vector and returns it, or \xe2\x80\xa6BgAttempts to pop an item from the queue.1CoRemoves the <em>top</em> (greatest if max-heap, smallest if \xe2\x80\xa6CfRemoves the peeked value from the heap and returns it.CiRemoves the last character from the string buffer and \xe2\x80\xa6BcPops the first element in the list.BhThis will pop the element from the list.ClRemove an item from the end of the vector and return it, \xe2\x80\xa6DiRaises self to the power of <code>exp</code>, using exponentiation by \xe2\x80\xa600000000000000000000000000000000000000000000000AdReturn the PSH flag.BkReturn the Querier\xe2\x80\x99s Robustness Variable.BhReturns the underlying raw mutex object.0CeReturns the underlying raw reader-writer lock object.BeGet the raw underlying address value.DiThe raw bits for this entry. Depending on the <code>Descriptor</code> \xe2\x80\xa6BnRead the RBP register (base pointer register).Ai<code>reg</code> propertyDhRemainder. Computes <code>self % rhs</code>, statically guaranteeing \xe2\x80\xa600000DoOn success, <code>0</code> is returned.  On error, <code>-1</code> is returned.ClNumber of bytes read on success. <code>-1</code> on failure.BlZero on success, <code>-1</code> on failure.DhFile descriptor upon successful opening or <code>-1</code> upon failure.BlRead the RIP register (instruction pointer).BfReturns the requested privilege level.CiThe full 64-bit canonical forms of the stack pointers \xe2\x80\xa6BoRead the RSP register (stack pointer register).AdReturn the RST flag.CcRuns the executor until the given future completes.000BdRuns the task by polling its future.ClEnable or disable the specified effects depending on the \xe2\x80\xa6BaTry to set the value of the cell.FnCall <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> \xe2\x80\xa60CeSets the contents of this cell to <code>value</code>.GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa6000000111110BmAn immutable set constructed at compile time.CkInserts or removes the specified flags depending on the \xe2\x80\xa6000222222222222222220000000000000000000022222222222222CkSets the inner <code>T</code>, dropping the previous value.ClUpdates the value in place as a primitive type, possibly \xe2\x80\xa600000000000AeProgram x86 enclaves.AmAn implementation of SipHash.DmReturns the difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa60000000CdReturns the set difference of the two sets of flags.000fPanics0000000000EfSubtract the sub-day time of the <code>Duration</code> from the <code>Time</code>. \xe2\x80\xa6EfSubtract two <code>Time</code>s, returning the <code>Duration</code> between. This \xe2\x80\xa6DgSubtract the sub-day time of the [<code>std::time::Duration</code>] \xe2\x80\xa633335555555555555555544444444444444444444BjSubtract an offset from a virtual address.BmReturns the difference between two addresses.77777777777777AdReturn the SYN flag.CkThis is the name associated with this file system.  The \xe2\x80\xa6CjFunctions to flush the translation lookaside buffer (TLB).0CeProvides a type for the task state segment structure.jCache type0CgGenerates a random <code>u16</code> in the given range.CgGenerates a random <code>u32</code> in the given range.CgGenerates a random <code>u64</code> in the given range.AdReturn the URG flag.ChA contiguous growable array type with heap-allocated \xe2\x80\xa6CdCreates a <code>Vec</code> containing the arguments.BbA fixed capacity <code>Vec</code>.CkData structures and definitions used by Virtual Machine \xe2\x80\xa6CgVirtualize processor hardware for multiple software \xe2\x80\xa6AiVQ number to be notified.C`Joins two futures, waiting for both to complete.CbZips up two streams into a single stream of pairs.D`AGP Target PCI-PCI bridge capability, Cap ID = <code>0x0E</code>BhAvailable 4-bit ANSI color palette codesClMSR containing the segment base. This MSR can be used to \xe2\x80\xa6BfThe size of this integer type in bits.00000000000000000000000BdThe size of an IPv4 address in bits.BdThe size of an IPv6 address in bits.222222222222222222222222A`Invalid exchangeoBad file numberAjInvalid request descriptorAiThe underlying bits type.CiA bits type that can be used as storage for a flags type.DlBlue: #4 (foreground code <code>34</code>, background code <code>44</code>).BnCapture both received and transmitted packets.ClVerify checksum when receiving and compute checksum when \xe2\x80\xa6AgDevice or resource busyChDevice handles packets with partial checksum.   This \xe2\x80\xa6kvirtio CAIFAkCommunication error on sendmCommand classDlCyan: #6 (foreground code <code>36</code>, background code <code>46</code>).jData cache0BiDate in the proleptic Gregorian calendar.ClEnable events for a specific descriptor (as specified by \xe2\x80\xa6AkPacked Virtqueue DescriptorAjSplit Virtqueue DescriptorBeThe Extended Feature Enable Register.BgThe element type of the trailing slice.BaPort address = <code>0x540</code>B`Exit the VM and return a status.AbTest for existencenFile too largeCcA defined flags value that may be named or unnamed.BlRepresents the level for a page-map level-4.BaThe queue is full but not closed.CnThe target slice was full and so could not receive any new \xe2\x80\xa6CaError returned when enqueuing into a full buffer.Ce<code>Future</code> for the <code>fuse</code> method.CeStream for the <code>StreamExt::fuse()</code> method.kGPIO deviceCiIf this flag is set, it indicates that the page fault \xe2\x80\xa6BeEquivalent to <code>1.hours()</code>.AkNetwork Device Header FlagsAnRedirect Datagram for the HostBmA unit of time representing exactly one hour.0CiA 128-bit signed integer stored in big-endian byte order.CiA 128-bit signed integer stored in little-endian byte \xe2\x80\xa6CjA 128-bit signed integer stored in network-endian byte \xe2\x80\xa6CiA 128-bit signed integer stored in native-endian byte \xe2\x80\xa6CfA 128-bit signed integer stored in a given byte order.BdInitial value for an unlocked mutex.nInitial value.1CbInitial value for an unlocked <code>RwLock</code>.AbIdentifier removedAeThe \xe2\x80\x9cinfo\xe2\x80\x9d level.BoCorresponds to the <code>Info</code> log level.CgDelivers an INIT request to the target processor or \xe2\x80\xa6CdDevice can send 1 interrupt. No interrupt vector \xe2\x80\xa6AlDevice can send 2 interruptsAlDevice can send 4 interruptsAlDevice can send 8 interruptsAgInterrupted system callA`An IPv4 address.A`An IPv6 address.AmValues yielded by the stream.BlResults element type, e.g. <code>u32</code>.BcThe type of the array\xe2\x80\x99s elements.AnAn iterator over flags values.BlStream for the <code>iter()</code> function.DgAn iterator over the entries of a <code>HashMap</code> in arbitrary \xe2\x80\xa6CeAn iterator over the items of a <code>HashSet</code>.DiAn iterator over the entries of a <code>HashTable</code> in arbitrary \xe2\x80\xa6CbIterator over the contents of a <code>Deque</code>CfAn iterator over the items of a <code>IndexMap</code>.CfAn iterator over the items of a <code>IndexSet</code>.CfAn iterator over the items of a <code>LinearMap</code>BfAn iterator over the items of a queue.CbAn iterator over the values in a <code>Set</code>.CiAn iterator over the values in a <code>OrderedSet</code>.CkAn iterator over the values stored in the <code>Slab</code>DkAn iterator over the keys of a <code>HashMap</code> in arbitrary order. \xe2\x80\xa6CeAn iterator over the keys of a <code>IndexMap</code>.C`An iterator over the keys in a <code>Map</code>.CgAn iterator over the keys in a <code>OrderedMap</code>.BjThe binary heap kind: min-heap or max-heapBjThe linked list kind: min-list or max-listCaA value which is initialized on the first access.EdA <code>generic_once_cell::Lazy</code>, initialized using <code>RawSpinMutex</code>.1C`The future returned by <code>Mutex::lock</code>.BcToo many symbolic links encounteredBlMSI-X capability, Cap ID = <code>0x11</code>CeThis marks a buffer as continuing via the next field.CmCan be used as a selector into a non-existent segment and \xe2\x80\xa6BlA node in the <code>SortedLinkedList</code>.BmAn optional ranged value that is not present.00000000000AdThe result is empty.BoSocket state is guaranteed to not have changed.CeNo packet was processed. You don\xe2\x80\x99t need to call \xe2\x80\xa6AkIgnore checksum completely.AhOut of streams resourcesCeA elf note header entry containing the used Uhyve \xe2\x80\xa6AeNull - No more cachesBlNull (indicates this sub-leaf is not valid).10AiNo such device or addressBlStream for the <code>once()</code> function.BlEnables process-context identifiers (PCIDs).AoA page directory pointer table.mA PML4 table.lA PML5 tableAa1 byte of paddingAiMultiple bytes of paddingC`A type wrapping a base page with a 4 KiB buffer.0jPage FaultAfA virtual memory page.BlPCI-X capability, Cap ID = <code>0x07</code>ClStructure of a PCID. A PCID has to be &lt;= 4096 for x86_64.AgOperation not permittedkBroken pipekPMEM deviceAfA read-write I/O port.CmQEMU is the hypervisor identity when QEMU is used without \xe2\x80\xa60Cm0: The fault was not caused by reserved bit violation. 1: \xe2\x80\xa6AhTest for read permissionkRDMA deviceCaThe future returned by <code>RwLock::read</code>.A`Blocking reader.Aex86 Protection levelsAeRead-only file systemDfRepresents the root (<code>/</code>) node with specific helper methodskRPMB deviceBmIA32_S_CET: supervisor mode CET configurationAgThe page size in bytes.D`Configuration <code>cols</code> and <code>rows</code> are valid.11BeCPU is in single-step execution mode.CeStream for the <code>StreamExt::scan()</code> method.kSCMI deviceiSCSI hostBkSeed type, which is restricted to types \xe2\x80\xa6AnBlocking seek within streams.\\BlThe conversion source was of incorrect size.0000CeStream for the <code>StreamExt::skip()</code> method.CcSkip this option and continue processing the packetBmPre-allocated storage for a uniform data typeCaCreates an optional ranged value that is present.00000000000CjRepresents an interval of memory <code>[base, acme)</code>oRapid spinning.oNo such processAfSyscall Register: STARBbBreakpoint condition was detected.CeStream for the <code>StreamExt::take()</code> method.AcThe Talc Allocator!oA spawned task.CeStream for the <code>StreamExt::then()</code> method.mTimer expiredCiThe clock time within a given date. Nanosecond precision.CkA 128-bit unsigned integer stored in big-endian byte order.CkA 128-bit unsigned integer stored in little-endian byte \xe2\x80\xa6ClA 128-bit unsigned integer stored in network-endian byte \xe2\x80\xa6CkA 128-bit unsigned integer stored in native-endian byte \xe2\x80\xa6ChA 128-bit unsigned integer stored in a given byte order.BgIA32_U_CET: user mode CET configurationBaPort address = <code>0x800</code>AgThe Virtqueue Used RingBdVirtual-processor identifier (VPID).C`Combine single vectors into a multi-lane vector.ClA vector composed of two elements, which may be words or \xe2\x80\xa6CmA vector composed of four elements, which may be words or \xe2\x80\xa6AgVLAN filtering commandsBeEquivalent to <code>1.weeks()</code>.AiTest for write permissionAeThe \xe2\x80\x9cwarn\xe2\x80\x9d level.BoCorresponds to the <code>Warn</code> log level.BmA unit of time representing exactly one week.0BeExtended feature enable mask registerAmTest for execution permissionAaCross-device linkBgEquivalent to <code>0.seconds()</code>.oThe value zero.00000000000oBuffer Address.AiAddress (guest-physical).ClReturns the physical address mapped by this entry, might \xe2\x80\xa6BkPhysical and virtual addresses manipulationClRegister information and driver to program xAPIC, X2APIC \xe2\x80\xa6BoArchitecture-specific architecture abstraction.BcArchitecture specific address typesBgNr of items in the kernel command line.AaThe message body.AfSet <code>args</code>.ClPointer to a memory section in the VM memory which holds \xe2\x80\xa6BkOnly flush TLB entries with the given ASID.AcThe requested ASID.ClProvides a reference to the back element, or None if the \xe2\x80\xa6BoPointer to the memory region containing the DT.0CjA 16-bit unsigned integer stored in big-endian byte order.0CjA 32-bit unsigned integer stored in big-endian byte order.0CjA 64-bit unsigned integer stored in big-endian byte order.0AnGet the underlying bits value.00000000CdReturns the raw value of the flags currently stored.000111111111111111110000000000000000000011CeReturns the raw value of the fields currently stored.222222222222AnApply <code>bold</code> effectBeGenerates a random <code>bool</code>.CmTemporarily yields the mutex to a waiting thread if there \xe2\x80\xa60000DkTemporarily yields the <code>RwLock</code> to a waiting thread if there \xe2\x80\xa600ChGenerates a random <code>char</code> in the given range.BjClears the AC flag bit in EFLAGS register.DmThe <em>core</em> part of the RNG, implementing the <code>generate</code> \xe2\x80\xa60CmReturn the <code>/cpus</code> node, which is always availablehCommandsBkReturn a pointer to the type-specific data.AgReturn the option data.0BoGet the <code>Date</code> in the stored offset.DjGet the <code>Date</code> component of the <code>PrimitiveDateTime</code>.DdGet the <code>Date</code> component of the <code>UtcDateTime</code>.DeCreate a new <code>Duration</code> with the given number of days. \xe2\x80\xa6CgCreate a <code>Duration</code> from the number of days.BlDescription of the cache (from Intel Manual)C`If desc_event_flags set to RING_EVENT_FLAGS_DESC1CbReturn the Differential Services Code Point field.CdEmit a high-level representation into an Address \xe2\x80\xa6DeEmit a  <code>DhcpOption</code> into a <code>DhcpOptionWriter</code>.ChEmit a high-level representation into a Dynamic Host \xe2\x80\xa6CkEmit a high-level representation into an Ethernet II frame.CmEmit a high-level representation into an Internet Control \xe2\x80\xa60CkEmit a high-level representation into an Internet Group \xe2\x80\xa6CbEmit this high-level representation into a buffer.CnEmit a high-level representation into an Internet Protocol \xe2\x80\xa60CkEmit a high-level representation into an IPv6 Extension \xe2\x80\xa6CjEmit a high-level representation into an IPv6 Fragment \xe2\x80\xa6ClEmit a high-level representation into an IPv6 Hop-by-Hop \xe2\x80\xa62CiEmit a high-level representation into an IPv6 Routing \xe2\x80\xa6CjEmit a high-level representation into an MLDv2 address \xe2\x80\xa6CfEmit a high-level representation into an MLDv2 packet.CfEmit a high-level representation into an NDISC Option.ChEmit a high-level representation into a Transmission \xe2\x80\xa6CjEmit a high-level representation into an User Datagram \xe2\x80\xa6AoNr of items in the environment.ClPointer to a memory section in the VM memory which holds \xe2\x80\xa6BgThe source file containing the message.AeSet <code>file</code>BcFill a byte slice with random data.CiCharacter used as \xe2\x80\x98fill\xe2\x80\x99 whenever there is alignment.DgFinds the first item of the stream for which <code>predicate</code> \xe2\x80\xa6CiReturns a reference to an entry in the table with the \xe2\x80\xa6BjAccumulates a computation over the stream.ClClones the generator by deterministically deriving a new \xe2\x80\xa6BmFree previously allocated/reallocated memory.AoReturns the argument unchanged.0000000DfAllocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.CgConvert a boxed array into a vector by transferring \xe2\x80\xa6CgConvert a boxed slice into a vector by transferring \xe2\x80\xa63EeAllocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>\xe2\x80\x99s items.04DcConverts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>DcConverts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>DjConverts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>DaConverts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>BdConvert a vector into a boxed slice.9CjConverts a <code>T</code> into a <code>Box&lt;T&gt;</code>::DgAlways evaluates to <code>TryReserveErrorKind::CapacityOverflow</code>.;;;;;;;;;;;;;;DgCreate a new, initialized <code>OnceCell</code> from an existing value.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<EhConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; isize &gt;</code>] losslessly.EgConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; isize &gt;</code>] losslessly.EhConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; i32 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Be &lt; i32 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Be &lt; i64 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i16 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.EfConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i16 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u64 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; u64 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; u64 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; u32 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; usize &gt;</code>] losslessly.EgConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Be &lt; u8 &gt;</code>] \xe2\x80\xa6EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u64 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u32 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u16 &gt;</code>] losslessly.EgConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.4EaCreate an integer from its representation as a [<code>Be &lt; u16 &gt;</code>]\xe2\x80\xa650EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.AoReturns the argument unchanged.EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Be &lt; u32 &gt;</code>]\xe2\x80\xa6<EhConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.8EhConverts [<code>Be &lt; u64 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EiConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; isize &gt;</code>] losslessly.EiConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; usize &gt;</code>] losslessly.4EaCreate an integer from its representation as a [<code>Be &lt; u64 &gt;</code>]\xe2\x80\xa6EhConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u64 &gt;</code>]\xe2\x80\xa6EaCreate an integer from its representation as a [<code>Le &lt; u32 &gt;</code>]\xe2\x80\xa6EaCreate an integer from its representation as a [<code>Le &lt; u16 &gt;</code>]\xe2\x80\xa6EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.?EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i16 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u8 &gt;</code>] \xe2\x80\xa698EhConverts [<code>Le &lt; i64 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Le &lt; i32 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Le &lt; i32 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EgConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u16 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u32 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EiConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; isize &gt;</code>] losslessly.EhConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; usize &gt;</code>] losslessly.EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; u32 &gt;</code>] losslessly.;EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; u64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u16 &gt;</code>]\xe2\x80\xa6EgConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; u64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u8 &gt;</code>] \xe2\x80\xa6EhConverts [<code>Le &lt; u64 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u64 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.EgConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i16 &gt;</code>] losslessly.EfConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EfConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EiConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; usize &gt;</code>] losslessly.EgConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EhConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; isize &gt;</code>] losslessly.EhConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; isize &gt;</code>] losslessly.;EgConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.AoReturns the argument unchanged`Creates an <code>Ipv4Addr</code> from a four element byte array.EgUses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> \xe2\x80\xa622EhUses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> \xe2\x80\xa6DdCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.DcCreates an <code>Ipv6Addr</code> from a sixteen element byte array.55555555555555555fPanics666066666666666666666666666666666666666666666EfConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.?EhConverts [<code>Be &lt; u64 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u16 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Be &lt; u64 &gt;</code>]\xe2\x80\xa6EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u32 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Be &lt; u32 &gt;</code>]\xe2\x80\xa6EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u64 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Be &lt; u16 &gt;</code>]\xe2\x80\xa6EgConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Be &lt; u8 &gt;</code>] \xe2\x80\xa6EhConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; usize &gt;</code>] losslessly.5EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; u32 &gt;</code>] losslessly.4EgConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; u64 &gt;</code>] losslessly.3EhConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.6EgConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; u64 &gt;</code>] losslessly.5EhConverts [<code>Be &lt; u32 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.6EhConverts [<code>Be &lt; u64 &gt;</code>] to [<code>Be &lt; u128 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i16 &gt;</code>] losslessly.EiConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; isize &gt;</code>] losslessly.EhConverts [<code>Be &lt; i64 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; isize &gt;</code>] losslessly.EhConverts [<code>Be &lt; i32 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EiConverts [<code>Be &lt; u16 &gt;</code>] to [<code>Be &lt; usize &gt;</code>] losslessly.EfConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i16 &gt;</code>] losslessly.EgConverts [<code>Be &lt; i32 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Be &lt; u8 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EgConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Be &lt; i8 &gt;</code>] to [<code>Be &lt; isize &gt;</code>] losslessly.EgConverts [<code>Be &lt; i16 &gt;</code>] to [<code>Be &lt; i64 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u64 &gt;</code>]\xe2\x80\xa6EgConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; isize &gt;</code>] losslessly.EgConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Le &lt; i32 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EfConverts [<code>Le &lt; i8 &gt;</code>] to [<code>Le &lt; i16 &gt;</code>] losslessly.EhConverts [<code>Le &lt; i32 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EiConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; usize &gt;</code>] losslessly.EhConverts [<code>Le &lt; i64 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; isize &gt;</code>] losslessly.EiConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; isize &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i16 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u64 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u8 &gt;</code>] \xe2\x80\xa6EhConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.1EgConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; u64 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u16 &gt;</code>]\xe2\x80\xa6EhConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.4EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; u64 &gt;</code>] losslessly.2EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; u32 &gt;</code>] losslessly.EaCreate an integer from its representation as a [<code>Le &lt; u32 &gt;</code>]\xe2\x80\xa6EhConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; usize &gt;</code>] losslessly.8EgConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u128 &gt;</code>] losslessly.62EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u32 &gt;</code>] losslessly.EgConverts [<code>Le &lt; i16 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u64 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u16 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Le &lt; u32 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EgConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.AoReturns the argument unchanged.EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; i32 &gt;</code>] losslessly.EgConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; i64 &gt;</code>] losslessly.EhConverts [<code>Le &lt; u16 &gt;</code>] to [<code>Le &lt; i128 &gt;</code>] losslessly.EfConverts [<code>Le &lt; u8 &gt;</code>] to [<code>Le &lt; u64 &gt;</code>] losslessly.CeReturns the device-independent feature bits while \xe2\x80\xa600005555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555CeInfallibly discards the alignment error from this \xe2\x80\xa6666EcInfallibly extracts the <code>SizeError</code> from this <code>CastError</code> \xe2\x80\xa677DhFuse a future such that <code>poll</code> will never again be called \xe2\x80\xa6CnFuses the stream so that it stops yielding items after the \xe2\x80\xa6BdAttempts to extend the memory block.BfRe-allocate to set the capacity to \xe2\x80\xa6ClGrow a previously allocated/reallocated region of memory \xe2\x80\xa6CmStops instruction execution and places the processor in a \xe2\x80\xa6Co<code>key</code> is from <code>phf_generator::HashState</code>.CmHash a byte array - This is the easiest and safest way to \xe2\x80\xa600000CaReturns the value of the <code>hops</code> field.BfFields used to access host-state area.BhGet the clock hour in the stored offset.AcGet the clock hour.00ChGenerates a random <code>i128</code> in the given range.BaLogs a message at the info level.BcInitializes the memory-mapped UART.AlInitializes the serial port.DbCause a breakpoint exception by invoking the <code>int3</code> \xe2\x80\xa6BaCalls <code>U::from(self)</codelIterate over enabled effectsCfYield the bits of a source flags value in a set of \xe2\x80\xa6BfYield a set of contained flags values.0BbCreates a stream from an iterator.CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa60CmReturns an iterator visiting all values in the underlying \xe2\x80\xa6BcReturns an iterator over the deque.CnReturn an iterator over the key-value pairs of the map, in \xe2\x80\xa6CeReturn an iterator over the values of the set, in \xe2\x80\xa65BeGet an iterator over the sorted list.CaIterates from the front of the queue to the back.9999999BmIterate through all supported logging levels.BoIterate through all supported filtering levels.DdProduces an <code>AddrIter</code> to iterate over this memory range.CiReturns an iterator over all vendors in the PCI database.CiReturns an iterator over all classes in the PCI database.>BoReturns an iterator over the values in the set.0ChIterator over extended state enumeration levels &gt;= 2.AlIterator over SGX sub-leafs.BaReturn an iterator over the slab.BeGet an iterator to the inner sockets.BfYield a set of contained flags values.000000000000000043000000000000CgReturns an iterator over the entries of the page table.11CkJoins arguments into a single command line suitable for \xe2\x80\xa6CiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa6CmReturn an iterator over the keys of the map, in insertion \xe2\x80\xa6CaAn iterator visiting all keys in arbitrary order.BmReturns an iterator over the keys in the map.0B`Get the keys used by this hasher00000CbDetails about the allocation that caused the errorCiOutputs the detailed cause of parsing an integer failing.AkGet the kind of this error.BdReturns the last item in the stream.AkGet the last key-value pairAbGet the last valueCjReturns the segment selector from the local descriptor \xe2\x80\xa6CjA 16-bit unsigned integer stored in little-endian byte \xe2\x80\xa60CjA 32-bit unsigned integer stored in little-endian byte \xe2\x80\xa60CjA 64-bit unsigned integer stored in little-endian byte \xe2\x80\xa60DjConsumes and leaks the <code>Vec</code>, returning a mutable reference \xe2\x80\xa6DkConsumes and leaks the <code>Box</code>, returning a mutable reference, \xe2\x80\xa6CnConsumes the <code>Executor</code> and intentionally leaks it.DcConsumes the <code>LocalExecutor</code> and intentionally leaks it.ClLeaks the mutex guard and returns a mutable reference to \xe2\x80\xa6CiLoad the GDTR register with the specified base and limit.kLoad a GDT.CiLoad the IDTR register with the specified base and limit.lLoad an IDT.B`The line containing the message.AeSet <code>line</code>BcLoads a value from the atomic cell.DjLoads the GDT in the CPU using the <code>lgdt</code> instruction. This \xe2\x80\xa6CmLoads the IDT in the CPU using the <code>lidt</code> command.AcAcquires the mutex.CmAcquires this mutex, blocking the current thread until it \xe2\x80\xa6CmAcquires a mutex, blocking the current thread until it is \xe2\x80\xa6CkAcquires this mutex, blocking if it\xe2\x80\x99s held by another \xe2\x80\xa6CkAcquires a reentrant mutex, blocking the current thread \xe2\x80\xa6EhWrap in <code>Talck</code>, a mutex-locked wrapper struct using <code>lock_api</code>\xe2\x80\xa6CfLock the mutex and access the inner <code>Talc</code>.ClThe Packet ID associated with the frame received by this \xe2\x80\xa6BaDefinitions for Virtio over MMIO.C`Access permissions upon opening/creating a file.CiA fixed capacity multiple-producer, multiple-consumer \xe2\x80\xa6AjGet the name of this flag.mProperty nameAlReturns the vendor\xe2\x80\x99s name.AlReturns the device\xe2\x80\x99s name.AoReturns the subsystem\xe2\x80\x99s name.AjReturns the class\xe2\x80\x99 name.AmReturns the subclass\xe2\x80\x99 name.BkReturns the programming interface\xe2\x80\x99s name.CkObtain the name of the component whose value was out of \xe2\x80\xa6BlAddress of the file that should be unlinked.BbPathname of the file to be opened.BfRetrieves the next item in the stream.C`Iterate over all SoC vendor specific attributes.BcIterate over all cache information.CbIterate over all cache info subleafs for this CPU.CjIterate over each sub-leaf with an address translation \xe2\x80\xa6AcGet the next month.AeGet the next weekday.AnNext field if flags &amp; NEXT5436BkCreates a stream that yields a single item.BkAttempts to open a file in read-write mode.AdWrite 8 bits to portAeWrite 32 bits to portAeWrite 16 bits to portAoReturns the page to be flushed.CjAbstractions for default-sized and huge virtual memory \xe2\x80\xa6BkOnly flush TLB entries with the given PCID.CoReturns the <em>top</em> (greatest if max-heap, smallest if \xe2\x80\xa6AjPeek at the first element.CmReturns a reference to the item in the front of the queue \xe2\x80\xa6CfReturns the item in the front of the queue without \xe2\x80\xa6CjPeek at a sequence of received octets without removing \xe2\x80\xa6ClPeek at a single packet from the buffer without removing \xe2\x80\xa6BjPoll the event listener until it is ready.F`A convenience for calling <code>Future::poll()</code> on <code>!</code><code>Unpin</code> types.BiWait for some event on a file descriptor.BkQuery the socket for configuration changes.CgTransmit packets queued in the sockets, and receive \xe2\x80\xa6BaGet a hypercall\xe2\x80\x99s port address.AcAccess to I/O portsAoTraits for accessing I/O ports.BoAppends an element to the back of a collection.BhAttempts to push an item into the queue.CjAppends an <code>item</code> to the back of the collectionBdPushes an item onto the binary heap.DkAppends the given <code>char</code> to the end of this <code>String</code>.CjPushes an element to the linked list and sorts it into \xe2\x80\xa6AmAppend an item to the vector.BkReturn the Querier\xe2\x80\x99s Query Interval Code.CmThread-safe, non-blocking, \xe2\x80\x9cfirst one wins\xe2\x80\x9d flavor of \xe2\x80\xa6AeAcquires a read lock.CgRead some bytes from this source into the specified \xe2\x80\xa6DhLocks this <code>RwLock</code> with shared read access, blocking the \xe2\x80\xa6DePerforms a PCI read at <code>address</code> with <code>offset</code>.C`Performs a volatile read of the contained value.000AdReads from the port.BeReads the current breakpoint address.BbRead the current set of DR6 flags.BbRead the current set of DR7 flags.CaReturns the current value of the RFLAGS register.AjRead 64 bits msr register.AlRead the current EFER flags.BaRead the current FsBase register.BaRead the current GsBase register.BgRead the current KernelGsBase register.CaRead the Ring 0 and Ring 3 segment bases. ReturnsCnRead the current LStar register. This holds the target RIP \xe2\x80\xa6ClRead to the SFMask register. The SFMASK register is used \xe2\x80\xa6CiRead IA32_U_CET. Returns a tuple of the flags and the \xe2\x80\xa6CiRead IA32_S_CET. Returns a tuple of the flags and the \xe2\x80\xa6AmReads the IA32_APIC_BASE MSR.BbRead the current set of CR0 flags.CkRead the current page fault linear address from the CR2 \xe2\x80\xa6ChRead the current P4 table address from the CR3 register.BbRead the current set of CR4 flags.BgRead the current priority class in CR8.AhRead the value of MXCSR.BcRead the current set of XCR0 flags.AoReads a copy of <code>T</code>.DjCall <code>f</code> with the largest contiguous slice of octets in the \xe2\x80\xa6D`Return the root (<code>/</code>) node, which is always availableCnMaps items of the stream to new values using a state value \xe2\x80\xa6CjThe number of whole seconds that have passed since the \xe2\x80\xa6CjThe number of whole seconds in this <code>Duration</code>.CaReturns the value of the <code>secs</code> field.Cmseconds elapsed since client began address acquisition or \xe2\x80\xa6BoInitializes this generator with the given seed.CkSeek to an offset, in bytes, in a stream. A seek beyond \xe2\x80\xa68B`Sends a byte on the serial port.CnSends a byte on the serial port. 0x08 (backspace) and 0x7F \xe2\x80\xa6oNumber of Sets.AkNumber of Sets (Bits 31-00)10BoRetrieve base and limit from the GDTR register.BcGet the address of the current GDT.BoRetrieve base and limit from the IDTR register.BcGet the address of the current IDT.ChThe minimum size in bytes for a memory block of this \xe2\x80\xa6AnSize of the memory reservationCnBig-endian encoded bytes making up the size portion of the \xe2\x80\xa6AgSize of the mapped areaAiSize of the memory regionCmThe minimum size in bytes for a memory block of this page \xe2\x80\xa6CkThe size in bytes (from the offset specified in EBX) of \xe2\x80\xa6CnSize of the corresponding EPC section within the Processor \xe2\x80\xa6BoReturns the number of items the array can hold.DhReturns the size of the span, else zero if <code>base &gt;= span</code>.32CcReturns the size field of a debug address register.BlReturns the size the page (4KB, 2MB or 1GB).ChReturns the size in bytes of all pages within the range.CiReturns the size in bytes of all frames within the range.BmReturns the size the frame (4KB, 2MB or 1GB).110CcSkips the first <code>n</code> items of the stream.BnPre-allocated storage for a uniform data type.AnBacks off in a lock-free loop.ClA fixed capacity single-producer, single-consumer (SPSC) \xe2\x80\xa6BhSets the AC flag bit in EFLAGS register.DiStores <code>val</code> into the atomic cell and returns the previous \xe2\x80\xa6ClSwaps elements at indices <code>i</code> and <code>j</code>.CoSwap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.DkTake the value out of this <code>OnceCell</code>, moving it back to the \xe2\x80\xa6BoTakes the value of the atomic cell, leaving \xe2\x80\xa6CaTakes the mutable reference to the wrapped value.ChTakes only the first <code>n</code> items of the stream.DkTakes the value out of this <code>OnceCell</code>, moving it back to an \xe2\x80\xa6CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa6313AiThe Talc allocator crate.AbTask notification.ClHelpers to program the task state segment. See Intel 3a, \xe2\x80\xa600CiMaps items of the stream to new values using an async \xe2\x80\xa6AcRuns a single task.000A`Time structures.mFeature flagsBoGet the <code>Time</code> in the stored offset.DjGet the <code>Time</code> component of the <code>PrimitiveDateTime</code>.DdGet the <code>Time</code> component of the <code>UtcDateTime</code>.BmFunctions to read time stamp counters on x86.CgReturns the trap flag of the provided debug address \xe2\x80\xa6ChGenerates a random <code>u128</code> in the given range.CcUtility functions, including updating time zone \xe2\x80\xa6AbUtility functions.BiVirtual-machine control structure fields.CjWait for the cell to be initialized, and then return a \xe2\x80\xa6CiBlocks the current task until all tasks reach this point.BlWait for the event listener to become ready.BaLogs a message at the warn level.AfWays of associativity.0BiLow-level packet access and construction.CjRead Extended Control Register XCR0. Only supported if \xe2\x80\xa6AiGet the year of the date.BnGet the year of the date in the stored offset.11CaCreates an address that points to <code>0</code>.00000000000AfPhysical Address zero.A`IO Address zero.AeVirtual Address zero.210ChCreates a virtual address that points to <code>0</code>.CiCreates a physical address that points to <code>0</code>.AcClears all entries.BhOverwrites <code>self</code> with zeros.AaPermission deniediTry againAnAn adress that can be aligned.DhTypes that can be used as the backing store for a <code>SmallVec</code>.AlThe Virtqueue Available RingCnAvailable to the OS, can be used to store additional data, \xe2\x80\xa6AlFile descriptor in bad stateAdBad font file formatDmBlack: #0 (foreground code <code>30</code>, background code <code>40</code>).lblock deviceAaPCI Capability 64CfStream for the <code>StreamExt::chain()</code> method.AbNo child processesAkChannel number out of rangeCbRepresents a PCI device class in the PCI database.AbTimer/Clock deviceAjAny ANSI color code schemeCnThe main type used to query information about the CPU we\xe2\x80\x99\xe2\x80\xa60CfStream for the <code>StreamExt::cycle()</code> method.BnSet by the CPU on a write to the mapped frame.AfThe \xe2\x80\x9cdebug\xe2\x80\x9d level.C`Corresponds to the <code>Debug</code> log level.eDebugBdA fixed capacity double-ended queue.AjVirtqueue descriptor flagsnQuota exceededCbA draining iterator for <code>Vec&lt;T&gt;</code>.CfStream for the <code>StreamExt::drain()</code> method.DeA draining iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6CmA draining iterator over the items of a <code>HashSet</code>.CoA draining iterator over the items of a <code>HashTable</code>.BiA draining iterator for <code>Vec</code>.BlA draining iterator for <code>String</code>.BiA draining iterator for <code>Slab</code>DgAn iterator that removes the items from a <code>SmallVec</code> and \xe2\x80\xa6AlA value with all bits unset.AiEmpty packet description.B`Empty Dr7 has bit 10 always set.BbThe queue is empty but not closed.BmStream for the <code>empty()</code> function.CcError returned when dequeuing from an empty buffer.ClA view into a single entry in a map, which may either be \xe2\x80\xa6ClA view into a single entry in a set, which may either be \xe2\x80\xa6CnA view into a single entry in a table, which may either be \xe2\x80\xa6AoA view into an entry in the mapAcKernel entry point.Bc8-byte entry in a descriptor table.BdAn Interrupt Descriptor Table entry.CcThe error type for I/O operations and system calls.CaError type of all the IO operations on this type.lError trait.BkThe type of failures yielded by this future0AfThe \xe2\x80\x9cerror\xe2\x80\x9d level.C`Corresponds to the <code>Error</code> log level.BnThe type returned in the event of a RNG error.AhParsing a packet failed.CmA unified error type for anything returned by a method in \xe2\x80\xa6CmA synchronization primitive for notifying async tasks and \xe2\x80\xa6CmReturn value for the <code>Dhcpv4Socket::poll</code> functionAcSocket Device EventkFile existsAiThe set of defined flags.kBad addressCkDelivers the interrupt specified in the vector field to \xe2\x80\xa6CdA set of defined flags using a bits type as storage.DmGreen: #2 (foreground code <code>32</code>, background code <code>42</code>).AcAn interrupt guard.AeIllegal byte sequencelInput deviceAmDevice can send 16 interruptsAmDevice can send 32 interruptsA`Invalid argumenthioMemorylIOMMU devicenIs a directoryCiA word-sized signed integer stored in a given byte order.AdIs a named type filenLevel 2 haltednLevel 3 haltedmLevel 3 resetAgSyscall Register: LSTARCnAn enum representing the available verbosity levels of the \xe2\x80\xa6iIPI LevelAhLink number out of rangeAcToo many open filesnToo many linksAcMonths of the year.oAn async mutex.CmA mutual exclusion primitive useful for protecting shared \xe2\x80\xa6oMXCSR register.AcFile table overflowl9P transporthNo anodeAjNo CSI structure availablenNo such deviceAiNo such file or directoryAjRequired key not availableAiNo record locks availablemOut of memoryAjNo message of desired typeAmMachine is not on the networkAePackage not installedAgNo space left on deviceAcDevice not a streamAjInvalid system call numberA`Not a typewriterAgUnspecified error kind.BaError returned by the inner Read.BbError returned by the inner Write.EaOwned variant, only available with the <code>std</code> or <code>alloc</code> \xe2\x80\xa60000BaA wrapper for a physical address.0nProtocol errorCiA statically allocated multi-producer, multi-consumer \xe2\x80\xa6CkA statically allocated single-producer, single-consumer \xe2\x80\xa6AiRequestor Privilege LevelAmMath result not representableAaA relax strategy.AiReset terminal formattingCmPrivilege-level 0 (most privilege): This level is used by \xe2\x80\xa6CnPrivilege-level 1 (moderate privilege): This level is used \xe2\x80\xa6CnPrivilege-level 2 (moderate privilege): Like level 1, this \xe2\x80\xa6CnPrivilege-level 3 (least privilege): This level is used by \xe2\x80\xa6ChA prefix of addresses that should be routed via a routererpmsglAudio devicelIllegal seekDfA <code>T</code> that has been split into two possibly-overlapping \xe2\x80\xa6mSrmount errorkStack FaultAaStale file handleC`Sets the offset to the provided number of bytes.C`The state of a TCP socket, according to RFC 793.AaANSI Text stylingBdBreakpoint condition 0 was detected.BdBreakpoint condition 1 was detected.BdBreakpoint condition 2 was detected.BdBreakpoint condition 3 was detected.CeTalc lock, contains a mutex-locked <code>Talc</code>.CbRepresents the level for a page-directory pointer.AfThe \xe2\x80\x9ctrace\xe2\x80\x9d level.C`Corresponds to the <code>Trace</code> log level.AiSource Route (DEPRECATED)BeType 2 Routing Header for Mobile IPv6fUhyve.DjA lazy iterator producing elements in the union of <code>HashSet</code>\xe2\x80\xa6AiVirtqueue used ring flagsnToo many usersCkA word-sized unsigned integer stored in a given byte order.B`A wrapper for a virtual address.0mSocket deviceCnThis marks a buffer as device write-only (otherwise device \xe2\x80\xa6DmWhite: #7 (foreground code <code>37</code>, background code <code>47</code>).CbThe future returned by <code>RwLock::write</code>.A`Blocking writer.AkState for the XAPIC driver.BjA core destination encoded as an xAPIC ID.mExchange fullAnAborts the connection, if any.DoRaises <code>base</code> if <code>base</code> is smaller than <code>min</code>.C`AHash is a high performance keyed hash function.CiThe minimum byte alignment for a memory block of this \xe2\x80\xa6A`The minimum byteBm<code>align</code> of the TLS program header.CeFlag indicating what form of alignment was requested.AfMemory allocation APIsBkAllocates memory with the global allocator.CoAllocates memory as described by the given <code>layout</code>.C`Lengths of the items in the kernel command line.DaCreates a layout describing the record for a <code>[T; n]</code>.CkA 128-bit unsigned integer stored in big-endian byte order.0DoLowers <code>acme</code> if <code>acme</code> is greater than <code>max</code>.FfReturns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.D`The bitwise or (<code>|</code>) of the bits in two flags values.0000000BkReturns the union of the two sets of flags.000111111111111111110000000000000000000011111111111111AoApply <code>blink</code> effectCnThe <code>BlockRngCore</code> trait and implementation helpersCgThe <code>Box&lt;T&gt;</code> type for heap allocation.CcInvoke the builder and return a <code>Record</code>BgReturns a <code>Metadata</code> object.BjCreate a <code>InvlpgbFlushBuilder</code>.AjGets the underlying bytes.BnAppends another stream to the end of this one.CcAttempt to initialize a new heap for the allocator.CmReturns the <code>Class</code> that this subclass belongs to.BgClears the vector, removing all values.AjReset all effects in-placeAmUnsets all bits in the flags.0CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6BdClears the set, removing all values.BfClears the table, removing all values.5BeDrops all items from the binary heap.BfClears the deque, removing all values.AaClears the bufferCkRemove all key-value pairs in the map, while preserving \xe2\x80\xa65BmClears the map, removing all key-value pairs.CjTruncates this <code>String</code>, removing all contents.AmClear the slab of all values.BdRemove all elements from the vector.AfClear the ring buffer.DgReturns a new box with a <code>clone()</code> of this box\xe2\x80\x99s contents.CmClones the generator by creating a new generator with the \xe2\x80\xa6AaCloses the queue.CfClose the transmit half of the full-duplex connection.BiCounts the number of items in the stream.BcMacro which queries cpuid directly.BcSupport for the CPUID instructions.1CbRepeats the stream from beginning to end, forever.Ac64-bit inode numberCaField without meaning. Kept for BW compatibility.BbLogs a message at the debug level.BlFunctions to read and write debug registers.DeWhen the debug-exception mechanism is enabled, a <code>#DB</code> \xe2\x80\xa6CgRemoves consecutive repeated elements in the vector \xe2\x80\xa6BgRemoves consecutive duplicate elements.CgMacro to create a <code>ScopeGuard</code> (always run).BdA fixed capacity double-ended queue.ChGenerates a random digit in the given <code>base</code>.ChRemoves the specified range from the vector in bulk, \xe2\x80\xa6CfYields all immediately available values from a stream.CgClears the map, returning all key-value pairs as an \xe2\x80\xa6CfClears the set, returning all elements in an iterator.03ChRemoves the specified range from the string in bulk, \xe2\x80\xa6CmReturn a draining iterator that removes all elements from \xe2\x80\xa6CjCreates a draining iterator that removes the specified \xe2\x80\xa6BfGet a flags value with all bits unset.0AhCreates an empty stream.11111111AnReturns an empty set of flags.000AeCreate an empty span.3333333333333333311111111111111111111333333333333EcCreates an empty GDT which can hold <code>MAX</code> number of <code>Entry</code>s.44CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa6CkGets the given value\xe2\x80\x99s corresponding entry in the set \xe2\x80\xa6DjReturns an <code>Entry</code> for an entry in the table with the given \xe2\x80\xa6BoThe entry in the map that was already occupied.BjReturns an entry for the corresponding keyBgLength of the items in the environment.AeSystem error numbers.BbLogs a message at the error level.CjVarious error types returned by methods in the time crate.BaTypes related to error reporting.AiThe kind of control eventBmA RangedU8 that is always <code>VALUE</code>.BnA RangedU16 that is always <code>VALUE</code>.BnA RangedU32 that is always <code>VALUE</code>.BnA RangedU64 that is always <code>VALUE</code>.BoA RangedU128 that is always <code>VALUE</code>.C`A RangedUsize that is always <code>VALUE</code>.BmA RangedI8 that is always <code>VALUE</code>.BnA RangedI16 that is always <code>VALUE</code>.BnA RangedI32 that is always <code>VALUE</code>.BnA RangedI64 that is always <code>VALUE</code>.BoA RangedI128 that is always <code>VALUE</code>.C`A RangedIsize that is always <code>VALUE</code>.AhIntel fence instructionsC`The first listed CPU ID, which will always existAgFirst compatible stringAlGet the first key-value pairAcGet the first valueAmPosix file access mode flags.BgThe flags depending on descriptor type.BmThe flags as indicated in <code>DescF</code>.BnReturns the flags corresponding to this entry.0000C`Returns the <code>Dr7Flags</code> in this value.B`Returns the flags of this entry.BoThe entry flags in the lowest-level page table.C`Flush this output stream, blocking until all \xe2\x80\xa6AmFlushes any buffered records.BaFlush data written into the sync.0DiInvalidate the given address in the TLB using the <code>invlpg</code> \xe2\x80\xa60AbExecute the flush.CiFlush the page from the TLB to ensure that the newest \xe2\x80\xa6CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60C`Returns the physical frame mapped by this entry.AaThe mapped frame.CkAbstractions for default-sized and huge physical memory \xe2\x80\xa6CmProvides a reference to the front element, or None if the \xe2\x80\xa6EhCreate a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure \xe2\x80\xa6AhType aliases for guards.BgFields used to access guest-state area.DfCreate a new <code>Duration</code> with the given number of hours. \xe2\x80\xa6ChCreate a <code>Duration</code> from the number of hours.BiReturn the fragment identification field.BoReturn the fragment identification value field.CgThe identification for every packet that is fragmented.AhNetwork interface logic.DaHelper functions for implementing <code>RngCore</code> functions.AaGet the raw valueCiReturns a reference to the value corresponding to the \xe2\x80\xa6CmReturns references to both the key and values at an index \xe2\x80\xa6CnReturns a reference to the key at an index within the list \xe2\x80\xa6BeGet the index into the result buffer.0CaReturns segment selector\xe2\x80\x99s index in GDT or LDT.AfReturns the GDT index.BoReturns the IDT entry with the specified index.0000000000000CaThe index of the selector which caused the error.CkCall the <code>iretq</code> (interrupt return) instruction.CiGenerates a random <code>isize</code> in the given range.CkA 128-bit unsigned integer stored in little-endian byte \xe2\x80\xa60BcThe verbosity level of the message.BaSet <code>Metadata::level</code>.1AnSetter for <code>level</code>.AiCache Level (starts at 1)0oSize of the DT.AlSize of the DT in bytes - 1.CkReturns the value of the limit for a gdt pointer. It is \xe2\x80\xa6DnLinux FUSE device interface (<code>fuse(4)</code>, <code>linux/fuse.h</code>).BfGet lower 32-bits of the Icr register.AlThe major version of Hermit.Bm<code>memsz</code> of the TLS program header.AlThe minor version of Hermit.Ak<code>model</code> propertynGet the month.BoGet the month of the date in the stored offset.AjGet the month of the date.0CnReturns a reference to the original <code>Mutex</code> object.BkFunctions to read and write MXCSR register.CjReturns the number of available address space identifiers.AjThe number of valid ASIDS.CjReturns the length of this page range in pages of size \xe2\x80\xa6AgFlush a range of pages.ClParse an Address Resolution Protocol packet and return a \xe2\x80\xa6CkParse a DHCP packet and return a high-level representation.CfParse an Ethernet II frame and return a high-level \xe2\x80\xa6ChParse an Internet Control Message Protocol version 4 \xe2\x80\xa6ChParse an Internet Control Message Protocol version 6 \xe2\x80\xa6ClParse an Internet Group Management Protocol v1/v2 packet \xe2\x80\xa6ClParse an Internet Protocol version 4 packet and return a \xe2\x80\xa6ClParse an Internet Protocol version 6 packet and return a \xe2\x80\xa6CfParse an IPv6 Extension Header Header and return a \xe2\x80\xa6CiParse an IPv6 Fragment Header and return a high-level \xe2\x80\xa6CkParse an IPv6 Hop-by-Hop Header and return a high-level \xe2\x80\xa6CfParse an IPv6 Extension Header Option and return a \xe2\x80\xa6ChParse an IPv6 Routing Header and return a high-level \xe2\x80\xa6CiParse an MLDv2 address record and return a high-level \xe2\x80\xa6CaParse an MLDv2 packet and return a high-level \xe2\x80\xa6CaParse an NDISC packet and return a high-level \xe2\x80\xa6CaParse an NDISC Option and return a high-level \xe2\x80\xa6CmParse a Transmission Control Protocol packet and return a \xe2\x80\xa6CgParse an User Datagram Protocol packet and return a \xe2\x80\xa6AlThe patch version of Hermit.FeObtain the number of times <code>Nanosecond</code> can fit into <code>T</code>. If <code>T</code> \xe2\x80\xa6FeObtain the number of times <code>Microsecond</code> can fit into <code>T</code>. If <code>T</code>\xe2\x80\xa6FeObtain the number of times <code>Millisecond</code> can fit into <code>T</code>. If <code>T</code>\xe2\x80\xa6FdObtain the number of times <code>Second</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FdObtain the number of times <code>Minute</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FbObtain the number of times <code>Hour</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FaObtain the number of times <code>Day</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa6FbObtain the number of times <code>Week</code> can fit into <code>T</code>. If <code>T</code> is \xe2\x80\xa676543210AnPrints to the standard output.DbCreate a <code>PrettyPrinter</code> which prints the given object.CkEscapes special characters in a string, so that it will \xe2\x80\xa6CeReturns a range of pages, exclusive <code>end</code>.CfReturns a range of frames, exclusive <code>end</code>.AjRead 64 bits msr register.AaRead Processor IDAlRead the time stamp counter.CmExtracts the successful type of a <code>Poll&lt;T&gt;</code>.DcUnwraps <code>Poll&lt;T&gt;</code> or returns <code>Pending</code>.ChReturns if there are any items to dequeue. When this \xe2\x80\xa6CmReturns if there is any space to enqueue a new item. When \xe2\x80\xa6AaRelax strategies.AkRelaxes the current thread.B`Resets the <code>Backoff</code>.ClReset the number of available results. This will force a \xe2\x80\xa60BhReset state and restart discovery phase.BoClear the ring buffer, and reset every element.BhResets all entries of this IDT in place.ClReuse the metadata for another type. This is useful when \xe2\x80\xa6CiSet G bit Determines the scaling of the segment limit \xe2\x80\xa6ClSet L In IA-32e mode, bit 21 of the second doubleword of \xe2\x80\xa6CmSet Present bit. Indicates whether the segment is present \xe2\x80\xa6ClSpecifies whether the segment descriptor is for a system \xe2\x80\xa6CfReturns slice of IDT entries with the specified range.B`Spawns a task onto the executor.000AcCreates a new task.0CdSplits a queue into producer and consumer endpoints.ClSplits command line into separate arguments, in much the \xe2\x80\xa6CgSplit <code>PAddr</code> into lower and higher 32-bits.ChSplit <code>IOAddr</code> into lower and higher 32-bits.BmReturns the start address of this page range.BcThe start address of the TLS image.A`Starting addressBbThe start of the range, inclusive.000CjReturn the connection state, in terms of the TCP state \xe2\x80\xa6DkSearches for the node representing <code>stdout</code>, if the property \xe2\x80\xa6BmStores <code>val</code> into the atomic cell.BmReturns the integer in big-endian byte order.00000000000000000000000C`Returns the integer in little-endian byte order.00000000000000000000000C`Returns the integer in native-endian byte order.00000000000000000000000000000000000000000000000BbLogs a message at the trace level.D`The bitwise or (<code>|</code>) of the bits in two flags values.0CkVisits the values representing the union, i.e., all the \xe2\x80\xa6CjVisits the values representing the union, i.e. all the \xe2\x80\xa622222222EcReturns the union of between the flags in <code>self</code> and <code>other</code>.000333333333333333330000000000000000000033333333333333CiRemoves a mapping from the page table and returns the \xe2\x80\xa6CfCollects a stream of pairs into a pair of collections.BfGet upper 32-bits of the Icr register.CiGenerates a random <code>usize</code> in the given range.BaGet the flags value of this flag.nProperty valueCkThe value which was not inserted, because the entry was \xe2\x80\xa6AoExtra information for the eventBbGet the value of the current PCID.AeVirtqueue definitionsAeEnable VMX operation.mSocket DeviceBjReturns a waker associated with this task.DfCreate a new <code>Duration</code> with the given number of weeks. \xe2\x80\xa6ChCreate a <code>Duration</code> from the number of weeks.CmOptionally specified integer width that the output should \xe2\x80\xa6CnWrites the value and converts to <code>Box&lt;T, A&gt;</code>.AfAcquires a write lock.CmWrite a buffer into this writer, returning how many bytes \xe2\x80\xa6CkWrites an element to the buffer, overwriting the oldest \xe2\x80\xa6DhLocks this <code>RwLock</code> with exclusive write access, blocking \xe2\x80\xa6DfPerforms a PCI write at <code>address</code> with <code>offset</code>.AiWrite data into the sink.CmPerforms a volatile write, setting the contained value to \xe2\x80\xa6000CfWrite dr{0-3} register based on provided enum variant.AcWrites to the port.BgWrites the provided breakpoint address.A`Write DR7 value.CdWrites the RFLAGS register, preserves reserved bits.AnWrite 64 bits to msr register.CaWrite the EFER flags, preserving reserved values.CfWrite a given virtual address to the FS.Base register.CfWrite a given virtual address to the GS.Base register.CkWrite a given virtual address to the KernelGsBase register.ClWrite the Ring 0 and Ring 3 segment bases. The remaining \xe2\x80\xa6CmWrite a given virtual address to the LStar register. This \xe2\x80\xa6CmWrite to the SFMask register. The SFMASK register is used \xe2\x80\xa6AaWrite IA32_U_CET.AaWrite IA32_S_CET.CiWrites the IA32_APIC_BASE MSR preserving reserved values.A`Write CR0 flags.CcWrite a new P4 table address into the CR3 register.A`Write CR4 flags.B`Write the priority class to CR8.lWrite MXCSR.AaWrite XCR0 flags.DcWrites the bytes of <code>t</code> and then forgets <code>t</code>.AnWrite 64 bits to msr register.BoInformation about the xAPIC for the local APIC.CjSealed trait that is implemented for the types in this \xe2\x80\xa6AiAlways run on scope exit.AiEncodes the id of a core.AnVirtqueue available ring flagsCnAvailable to the OS, can be used to store additional data, \xe2\x80\xa6000000000000CfEnables MPX instructions and using the BNDCFGU and \xe2\x80\xa6CjEnables MPX instructions and using the BND0-BND3 bound \xe2\x80\xa6AjThe given pointer was nullAbNot a data messageAdInvalid request codelInvalid slotAe00 \xe2\x80\x94 1-byte length.Ae01 \xe2\x80\x94 2-byte length.Ae11 \xe2\x80\x94 4-byte length.Ci10 \xe2\x80\x94 8 byte length (or undefined, on older processors).AlPCI Configuration CapabilityDeRepresents the <code>/chosen</code> node with specific helper methodsCgStream for the <code>StreamExt::cloned()</code> method.AnThe queue is empty and closed.AdThe queue is closed.BaPort address = <code>0x780</code>CjCopy the argument and environment strings into the VM. \xe2\x80\xa6AdCommon configurationCgConfiguration structure used for creating a network \xe2\x80\xa6CdIPv4 configuration data provided by the DHCP server.BcConsole Device Configuration LayoutBcNetwork Device Configuration LayoutBbSocket Device Configuration LayoutAdDevice configurationCfTraditional Memory Balloon Device Configuration LayoutCgStream for the <code>StreamExt::copied()</code> method.AmUnique identifier for a core.EfRepresents the value of the <code>reg</code> property of a <code>/cpus/cpu*</code> \xe2\x80\xa6mCrypto deviceCjIndicates that the guest OS knows how to drive the device.AmResource deadlock would occurBoRepresents a single device in the PCI database.CjAn interface for sending and receiving raw network frames.AmDevice specific configurationeEventAbRFS specific errorlDouble FaultAdThe EFLAGS register.mEnable eventsCdExtend to an integer of the same size or larger, \xe2\x80\xa6ClIndicates that something went wrong in the guest, and it \xe2\x80\xa6CgStream for the <code>StreamExt::filter()</code> method.CiA convenience trait for retrieving a top-level entity \xe2\x80\xa6B`FS.Base Model Specific Register.CnThe future returned by the <code>Strategy::wait</code> method.CkRepresents a fuzzer. It is expected to replace bytes in \xe2\x80\xa6BlBit that controls debug-register protection.BkBit that controls global exact breakpoints.ChIndicates that the mapping is present in all address \xe2\x80\xa6AlThe global memory allocator.B`GS.Base Model Specific Register.ClAn extension of core::hash::Hasher for hashers which use \xe2\x80\xa6AnNetwork Device Header GSO TypeCgSwap foreground and background colors; inconsistent \xe2\x80\xa6CgA wrapper for an IO address (IOVA / DMA Address for \xe2\x80\xa60hI/O RCX.hI/O RDI.hI/O RIP.hI/O RSI.CkNot widely supported. Sometimes treated as inverse or blinkCnA specification of a CIDR block, containing an address and \xe2\x80\xa6AlAn IP packet representation.BgTransport endpoint is already connectedBjBit that controls local exact breakpoints.AlLayout of a block of memory.BfCan not access a needed shared libraryBdAccessing a corrupted shared libraryBoAttempting to link in too many shared librariesAo.lib section in a.out corruptedBgEquivalent to <code>1.minutes()</code>.CbThe virtual address is mapped to a physical frame.DkA trait for common page table operations on pages of size <code>S</code>\xe2\x80\xa6AkType of medium of a device.DeRepresents the <code>/memory</code> node with specific helper methodsBoA unit of time representing exactly one minute.0AmNo XENIX semaphores availableBkRedirect Datagram for the ToS &amp; networkAnNimrod (DEPRECATED 2009-05-06)AiNo buffer space availableAaNo data availableAaExec format errorAeLink has been severedAeBlock device requiredoNot a directoryAfThe notification type.mNotificationsAkNot a XENIX named type fileCiEnables AVX-512 instructions and using the K0-K7 mask \xe2\x80\xa6ClEnables the use of legacy SSE instructions; allows using \xe2\x80\xa6BiThe type of value produced on completion.oEnables paging.BoFuture for the <code>poll_fn()</code> function.BoStream for the <code>poll_fn()</code> function.CkRepresents a programming interface to a PCI subclass in \xe2\x80\xa6mpstore devicemGuest RFLAGS.ClThe RFLAGS register. This is duplicated code from bits32 \xe2\x80\xa6CcThe RFLAGS register. All bit patterns are valid \xe2\x80\xa6BiA raw <code>reg</code> property value setCfRdRand trait to implement the generic rdrand_slice \xe2\x80\xa6CiUsed to obtain random numbers using x86_64\xe2\x80\x99s RDRAND \xe2\x80\xa6CfRdSeed trait to implement the generic rdseed_slice \xe2\x80\xa6BcThe \xe2\x80\x9cpayload\xe2\x80\x9d of a log message.AfRemote address changedA`Object is remoteBnStream for the <code>repeat()</code> function.CeSent by the device to indicate a console size change.AeResize Message LayoutDhAn alias for [<code>std::result::Result</code>] with a generic error \xe2\x80\xa6CjA specialized <code>Result</code> type for VMX operations.BeOperation not possible due to RF-killA`A routing table.AlAn async reader-writer lock.AdA reader-writer lockAnCapture only received packets.BgEquivalent to <code>1.seconds()</code>.AhSyscall Register: SFMASKmGuest SMBASE.CjThis feature indicates that the device supports Single \xe2\x80\xa6CkDevice-independent Bit. See <code>virtio::F::SR_IOV</code>.0000BhConfiguration status field is available.B`stream socket type is supported.lTask switch.BoA unit of time representing exactly one second.0D`The signed integer type with the same size as <code>Self</code>.CkThe logical processor invalidates all mappings\xe2\x80\x94except \xe2\x80\xa6AaA network socket.BgA Transmission Control Protocol socket.BiA splicing iterator for <code>Vec</code>.ChStream for the <code>StreamExt::step_by()</code> method.BkA stream of values produced asynchronously.BeA fixed capacity <code>String</code>.ChExchange neigboring ranges of bits of the specified sizeBiTable Indicator (TI) 0 means GDT is used.BiTable Indicator (TI) 1 means LDT is used.CeUnique identifier for a task (i.e. <code>pid</code>).AfArgument list too longA`A tracer device.BoFuture for the <code>try_zip()</code> function.BaCapture only transmitted packets.nText file busyCaUser defined flag \xe2\x80\x93 ignored by hardware (bit 9)0000AhStructure needs cleaningAlProtocol driver not attachedBnStream for the <code>unfold()</code> function.oA vacant entry.000DkThe entry corresponding to the key <code>K</code> does not exist in the \xe2\x80\xa6DfAn iterator over the values of a <code>HashMap</code> in arbitrary \xe2\x80\xa6CgAn iterator over the values of a <code>IndexMap</code>.CbAn iterator over the values in a <code>Map</code>.CiAn iterator over the values in a <code>OrderedMap</code>.CcRepresents a PCI device vendor in the PCI database.CfVendor-specific capability, Cap ID = <code>0x09</code>AdVendor-specific dataCnPossible outcomes of VMfail pseudo-function used to convey \xe2\x80\xa6CmA vector composed of four words; depending on their size, \xe2\x80\xa6BeRepresents an x2APIC driver instance.BkA core destination encoded as an x2APIC ID.DnYellow: #3 (foreground code <code>33</code>, background code <code>43</code>).BaMarker types for limiting access.AmGet whether AnyIP is enabled.FcMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> \xe2\x80\xa60CnAppends the given segment descriptor to the GDT, returning \xe2\x80\xa6BgGet the clock hour, minute, and second.00CmObtain the UTC offset as its hours, minutes, and seconds. \xe2\x80\xa6CiReturns a mutable reference to the device-independent \xe2\x80\xa60000CiGives mutable access to the contents of the interrupt \xe2\x80\xa6ChReturns a raw pointer to the vector\xe2\x80\x99s buffer, or a \xe2\x80\xa6CkReturns a raw pointer to the <code>Box</code>\xe2\x80\x99s contents.ChReturns a raw pointer to the underlying data in this \xe2\x80\xa6BoReturns a raw pointer to the vector\xe2\x80\x99s buffer.BfConverts the address to a raw pointer.000010DnBorrows this <code>VolatileRef</code> as a read-only <code>VolatilePtr</code>.AcConvert to pointer.002ChReturns a shared reference to the device-independent \xe2\x80\xa60000CnAttempt to parse the property value as a <code>&amp;str</code>CkReturns the remaining (sub)string of this iterator as a \xe2\x80\xa6CeExtracts a string slice containing the entire string.ClReturns the string representation of the <code>Level</code>.DbReturns the string representation of the <code>LevelFilter</code>.BnObtain the contents of the buffer as a string.CcReturn the processor brand string as a rust string.CfReturn vendor identification as human readable string.BfReturn the SocVendorBrand as a string.210AkConvert to <code>u32</code>00BlConverts the address to an <code>u64</code>.0000000BdConvert into <code>(u64, u64)</code>11AkConvert to <code>u64</code>0022DjAssuming that the existing <code>PrimitiveDateTime</code> represents a \xe2\x80\xa6mAtomic types.CeAttach to APIC (enable x2APIC mode, initialize LINT0)BlAttach driver to the xAPIC (enables device).DoReturns the intersection of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.0000000CgReturns the intersection between the two sets of flags.000111111111111111110000000000000000000011111111111111CbData structures and functions used by 16-bit mode.CbData structures and functions used by 32-bit mode.ChData structures and functions used by IA-32e but not \xe2\x80\xa6EgReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa60000000ChReturns the left flags, but with all the right flags \xe2\x80\xa6000111111111111111110000000000000000000011111111111111DkConvert a reference to <code>self</code> to a reference to the borrowed \xe2\x80\xa6CeImmutably borrows from this <code>VolatileRef</code>.AoChange the color to/from brightCmCreates a \xe2\x80\x9cby reference\xe2\x80\x9d adapter for this instance of \xe2\x80\xa6CbCancels the task and waits for it to stop running.0ClA macro for defining <code>#[cfg]</code> if-else statements.CdThe main macro provided by this crate. See crate \xe2\x80\xa6BjChoose an item from an iterator at random.DeSearches for the <code>/chosen</code> node, which is always availableAaClones all items.CkReturn the number of prefix octets elided from the last \xe2\x80\xa6CjNumber of prefix octets from the last segment that are \xe2\x80\xa6ClReturn the number of prefix octets elided from addresses[\xe2\x80\xa6CnNumber of prefix octets from each segment, except the last \xe2\x80\xa6AcConfiguration spaceAaCopies all items.ClCreates a new file in read-write mode; error if the file \xe2\x80\xa6AjFilename (null-terminated)iFile typeCkDetaches the task to let it keep running in the background.0CaDetach from APIC (disable x2APIC and xAPIC mode).BoDetach driver form the xAPIC (disables device).B`Apply <code>dimmed</code> effectBnProcessor state stored in the EFLAGS register.AbEnable Interrupts.AbEnable interrupts.Abevents to look forF`Returns the <code>Span</code>s of <code>self</code> below and above the <code>exclude</code> \xe2\x80\xa6DoExpand the range that the value may be in. <strong>Fails to compile</strong>\xe2\x80\xa600000000000DhCreates a layout describing the record for <code>self</code> followed byClInserts all new key-values from the iterator to existing \xe2\x80\xa600BaExtends the vec from an iterator.D`The bitwise or (<code>|</code>) of the bits in each flags value.000000CgExtend an integer to an integer of the same size or \xe2\x80\xa61CmIncrease the extent of a heap. The new extent of the heap \xe2\x80\xa6EmLower <code>base</code> by <code>low</code> and raise <code>acme</code> by <code>high</code>.3333333333333333333333333333333Bn<code>filesz</code> of the TLS program header.EeKeeps items of the stream for which <code>predicate</code> returns <code>true</code>.CmThis will resort the element into the correct position in \xe2\x80\xa6CoDrops the guard <em>without</em> releasing the acquired permit.DcDrops the guard <em>without</em> releasing the acquired permit. \xe2\x80\xa6DjMacro that creates a fixed capacity <code>String</code>. Equivalent to \xe2\x80\xa6hFutures.BnCombinators for the <code>Future</code> trait.CfDebugging Extensions. Support for I/O breakpoints, \xe2\x80\xa60ClDebug Store. The processor supports the ability to write \xe2\x80\xa60ChSelf Snoop. The processor supports the management of \xe2\x80\xa60CiThermal Monitor. The processor implements the thermal \xe2\x80\xa6AoHardware thermal control (HTC)?10B`Is Temperature Sensor available?0Ai32-bit hashing algorithmsClReturns a reference to the map\xe2\x80\x99s <code>BuildHasher</code>.ClReturns a reference to the set\xe2\x80\x99s <code>BuildHasher</code>.ChFirst version is derived and adapted for Hermit from \xe2\x80\xa6B`Apply <code>hidden</code> effectClDon\xe2\x80\x99t flush the TLB and silence the \xe2\x80\x9cmust be used\xe2\x80\x9d \xe2\x80\xa60DhInserts an element at position <code>index</code> within the vector, \xe2\x80\xa6BgInserts the specified effects in-place.D`The bitwise or (<code>|</code>) of the bits in two flags values.0BfInserts a key-value pair into the map.AhAdds a value to the set.DgSets the value of the entry, and returns an <code>OccupiedEntry</code>.CnSets the value of the entry, and returns the entry\xe2\x80\x99s old \xe2\x80\xa6DjSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s key, \xe2\x80\xa62DhSets the value of the entry with the <code>VacantEntryRef</code>\xe2\x80\x99s \xe2\x80\xa63DhSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s value.CmSets the value of the entry, replacing any existing value \xe2\x80\xa6CkInserts a new element into the table with the hash that \xe2\x80\xa6;CmOverwrites the underlying map\xe2\x80\x99s value with this entry\xe2\x80\x99\xe2\x80\xa6CgInserts this entry into to underlying map, yields a \xe2\x80\xa6:9:DeInserts a character into this <code>String</code> at a byte position.<<<<<<<BcTry to insert a value into the map.=CmInsert a value in the slab, returning key assigned to the \xe2\x80\xa6CnInsert a value in the entry, returning a mutable reference \xe2\x80\xa6DkInsert an element at position <code>index</code>, shifting all elements \xe2\x80\xa6BeInserts the specified flags in-place.000D`The bitwise or (<code>|</code>) of the bits in two flags values.00000000000000001111111111111111111100000000000000B`Apply <code>invert</code> effectAgTo control an I/O APIC.CcWhether all known bits in this flags value are set.000000000CiReturns <code>true</code> if all flags are currently set.000111111111111111110000000000000000000011111111111111CaReturns true if this metadata is for a directory.CkReturn a boolean value indicating if the given message typeCmIf the PAT is supported, indirectly determines the memory \xe2\x80\xa60ClIndirectly determines the memory type used to access the \xe2\x80\xa60BcCheck if the offset is exactly UTC.B`Apply <code>italic</code> effectBgGet the key for an element in the slab.B`L2 Cache Allocation Information.0B`L3 Cache Allocation Information.0BlThe layout of allocation request that failedCaThe layout of the allocation request that failed.BkThe layout that was passed to the allocatorBaAmount of addresses in the range.CdGet the number of days in the month of a given year.BbLength of the structure, in bytes.0Aelfence \xe2\x80\x93 Load FenceBmReturns a guard listening for a notification.BfStart listening on the given endpoint.BbReturns a reference to the logger.DjAllocate a contiguous region of memory according to <code>layout</code>\xe2\x80\xa6BhCreates a new mapping in the page table.CiAbstractions for reading and modifying the mapping of \xe2\x80\xa6AeMedium of the device.CbReturns the memory node, which is always availableAgmfence \xe2\x80\x93 Memory FenceCjThe fractional number of microseconds that have passed \xe2\x80\xa6DdThe fractional number of milliseconds in this <code>Duration</code>.CjThe fractional number of milliseconds that have passed \xe2\x80\xa61CdGet the minute within the hour in the stored offset.AoGet the minute within the hour.00CiAttempt to narrow the range that the value may be in. \xe2\x80\xa600000000000CeConstructs a new, empty <code>Vec&lt;T, A&gt;</code>.DkAllocates memory in the given allocator then places <code>x</code> into \xe2\x80\xa6DbCreates an empty <code>HashTable</code> using the given allocator.AiCreate a new linked list.0BfNotifies a number of active listeners.CiReturns the four eight-bit integers that make up this \xe2\x80\xa6CkReturns the sixteen eight-bit integers the IPv6 address \xe2\x80\xa6CnThe offset in bytes of this extended state components save \xe2\x80\xa6AoGet the <code>UtcOffset</code>.AcOffset in the file.AbOffset within bar.03BcThe offset within the mapped frame.CfReturns a reference to the oldest value in the buffer.BjReturns the operation code of this packet.AdReceived DHCP packetCkWrite the libpcap packet header followed by packet data \xe2\x80\xa60CiDescription of the data-structures for IA-32 paging mode.CjDescription of the data-structures for IA-32e paging mode.CiAbstractions for page tables and other paging related \xe2\x80\xa6AhParsing flags from text.FbConstructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement \xe2\x80\xa6AbReturn the prefix.AlPacked virtqueue definitionsCjInstructions to generate random bits directly from the \xe2\x80\xa6AiSupport for build-in RNGsAlRead the time stamp counter.CgReturns a reference to the most recently written value.DiRemoves and returns the element at position <code>index</code> within \xe2\x80\xa6BgRemoves the specified effects in-place.CeThe intersection of a source flags value with the \xe2\x80\xa60CnRemoves a key from the map, returning the value at the key \xe2\x80\xa6CkRemoves a value from the set. Returns whether the value wasCkTakes the value out of the entry, and returns it. Keeps \xe2\x80\xa60CjTakes the value out of the entry, and returns it along \xe2\x80\xa66CdRemoves this entry from the map and yields its valueB`Same as <code>swap_remove</code>DhRemoves a value from the set. Returns <code>true</code> if the value \xe2\x80\xa66EdRemoves a <code>char</code> from this <code>String</code> at a byte position and \xe2\x80\xa68888888AbRemove an element.9CjRemove and return the value associated with the given key.DjRemove and return the element at position <code>index</code>, shifting \xe2\x80\xa6CiRemove a socket from the set, without changing its state.BeRemoves the specified flags in-place.000=================00000000000000000000==============AdRender the ANSI code00CiCreates a vector by copying a slice <code>n</code> times.DjCreates a layout describing the record for <code>n</code> instances of \xe2\x80\xa6ChCreates an infinite stream that yields the same item \xe2\x80\xa6F`Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.DfResizes the Vec in-place so that len is equal to <code>new_len</code>.DcResizes the vector so that its length is equal to <code>len</code>.CeRetains only the elements specified by the predicate.CiRetains only the elements specified by the predicate. \xe2\x80\xa611111CdRetain only the elements specified by the predicate.2BdRewind to the beginning of a stream.BnProcessor state stored in the RFLAGS register.0CkRouter address, also known as default gateway. Does not \xe2\x80\xa6oDefault gatewayCjReturns a reference to the original reader-writer lock \xe2\x80\xa600C`Return the Suppress Router-Side Processing flag.CfGet the second within the minute in the stored offset.BaGet the second within the minute.00CkCombination of bits 00-31 and 32-63 of 96 bit processor \xe2\x80\xa60CnInformation on how to reach the DHCP server that responded \xe2\x80\xa6CnSet D/B. Performs different functions depending on whether \xe2\x80\xa6A`Set the NS flag.Afsfence \xe2\x80\x93 Store FenceBdAttempts to shrink the memory block.CnShrink a previously allocated/reallocated region of memory \xe2\x80\xa6ChReturns a number representing sign of <code>self</code>.00000000000000000000000CcAn implementation of SipHash with a 128-bit output.AmBacks off in a blocking loop.B`Communication between endpoints.CcReturns a reference to the mutex a guard came from.0CkCreates a splicing iterator that replaces the specified \xe2\x80\xa6hgroup idguser idmDevice statusDkSearches for the node representing <code>stdout</code>, if the property \xe2\x80\xa6AeAsynchronous streams.BnCombinators for the <code>Stream</code> trait.BeA fixed capacity <code>String</code>.AeSwap the GS register.BoFunctions to load GDT, IDT, and TSS structures.BhThe name of the target of the directive.BaSet <code>Metadata::target</code>1AoSetter for <code>target</code>.BgGet the clock hour, minute, and second.EfConvert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to \xe2\x80\xa6CeCopies <code>self</code> into a new <code>Vec</code>.0DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000000000BeToggles the specified flags in-place.000111111111111111110000000000000000000011111111111111gseconds0CkCreates a stream from a seed value and an async closure \xe2\x80\xa6AcUnlocks this mutex.CnUnlocks this mutex. The inner mutex may not be unlocked if \xe2\x80\xa6fSafetyCaSingle-threaded version of <code>OnceCell</code>.AoUpdate the routes of this node.CkUpdates the contained value using the given closure and \xe2\x80\xa6000AeUpdate the DR7 value.CeUpdates the RFLAGS register, preserves reserved bits.AbUpdate EFER flags.AkUpdate the SFMask register.AcUpdates IA32_U_CET.AcUpdates IA32_S_CET.AbUpdates CR0 flags.C`Update the P4 table address in the CR3 register.AbUpdates CR4 flags.BbUpdates the priority class in CR8.mUpdate MXCSR.AbUpdate XCR0 flags.CmUpdates the inner <code>T</code> by calling a function on it.CkAn iterator visiting all values in arbitrary order. The \xe2\x80\xa6CeReturn an iterator over the values of the map, in \xe2\x80\xa6CcAn iterator visiting all values in arbitrary order.BoReturns an iterator over the values in the map.0ClReturns the <code>Vendor</code> that this device belongs to.BcRead a specified field from a VMCS.AfDisable VMX operation.Bl<code>whence</code> value of the lseek call.CjReturn the number of elements that can be added to the \xe2\x80\xa6Cnx2APIC, the most recent APIC on x86 for large servers with \xe2\x80\xa6BkPhysical and virtual addresses manipulationCjThis crate provides x86_64 specific functions and data \xe2\x80\xa6CoA <code>Hasher</code> for hashing an arbitrary stream of bytes.CgThe future returned by <code>Semaphore::acquire</code>.CnThe logical processor invalidates mappings\xe2\x80\x94except global \xe2\x80\xa6DfRepresents the <code>/aliases</code> node with specific helper methodsAmOperation already in progressAi256 (8-bit) color supportCcProcessor Power Management and RAS Capabilities \xe2\x80\xa60ChA high-level representation of an Address Resolution \xe2\x80\xa6BkPerforms exponential backoff in spin loops.AdExponential backoff.Aomemory ballooning (traditional)CiA counter to synchronize multiple tasks at the same time.C`Ops that are independent of word size and endianCdIterator for the [<code>block_on()</code>] function.AiBlocking buffered reader.BbA builder that creates a new task.nGuest CS base.BfA fixed capacity <code>CString</code>.B`Control channel RX mode support.AmControl channel is available.AcPCI Capability DataClAn abstraction for iterating over all classes in the PCI \xe2\x80\xa6C`Provides methods for cleaning up unused entries.BaPort address = <code>0x740</code>CnGet the size of the argument and environment strings. Used \xe2\x80\xa6gconsoleBfThe context needed to poll the future.CfThe device independent part of an Ethernet network \xe2\x80\xa6oControl MessageCnSets the offset to the current position plus the specified \xe2\x80\xa6nGuest DS base.BkDeterministic Address Translation Structure0ChDeterministic Address Translation Structure Iterator \xe2\x80\xa60CmDeterministic Address Translation cache type (EDX bits 04 \xe2\x80\xa60ChImplements <code>core::default::Default</code> for a \xe2\x80\xa6nDisable eventsAmDiscard the containing packetnGuest ES base.AeA set of text effectsCkAn iterator over the key/value pairs in a <code>Map</code>.CjAn iterator over the entries in a <code>OrderedMap</code>.AaCode Execute-OnlymHost FS base.nGuest FS base.AaA devicetree nodeCiStream for the <code>StreamExt::flat_map()</code> method.ChStream for the <code>StreamExt::flatten()</code> method.mHost GS base.nGuest GS base.AlA 128-bit (2x64) hash outputAoA central typedef for hash keysCjA hash map implemented with quadratic probing and SIMD \xe2\x80\xa60EdA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.0BhRedirect Datagram for the ToS &amp; hostChStream for the <code>StreamExt::inspect()</code> method.CbInstant type used for <code>try_lock_until</code>.0BkA representation of an absolute time value.CdUsed to broadcast flushes to all logical processors.DdA mutable iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6DfA mutable iterator over the entries of a <code>HashTable</code> in \xe2\x80\xa6CbIterator over the contents of a <code>Deque</code>CmA mutable iterator over the items of a <code>IndexMap</code>.DfAn iterator over the items of a <code>LinearMap</code> that allows \xe2\x80\xa6BfAn iterator over the items of a queue.DbA mutable iterator over the values stored in the <code>Slab</code>AhLevel 2 not synchronizedChA sealed trait representing a valid type to use as a \xe2\x80\xa6BeCannot exec a shared library directlyCdThe future returned by <code>Mutex::lock_arc</code>.DoMagenta: #5 (foreground code <code>35</code>, background code <code>45</code>).AaA managed object.CfA high-level representation of an MLDv2 packet header.A`Message too longoNetwork is downBaPort address = <code>0x680</code>BaPort address = <code>0x700</code>AhNo Route to destination.BcTransport endpoint is not connectedAnSocket operation on non-socketAjName not unique on networkCmEnables extended processor state management instructions, \xe2\x80\xa6CeA thread-safe cell which can be written to only once.0CgA PD Entry consists of an address and a bunch of flags.0BbPD configuration bits description.0hPLE_Gap.CnSpecifies whether the mapped frame or page table is loaded \xe2\x80\xa6CmMust be set for any segment, causes a segment not present \xe2\x80\xa6CgA PT Entry consists of an address and a bunch of flags.0AjPT Entry bits description.0CjStructure wrapping a mutable reference to the greatest \xe2\x80\xa6BoStream for the <code>pending()</code> function.CnA trait implemented by types which can be used in PHF data \xe2\x80\xa60CkDevice can process duplicated ACKs and report number of \xe2\x80\xa6CiBit that controls debugging of RTM transactional regions.CeThe future returned by <code>RwLock::read_arc</code>.BkInterrupted system call should be restartedCmResults type. This is the \xe2\x80\x98block\xe2\x80\x99 an RNG implementing \xe2\x80\xa6BgImplementation-level interface for RNGsBkA token to receive a single network packet.nGuest SS base.CmDevice may act as a standby for a primary device with the \xe2\x80\xa6nAn x86 segmentCbIntel SGX Capability Enumeration Leaf (LEAF=0x12).0AhAn index into a slotmap.BlProvides a slotmap based on external memory.AoTypes that can be split in two.CnSends a special start-up IPI (called a SIPI) to the target \xe2\x80\xa6CbTrait defining how data for a container is stored.AbStreams pipe errormHost TR base.nGuest TR base.CiA high-level representation of a Transmission Control \xe2\x80\xa6BmThread local storage (TLS) image information.D`An iterator that pops items from a <code>ConcurrentQueue</code>.CeTime Stamp Counter/Core Crystal Clock Information \xe2\x80\xa60BlA token to transmit a single network packet.CbUser defined flag \xe2\x80\x93 ignored by hardware (bit 10)0000CbUser defined flag \xe2\x80\x93 ignored by hardware (bit 11)0000ClA high-level representation of an User Datagram Protocol \xe2\x80\xa6BeA type with no alignment requirement.AjData and Instruction cache0AbUnknown capabilitynUnknown device0DgThe future returned by <code>RwLockUpgradableReadGuard::upgrade</code>.CgThe different register-level programming interfaces \xe2\x80\xa6CkVec4 functions which may not be implemented yet for all \xe2\x80\xa6BhA <code>Vec</code> with dynamic capacityClAn abstraction for iterating over all vendors in the PCI \xe2\x80\xa6AaDays of the week.BkPhysical and virtual addresses manipulationBnWaits for a permit for a concurrent operation.CcPointer representing the memory reservation addressCmBig-endian encoded bytes making up the address portion of \xe2\x80\xa6jIP addressCdIP address to use as destination in outgoing packetsBiReturn the IP address of this CIDR block.BkReturn the address of this IPv4 CIDR block.BkReturn the address of this IPv6 CIDR block.BmRetrieves the physical address in this entry.000000CdReturn the <code>/aliases</code> node, if one existsAaANSI Text StylingB`Convert into a <code>u128</code>EbGet a reference to the <code>Vec</code>, erasing the <code>N</code> const-generic.DnGet a reference to the <code>BinaryHeap</code>, erasing the <code>N</code> \xe2\x80\xa6EdGet a reference to the <code>Deque</code>, erasing the <code>N</code> const-generic.DnGet a reference to the <code>HistoryBuf</code>, erasing the <code>N</code> \xe2\x80\xa6DmGet a reference to the <code>LinearMap</code>, erasing the <code>N</code> \xe2\x80\xa6EeGet a reference to the <code>String</code>, erasing the <code>N</code> const-generic.EdGet a reference to the <code>Queue</code>, erasing the <code>N</code> const-generic.EdGet a reference to the <code>SortedLinkedList</code>, erasing the <code>N</code> \xe2\x80\xa61AlCreates a new bounded queue.AfReturns a new builder.0BdGeneric PCI field: capability lengthCcCollects all items in the stream into a collection.CmReduce the capacity as much as possible, changing the key \xe2\x80\xa6AlConnect to a given endpoint.nConsole DeviceDhTell this buffer that <code>amt</code> bytes have been consumed from \xe2\x80\xa6CfConsumes the token to receive a single network packet.CcConsumes the token to send a single network packet.AgGet the socket context.CcVM-execution, VM-exit, and VM-entry control fields.BnFunctions to read and write control registers.BaConversion between units of time.0gCore ID0CaMaximum COS number supported by the L3MBE featureCkA short-cut to the architecture (bits32 or bits64) this \xe2\x80\xa6BmDeallocates memory with the global allocator.DiDeallocates the block of memory at the given <code>ptr</code> pointer \xe2\x80\xa6DdConstructs a new AHasher with fixed keys. If <code>std</code> is \xe2\x80\xa6BkCreates an empty <code>Vec&lt;T&gt;</code>.DoCreates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.DkCreates a new lazy value using <code>Default</code> as the initializing \xe2\x80\xa6EjCreates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> \xe2\x80\xa6EmCreates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for \xe2\x80\xa62BiCreate a new <code>CpuId</code> instance.CmReturn the default MXCSR value at reset, as documented in \xe2\x80\xa6DkReturns the item in the front of the queue, or <code>None</code> if the \xe2\x80\xa600CiDequeue a single packet from the buffer, and return a \xe2\x80\xa6C`Returns an iterator over the vendor\xe2\x80\x99s devices.AoTemporarily disable interrupts.AcDisable Interrupts.AcDisable interrupts.CnDrops this listener and discards its notification (if any) \xe2\x80\xa6CmFunctions and data-structures for working with descriptor \xe2\x80\xa6A`Set text effectsCkDetermines if a log message with the specified metadata \xe2\x80\xa6CbAdds an <code>item</code> to the end of the queue.0EhAdds an <code>item</code> to the end of the queue, returns back the <code>item</code>\xe2\x80\xa6CjEnqueue a single packet with the given header into the \xe2\x80\xa6ChReturns an iterator over the key/value pairs in the map.0CiGet a reference to the internal <code>Entry</code> table.BiWait for some event on a file descriptor.AkConcatenates inner streams.CiCreates a new little-endian integer from a big-endian \xe2\x80\xa600000000000000000000000EeReturns the entity corresponding to <code>id</code>, or <code>None</code> if none \xe2\x80\xa6CiCreates a new big-endian integer from a little-endian \xe2\x80\xa600000000000000000000000CiCreates a new big-endian integer from a native-endian \xe2\x80\xa600000000000ClCreates a new little-endian integer from a native-endian \xe2\x80\xa600000000000111111111111000000000000CnNamed futures for use with <code>async_lock</code> primitives.DkObtains the bit at the index <code>bit</code>; note that index 0 is the \xe2\x80\xa60CfReturns a reference to the map\xe2\x80\x99s internal static \xe2\x80\xa60CfReturns a reference to the set\xe2\x80\x99s internal static \xe2\x80\xa60BkReturns the key for identifying the packet.CcReturns a mutable reference to the underlying data.DkGet a mutable reference to the inner value, or <code>None</code> if the \xe2\x80\xa6BoReturns a mutable reference to the inner value.BlGet a mutable reference to the inner future.3CaGet a mutable reference to the underlying stream.CcGets the mutable reference to the underlying value.CmGets the reference to the result of this lazy value if it \xe2\x80\xa6CmReturns a mutable reference to the value corresponding to \xe2\x80\xa6CcGets a mutable reference to the value in the entry.0CkReturns a mutable reference to the element at the given \xe2\x80\xa6CnGets a mutable reference to the value associated with this \xe2\x80\xa633::::BbRetrieve a mutable value by index.CaGets a mutable reference to the underlying value.CiGets the mutable reference to the result of this lazy \xe2\x80\xa6CkReturn a mutable reference to the value associated with \xe2\x80\xa6CgGet a mutable socket from the set by its handle, as \xe2\x80\xa6CaGet a mutable reference to the underlying device.0CjGets an unaligned raw pointer to the inner <code>T</code>.BdGet a reference to the inner future.BiGet a reference to the underlying stream.BiGet a reference to the underlying device.0CbReturns the current value of the segment register.ClUniformly sampled u16. May fail in rare circumstances or \xe2\x80\xa6ClUniformly sampled u32. May fail in rare circumstances or \xe2\x80\xa6ClUniformly sampled u64. May fail in rare circumstances or \xe2\x80\xa6mSupports ADX.0CiA value of 1 indicates the processor supports the AVX \xe2\x80\xa60AkHas Core performance boost?0CiCPL Qualified Debug Store. A value of 1 indicates the \xe2\x80\xa60CmA value of 1 indicates the processor supports the ability \xe2\x80\xa60BoDigital temperature sensor is supported if set.0CmFDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 \xe2\x80\xa60CeA value of 1 indicates the processor supports FMA \xe2\x80\xa60CnFloating Point Unit On-Chip. The processor contains an x87 \xe2\x80\xa60CaGIF \xe2\x80\x93 virtualized global interrupt flag if set.0CkHDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, \xe2\x80\xa60cHLE0CnMax APIC IDs reserved field is Valid. A value of 0 for HTT \xe2\x80\xa60AnHas Hardware assert supported?0CcHWP. HWP base registers (IA32_PM_ENABLE[bit 0], \xe2\x80\xa60AkInstruction based sampling.0B`Supports Linear Address Masking.AmLightweight profiling support0CjMachine Check Architecture. A value of 1 indicates the \xe2\x80\xa60ChMachine Check Exception. Exception 18 is defined for \xe2\x80\xa60CnIntel MMX Technology. The processor supports the Intel MMX \xe2\x80\xa60CfMPX. Supports Intel Memory Protection Extensions if 1.0CnModel Specific Registers RDMSR and WRMSR Instructions. The \xe2\x80\xa60CjPhysical Address Extension. Physical addresses greater \xe2\x80\xa60ClPage Attribute Table. Page Attribute Table is supported. \xe2\x80\xa60CkPending Break Enable. The processor supports the use of \xe2\x80\xa60lPCI support.CcPage Global Bit. The global bit is supported in \xe2\x80\xa60BmSupports protection keys for user-mode pages.0CkPLN. Power limit notification controls are supported if \xe2\x80\xa60ChPage Size Extension. Large pages of size 4 MByte are \xe2\x80\xa60CnProcessor Serial Number. The processor supports the 96-bit \xe2\x80\xa60CdPTM. Package thermal management is supported if set.0cRTM0CdSecure Encrypted Virtualization is supported if set.0CkSupports Intel\xc2\xae Software Guard Extensions (Intel\xc2\xae SGX \xe2\x80\xa60AjSupports SHA Instructions.0BmSecure Memory Encryption is supported if set.0CjSafer Mode Extensions. A value of 1 indicates that the \xe2\x80\xa60BoSSE. The processor supports the SSE extensions.0BaSecure virtual machine supported.0BnTrailing bit manipulation instruction support.0CiThermal Monitor 2. A value of 1 indicates whether the \xe2\x80\xa60CkTime Stamp Counter. The RDTSC instruction is supported, \xe2\x80\xa60CeVirtual 8086 Mode Enhancements. Virtual 8086 mode \xe2\x80\xa60CkVirtual Machine Extensions. A value of 1 indicates that \xe2\x80\xa60C`Virtual Transparent Encryption supported if set.0AgWatchdog timer support.0AkExtended operation support.0CfChecksum behavior that results in not computing or \xe2\x80\xa6BnCalls a closure on each item and passes it on.BlReturns true if this metadata is for a file.BoReturns <code>true</code> if the queue is full.CnReturns <code>true</code> if the queue is full but not closed.AoReturns true if the vec is fullBbChecks if the binary heap is full.BnReturns whether the deque is full (i.e. if \xe2\x80\xa6BbReturns whether the buffer is fullB`Returns true if the map is full.BmReturns <code>true</code> if the set is full.1BbChecks if the linked list is full.BbReturns whether the queue is full.BaQuery whether the buffer is full.0CjReturns <code>true</code> if the value is the niche value.00000000000CfConvenience method for checking if an address is null.00000000000CkConvenience method for checking if a virtual address is \xe2\x80\xa6ClConvenience method for checking if a physical address is \xe2\x80\xa6CmIf true, the #SS or #GP has returned zero as opposed to a \xe2\x80\xa6BbReturn whether the socket is open.CePage size; if set this entry maps a 4-MByte page; \xe2\x80\xa6CePage size; if set this entry maps a 1-GByte page; \xe2\x80\xa6CePage size; if set this entry maps a 2-MByte page; \xe2\x80\xa6CnReturns <code>true</code> if the value is not the niche value.00000000000BdCheck if a duration is exactly zero.hIs zero?00000AmReload code segment register.AmReload data segment register.AkReload es segment register.AkReload fs segment register.AkReload gs segment register.AnReload stack segment register.AhLoads the task register.DfNote this only contains <code>AssumeUnlockable</code> which is not \xe2\x80\xa6CkA library that provides a way to logically own objects, \xe2\x80\xa6CkMaps the source value associated with the conversion error.00000000DhCreate a new <code>Duration</code> with the given number of minutes. \xe2\x80\xa6CjCreate a <code>Duration</code> from the number of minutes.CmCreates a non-present IDT entry (but sets the must-be-one \xe2\x80\xa6BjReturn the network mask of this IPv4 CIDR.BkReturn the network block of this IPv4 CIDR.AiCreate a new linked list.0FcCreate a new <code>OffsetDateTime</code> with the given <code>Date</code> and <code>Time</code> \xe2\x80\xa6gNode ID0CaReturn the options of the IPv6 Hop-by-Hop header.BdReturn an iterator over the options.B`Return a pointer to the options.AhGet the day of the year.CiGet the day of the year of the date in the stored offset.11AbPad to full dword.CiReturn a pointer to the payload, without checking for \xe2\x80\xa6BkReturn a pointer to the type-specific data.B`Return a pointer to the payload.0C`Return the payload of the IPv6 extension header.BhReturn a pointer to the address records.22BhRust wrappers for the PCI ID Repository.BhCreates a stream that is always pending.DgReturn a <em>soft deadline</em> for calling poll the next time. The \xe2\x80\xa6CmCreates a future from a function returning <code>Poll</code>.CmCreates a stream from a function returning <code>Poll</code>.FjTraits <code>Future</code>, <code>Stream</code>, [<code>AsyncRead</code>], [<code>AsyncWrite</code>], [\xe2\x80\xa6BhAnonymously import all extension traits.ClIndicates whether the segment is present in memory (set) \xe2\x80\xa6BnPrints to the standard output, with a newline.CmConvenience method that provides an iterator over the raw \xe2\x80\xa6CjReturns an vector with all the entries within a directory.BmReallocates memory with the global allocator.DiShrinks or grows a block of memory to the given <code>new_size</code> \xe2\x80\xa6CnConstruct a token pair consisting of one receive token and \xe2\x80\xa6BcReceives a byte on the serial port.0ChReturns an iterator over all of the available memory \xe2\x80\xa6BkDon\xe2\x80\x99t emit a fence for this notification.0DgReturns a reference to the original <code>ReentrantMutex</code> object.CmAdds a value to the set, replacing the existing value, if \xe2\x80\xa6DkReserves capacity for at least <code>additional</code> more elements to \xe2\x80\xa6000AdReserve a new entry.DkReserve capacity for at least <code>additional</code> more values to be \xe2\x80\xa6DdReserve capacity for <code>additional</code> more elements to be \xe2\x80\xa6BjAttempt to resolve an alias to a node nameoevents returnedCjPhysical and virtual addresses manipulation for 64-bit \xe2\x80\xa6DdCreate a new <code>Duration</code> with the given number of seconds.CjCreate a <code>Duration</code> from the number of seconds.AaSet the ACK flag.CjSet AVL bit. System software can use this bit to store \xe2\x80\xa6EeSets the bit at the index <code>bit</code> to the value <code>value</code> (where \xe2\x80\xa60AaSet the CWR flag.ClSpecifies the privilege level of the segment. The DPL is \xe2\x80\xa6AaSet the ECE flag.BoSet the Explicit Congestion Notification field.AaSet the FIN flag.CmSets the interrupt stack table index. The 3-bit IST index \xe2\x80\xa6DfSets the stack pointer (<code>stack_ptr</code>) to be used when an \xe2\x80\xa6ChForces the length of the vector to <code>new_len</code>.0AlSets the length of a vector.AeSet the length field.AbSet the MTU value.CcSet the number of octets used for padding after \xe2\x80\xa6AaSet the PSH flag.BhSet the Querier\xe2\x80\x99s Robustness Variable.CjReload the segment register. Depending on the segment, \xe2\x80\xa6DjNote this is special since we cannot directly move to <code>CS</code>; \xe2\x80\xa6CbSet the privilege level for this Segment selector.DjSets the stack pointer (<code>stack_ptr</code>) to be used for when an \xe2\x80\xa6AaSet the RST flag.AaSet the SYN flag.AaSet the URG flag.AiVQ number to be notified.BgShared memory region 64 bit long lengthA`Shared memory idAjShuffles a slice randomly.DfThe <em>smoltcp</em> library is built in a layered structure, with \xe2\x80\xa6DeReturns <code>true</code> if the data has spilled into a separate \xe2\x80\xa6Actime of last accessAjtime of last status changeAbaccess permissionsAitime of last modificationidevice idmsize in bytesBfYields every <code>step</code>th item.Df<code>Storage</code> trait defining how data is stored in a container.AgSpecialized containers.CmReturns an iterator over all of the strings inside of the \xe2\x80\xa6CgInvokes an OS system-call handler at privilege level 0.AlReturn the timeout duration.CnRepresent the number of seconds and microseconds since the \xe2\x80\xa6DjWait for all previous <code>invlpgb</code> instruction executed on the \xe2\x80\xa6DiConverts an IPv4 address into a <code>u32</code> representation using \xe2\x80\xa6DjConverts an IPv6 address into a <code>u128</code> representation using \xe2\x80\xa6DiConverts this address to an <code>IPv4</code> address if it is either \xe2\x80\xa6CmReturns true if <code>self</code> touches <code>other</code>.DkAttempts to make a new <code>MappedMutexGuard</code> for a component of \xe2\x80\xa60DhAttempts to make  a new <code>MappedReentrantMutexGuard</code> for a \xe2\x80\xa60DdAttempts to make  a new <code>MappedRwLockReadGuard</code> for a \xe2\x80\xa6DeAttempts to make  a new <code>MappedRwLockWriteGuard</code> for a \xe2\x80\xa610DdAllocates memory on the heap then places <code>x</code> into it, \xe2\x80\xa6C`Tries to create a new canonical virtual address.BgTries to create a new physical address.101010101010ClJoins two fallible futures, waiting for both to complete \xe2\x80\xa6AgSet TSC deadline value.AaSet tsc deadline.1knanosecondslmicrosecondsAkUpgrades into a write lock.0CaUpgrades an upgradable lock to an exclusive lock.ClAtomically upgrades an upgradable read lock lock into an \xe2\x80\xa6AlReturn the protocol version.0AiReturn the version field.0AeDevice version numberAaRead APIC versionAbRead APIC version.1kClear VMCS.AjLoad current VMCS pointer.AlReturn current VMCS pointer.BeWrite to a specified field in a VMCS.A`Get the weekday.CaGet the weekday of the date in the stored offset.11BgRun a closure with disabled interrupts.DdReturns the value of the <code>yiaddr</code> field, zero if not set.CkThis field is also known as <code>yiaddr</code> in the RFC.CiSet by the CPU when the mapped frame or page table is \xe2\x80\xa6CkSet by the processor if this segment has been accessed. \xe2\x80\xa6AoAn iterator over a memory rangeAmThe allocator return an errorBbGratuitous Packet Sending commandsCeIA32_APIC_BASE: status and location of the local APICAlOps that depend on word sizeBbThe FDT had an invalid magic valueCmA generic trait which provides methods for extracting and \xe2\x80\xa6DbA wrapper type implementing <code>RngCore</code> for some type \xe2\x80\xa6AaBoot information.AaBorrowed variant.0000oGuest CS limit.CjA type that can only be called successfully <em>once</em>.ClA synchronization primitive that can only be called once \xe2\x80\xa60AbOperation CanceledCfThe capacity of the <code>CString</code> is too small.DfThe capacity of the <code>String</code> is too small for the given \xe2\x80\xa6CkFlags stored in IA32_U_CET and IA32_S_CET (Table-2-2 in \xe2\x80\xa6CgA description of checksum behavior for a particular \xe2\x80\xa6C`A consumer; it can dequeue items from the queue.CgImplemented for access types that permit copying of \xe2\x80\xa6CeConfiguration flags of the <code>Cr0</code> register.CiControls cache settings for the highest-level page table.CeConfiguration flags of the <code>Cr4</code> register.CkPer RFC 2711 \xc2\xa7 2.1, Router Alert options always have 2 \xe2\x80\xa6hDenormaloGuest DS limit.CaA high-level representation of a Dynamic Host \xe2\x80\xa6AeError during DivisionCgDebug condition flags of the <code>Dr6</code> register.CeDebug control flags of the <code>Dr7</code> register.CeA valid value of the <code>Dr7</code> debug register.CaDuration type used for <code>try_lock_for</code>.0AjA relative amount of time.BiA span of time with nanosecond precision.oGuest ES limit.ClA view into a single entry in a map, which may either be \xe2\x80\xa6ChDoesn\xe2\x80\x99t handle out-of-memory conditions, immediate \xe2\x80\xa6oEthernet framesCjEthernet medium. Devices of this type send and receive \xe2\x80\xa6AbAn async executor.AbBit 1 is always 1.0AdAlignment Check (AC)0AiAuxiliary Carry Flag (AF)0oCarry Flag (CF)0AcDirection Flag (DF)0lID Flag (ID)0AjInterrupt Enable Flag (IF)0A`Nested Task (NT)0AbOverflow Flag (OF)0A`Parity Flag (PF)0A`Resume Flag (RF)0nSign Flag (SF)0nTrap Flag (TF)0AfVirtual-8086 Mode (VM)0nZero Flag (ZF)0ClEnables software running in 64-bit mode at any privilege \xe2\x80\xa6oGuest FS limit.CmPossible errors when attempting to create an <code>Fdt</code>BaPort address = <code>0x440</code>BaPort address = <code>0x500</code>DjTrait for printing types with <code>const</code> constructors, used by \xe2\x80\xa6BjAn error was encountered while formatting.BgA free-list-based page/frame allocator.oGuest GS limit.ChEnables AVX-512 instructions and using the upper ZMM \xe2\x80\xa6B`Device can receive TSO with ECN.AgDevice can receive UFO.CkDevice can receive USO packets. Unlike UFO (fragmenting \xe2\x80\xa6iHash TypelHost is downC`A type wrapping a huge page with a 1 GiB buffer.AnMemory page has hardware errorCkPage Attribute Table See Section 11.11.2.2, Fixed Range \xe2\x80\xa6CcThis means the buffer contains a list of buffer \xe2\x80\xa6CkThis feature indicates that all buffers are used by the \xe2\x80\xa6CmDevice-independent Bit. See <code>virtio::F::IN_ORDER</code>.0000BmThe low bit of the I/O Privilege Level field.CdA high-level representation of an Internet Group \xe2\x80\xa6BdFixed capacity <code>IndexMap</code>BeFixed capacity <code>IndexSet</code>.BgAn iterator that moves out of a vector.DdAn owning iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa6ClAn owning iterator over the items of a <code>HashSet</code>.DfAn owning iterator over the entries of a <code>HashTable</code> in \xe2\x80\xa6CbAn iterator that moves out of an <code>Vec</code>.CcAn iterator that moves out of a <code>Deque</code>.D`An owning iterator over the entries of an <code>IndexMap</code>.CgAn iterator that moves out of a <code>LinearMap</code>.DbA consuming iterator over the values stored in a <code>Slab</code>DjAn iterator that consumes a <code>SmallVec</code> and yields its items \xe2\x80\xa6DkAn owning iterator over the keys of a <code>HashMap</code> in arbitrary \xe2\x80\xa6ChA specification of an IPv4 CIDR block, containing an \xe2\x80\xa6CgA high-level representation of an Internet Protocol \xe2\x80\xa6ChA specification of an IPv6 CIDR block, containing an \xe2\x80\xa61DgAn iterator over the entries of a <code>HashTable</code> that could \xe2\x80\xa6AmIterator for the linked list.m1 byte lengthm2 byte lengthm4 byte lengthm8 byte lengthCdA handle that is listening to an <code>Event</code>.AaLoad information.AbA loopback device.AhMaximum virtual address.CmDefined in MCA architecture but not implemented in the P6 \xe2\x80\xa6000CiDefined in MCA architecture but not implemented in P6 \xe2\x80\xa61DfA <code>Time</code> that is exactly midnight. This is the smallest \xe2\x80\xa6CjStream for the <code>StreamExt::map_while()</code> method.AmMetadata about a log message.AlUser-provided metadata type.CkInformation used to format a value. This is returned by \xe2\x80\xa6AhMulticast Listener QueryAbMultihop attemptedCdDisables caching for the pointed entry is cacheable.BkNetwork dropped connection because of resetBaPort address = <code>0x640</code>BmZero-sized marker type that grants no access.oNo medium foundBfAn entity was not found, often a file.AcDirectory not emptyhOverflowAbAn occupied entry.000DcThe entry corresponding to the key <code>K</code> exists in the mapCeA thread-safe cell which can be written to only once.CfA memory location that can be written to at most once.1DaA <code>generic_once_cell::OnceCell</code>, initialized using \xe2\x80\xa6CnA cell which can be written to only once. It is not thread \xe2\x80\xa6BeValue too large for defined data type7ClTrait for abstracting over the three possible page sizes \xe2\x80\xa60B`Parse a value from a hex string.AdPacket capture mode.AfA packet capture sink.BaA 64-bit physical memory address.AjA physical memory address.1001CaFuture for the <code>poll_once()</code> function.CdError which occurs when popping from an empty queue.BmSent by the device to give a tag to the port.CgThis message is sent by both the device and the driver.CgA helper trait that implements the read port operation.AbPriority of a taskC`A producer; it can enqueue items into the queue.DkAn <code>i8</code> that is known to be in the range <code>MIN..=MAX</code>.DjA <code>u8</code> that is known to be in the range <code>MIN..=MAX</code>.AmBasic operations for a mutex.CeZero-sized marker type for allowing only read access.nData Read-OnlyEeHelper trait that is implemented by <code>ReadWrite</code> and <code>ReadOnly</code>.A`Message redirecthRedirectA`Remote I/O erroro4-31 = ReservedAgReserved for future useAbreserved (invalid)2Ak24-bit ANSI RGB color codesAlA handle to a runnable task.oGuest SS limit.ChA virtqueue for reporting guest memory statistics is \xe2\x80\xa6BcThe trait for scheduling functions.AbSecurity ExceptionCiEnumeration of possible methods to seek within an I/O \xe2\x80\xa6BmCannot send after transport endpoint shutdownCiThe virtual address is mapped to a \xe2\x80\x9chuge\xe2\x80\x9d 1GiB frame.AhA \xe2\x80\x9cgiant\xe2\x80\x9d 1GiB page.CjThe virtual address is mapped to a \xe2\x80\x9clarge\xe2\x80\x9d 2MiB frame.AgA \xe2\x80\x9chuge\xe2\x80\x9d 2MiB page.BnThe virtual address is mapped to a 4KiB frame.AeA standard 4KiB page.DmSlice methods that use <code>Box</code> and <code>Vec</code> from this crate.DfA <code>Vec</code>-like container that can store a small number of \xe2\x80\xa6CfA mutual exclusion (Mutex) type based on busy-waiting.DdA strategy for polling an <code>EventListenerFuture</code> or an \xe2\x80\xa6CiControls in which cases the associated code should be runCeRepresents a PCI device subclass in the PCI database.AeTest Control RegisteroGuest TR limit.CkThe I/O operation\xe2\x80\x99s timeout expired, causing it to be \xe2\x80\xa6AdConnection timed outCgTruncate to an integer of the same size or smaller, \xe2\x80\xa6DbThe unsigned integer type with the same size as <code>Self</code>.oUsed Ring EntryBmThe conversion source contained invalid data.0000DoBase struct for <code>Vec</code> and <code>VecView</code>, generic over the \xe2\x80\xa6fIGMPv1fIGMPv2BjA canonical 64-bit virtual memory address.AiA virtual memory address.1CaA virtual memory address on <code>aarch64</code>.CaA virtual memory address on <code>riscv64</code>.3CiControls whether writes to the mapped frames are allowed.CkFor 32-bit data segments, sets the segment as writable. \xe2\x80\xa6hWatchdogCcPass a scheduling function with more scheduling \xe2\x80\xa6EhHelper trait that is implemented by <code>ReadWrite</code> and <code>WriteOnly</code>\xe2\x80\xa6CfThe future returned by <code>RwLock::write_arc</code>.AoEncode a value as a hex string.ClLocal APIC ID register. Read-only. See Section 10.12.5.1 \xe2\x80\xa6CaFuture for the <code>yield_now()</code> function.CkReturns the last modification time listed in this metadata.CjCreates a layout describing the record that can hold a \xe2\x80\xa6AfAlign address upwards.0CjAligns the virtual address upwards to the given alignment.CkAligns the physical address upwards to the given alignment.BgAttempts to allocate a block of memory.BbAttempts to allocate a page range.CkAttempts to allocate a range of memory in page granularity.ClReturns the underlying byte slice excluding the trailing \xe2\x80\xa6AnConvert into a 16-bytes vectorCjReturn an Ethernet address as a sequence of octets, in \xe2\x80\xa6AmGets the bytes of this value.CoConverts the <code>CString</code> to a <code>CStr</code> slice.ChReturns the remaining items of this iterator as a slice.0BnExtracts a slice containing the entire vector.10CgReturns the array slice backing the buffer, without \xe2\x80\xa612CkAttempt to parse the property value as a <code>usize</code>BnConverts the address to an <code>usize</code>.0AmConvert to <code>usize</code>00000CmProvides a mutable reference to the back element, or None \xe2\x80\xa6AdSet background colorCeGenerate types for C-style flags with ergonomic APIs.AfGenerate a flags type.BdContains the bootargs, if they existAhReturns brand ID on AMD.0BfA fixed capacity <code>CString</code>.CeCheck whether the receive half of the full-duplex \xe2\x80\xa6CfCheck whether the transmit half of the full-duplex \xe2\x80\xa6AlGeneric PCI field: next ptr.BoGeneric PCI field: <code>PCI_CAP_ID_VNDR</code>ClReturns the total number of elements the vector can hold \xe2\x80\xa6BbReturns the capacity of the queue.CkReturns the number of elements the map can hold without \xe2\x80\xa6CkReturns the number of elements the set can hold without \xe2\x80\xa6CmReturns the number of elements the table can hold without \xe2\x80\xa6CkReturns the maximum number of elements the vector can hold.BhReturns the capacity of the binary heap.CjReturns the maximum number of elements the deque can hold.0CnReturns the capacity of the buffer, which is the length of \xe2\x80\xa6BoReturns the number of elements the map can holdBoReturns the number of elements the set can holdCeReturns the number of elements that the map can hold.CkReturns the maximum number of elements the String can hold.CjReturns the maximum number of elements the queue can hold.000CjReturn the number of values the slab can store without \xe2\x80\xa6CcThe number of items the vector can hold without \xe2\x80\xa6CiReturn the maximum number of elements in the ring buffer.AiIdentifies the structure.0AbChecksum behavior.AjReturn the checksum field.00BaReturn the header checksum field.11CiReturns an iterator over the children of the current nodeAmRemove all empty P1-P3 tablesEgReturns <code>true</code> if all of the effects in <code>other</code> are contained \xe2\x80\xa6CmWhether all set bits in a source flags value are also set \xe2\x80\xa60CnReturns true if <code>self</code> contains <code>other</code>.CfReturns <code>true</code> if the set contains a value.02222222D`Check, wether <code>element</code> is part of the address range.3DeReturns true if <code>value</code> is in the <code>OrderedSet</code>.CnReturns true if <code>value</code> is in the <code>Set</code>.DeReturn <code>true</code> if a value is associated with the given key.EeReturns <code>true</code> if all of the flags in <code>other</code> are contained \xe2\x80\xa6000CmReturns whether <code>self</code> contains <code>addr</code>.888888888888888881111111111111111111188888888888888AeCPU frequency in kHz.AcSize of this direntDiCreates a <code>NonNull</code> that is dangling, but well-aligned for \xe2\x80\xa6AnReturn the length of the data.0CcReturn a mutable pointer to the type-specific data.BlReturn a mutable pointer to the option data.0BmReturns a raw pointer to the underlying data.00ClRemoves all but the first of consecutive elements in the \xe2\x80\xa6CjRemoves consecutive duplicate elements using the given \xe2\x80\xa6Dh<code>deranged</code> is a proof-of-concept implementation of ranged \xe2\x80\xa6BoAttempt to downcast the box to a concrete type.00BeReturn the destination address field.AoReturn the destination address.11BeIPv6 address of the destination node.BbReturn the destination port field.0CiIf true, indicates that the exception occurred during \xe2\x80\xa6BkPhysical and virtual addresses manipulationCdConverts this task into a <code>FallibleTask</code>.BjA simple and fast random number generator.CmApplies bitwise \xe2\x80\x9cor\xe2\x80\x9d to the current value and returns \xe2\x80\xa6000CmApplies logical \xe2\x80\x9cor\xe2\x80\x9d to the current value and returns \xe2\x80\xa611111111AdSet foreground colorCjReturn the contents of the internal buffer, filling it \xe2\x80\xa6ClApplies a closure to items in the stream and returns the \xe2\x80\xa6CmReturns a mutable reference to an entry in the table with \xe2\x80\xa6CgFind an element in the list that can be changed and \xe2\x80\xa6DgThe equivalent of <code>core::hash::Hasher.finish</code> for 32-bit \xe2\x80\xa6DoReturns a span that contains <code>other</code> by extending <code>self</code>.CaMaps items to streams and then concatenates them.BkCalls a closure on each item of the stream.EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6DhAttempt to create a <code>Time</code> from the hour, minute, and second.DkCreate a <code>UtcOffset</code> representing an offset by the number of \xe2\x80\xa6fSafetyC`Creates a virtual address from the given pointer000000BdConstructs a box from a raw pointer.BgConverts a raw pointer into a Runnable.DbBuilds a <code>CString</code> copying from a raw C string pointer.CfCreates a new mutex based on a pre-existing raw mutex.CmCreates a new reentrant mutex based on a pre-existing raw \xe2\x80\xa6DlCreates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a \xe2\x80\xa6CeMake a new segment selector from a untyped u16 value.DcCreates a <code>VolatileRef</code> from the given shared reference.CmCreate a new PRNG seeded from an infallible <code>Rng</code>.AnParse a flags value from text.CeParse a string representation of an Ethernet address.BoParse a string representation of an IP address.BlParse a string representation of an IP CIDR.BnParse a string representation of an IPv4 CIDR.BnParse a string representation of an IPv6 CIDR.DiCreates a <code>PrivilegeLevel</code> from a numeric value. The value \xe2\x80\xa6AmConvert from <code>u32</code>AmConvert from <code>u64</code>DmConstruct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.Cj\xe2\x80\x9cDereferences\xe2\x80\x9d the fs register at <code>offset</code>.0BmThis crate provides bindings to FUSE devices.B`Generate a new block of results.CjReturn two mutable references to the values associated \xe2\x80\xa6DhObtains the range of bits specified by <code>range</code>; note that \xe2\x80\xa60DgGives back <strong>current</strong> seed that is being held by this \xe2\x80\xa6mGet the seed.00Cj\xe2\x80\x9cDereferences\xe2\x80\x9d the gs register at <code>offset</code>.0ClAssignable Bandwidth Monitoring Counters is supported if \xe2\x80\xa6CmThermal Monitor and Software Controlled Clock Facilities. \xe2\x80\xa60CdAPIC On-Chip. The processor contains an Advanced \xe2\x80\xa60CkARAT. APIC-Timer-always-running feature is supported if \xe2\x80\xa60CmSupport for the AMD advanced virtual interrupt controller \xe2\x80\xa60dAVX20ClBandwidth Monitoring Event Configuration is supported if \xe2\x80\xa6dBMI10dBMI20dCLWB0CgConditional Move Instructions. The conditional move \xe2\x80\xa60ClECMD. Clock modulation duty cycle extension is supported \xe2\x80\xa60CgEnhanced Intel SpeedStep\xc2\xae technology. A value of 1 \xe2\x80\xa60CiA value of 1 indicates that processor supports 16-bit \xe2\x80\xa60BeFour-operand FMA instruction support.0AmSupports Fast Short REP STOSBBcSupports Fast zero-length REP MOVSBdGFNI0BkGuest Mode Execution Trap supported if set.0ClL3 Range Reservations. See \xe2\x80\x9cL3 Range Reservation\xe2\x80\x9d in \xe2\x80\xa6CmSupports 57-bit linear addresses and five-level paging if \xe2\x80\xa60CmMOVU (Move Unaligned) SSE instructions are efficient more \xe2\x80\xa60CiMemory Type Range Registers. MTRRs are supported. The \xe2\x80\xa60CbIndicates support for NRIP save on #VMEXIT if set.0BgIndicates OS-visible workaround support0ClProcess-context identifiers. A value of 1 indicates that \xe2\x80\xa60ClPerfmon and Debug Capability: A value of 1 indicates the \xe2\x80\xa60CeSupports Intel Resource Director Technology (RDT) \xe2\x80\xa6000AaHas SGX1 support.0AaHas SGX2 support.0CmSMAP. Supports Supervisor-Mode Access Prevention (and the \xe2\x80\xa60CiSMEP. Supports Supervisor-Mode Execution Prevention if 1.0CaSSE2. The processor supports the SSE2 extensions.0CnStreaming SIMD Extensions 3 (SSE3). A value of 1 indicates \xe2\x80\xa60CmIf true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = \xe2\x80\xa60BoSupports user-mode instruction prevention if 1.0dVAES0BfVM Permission Levels supported if set.0CjA hash map implemented with quadratic probing and SIMD \xe2\x80\xa6CjCalculates the hash of a single value. This provides a \xe2\x80\xa60EdA hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.De<code>static</code> friendly data structures that don\xe2\x80\x99t require \xe2\x80\xa6CdReturns the identity of the <code>Hypervisor</code>.0AkIncrease indentation level.fSafetyAjTake ownership of the key.CfConsumes this entry to yield to key associated with itDkConverts the <code>OccupiedEntry</code> into a mutable reference to the \xe2\x80\xa60CeConsumes this entry and yields a reference to the \xe2\x80\xa6ChConverts this <code>Ref</code> into a mutable reference.G`Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not \xe2\x80\xa6EdConverts this <code>VolatileRef</code> into a <code>VolatilePtr</code> with full \xe2\x80\xa6CoConsumes the <code>Box</code>, returning a wrapped raw pointer.BfConverts this task into a raw pointer.C`Converts this <code>Ref</code> into a reference.CeProduces the source underlying the failed conversion.00000000DfConverts <code>self</code> into a vector without clones or allocation.DnReturns the underlying <code>Vec&lt;T,N&gt;</code>. Order is arbitrary and \xe2\x80\xa60EfConvert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the \xe2\x80\xa6BfGet the IP addresses of the interface.AjSend a INIT IPI to a core.00BbIs device using 64-bit addressing?ChDirty; indicates whether software has written to the \xe2\x80\xa60CnDirty; if PS set indicates whether software has written to \xe2\x80\xa6CnDirty; if PD_PS set indicates whether software has written \xe2\x80\xa6CmReturns <code>true</code> if the vector contains no elements.CkReturns <code>true</code> if there are no unfinished tasks.0BoWhether all bits in this flags value are unset.0C`Returns <code>true</code> if the queue is empty.CoReturns <code>true</code> if the queue is empty but not closed.CjReturns <code>true</code> if the map contains no elements.CjReturns <code>true</code> if the set contains no elements.0B`Returns true if the vec is emptyBcChecks if the binary heap is empty.BcReturns whether the deque is empty.BdReturns true if the buffer is empty.BmReturns true if the map contains no elements.50BcChecks if the linked list is empty.BcReturns whether the queue is empty.00;;;;;;;B`ManagedMap contains no elements?<BnReturns true if the <code>Map</code> is empty.CeReturns true if the <code>OrderedMap</code> is empty.DaReturns true if the <code>OrderedSet</code> contains no elements.CjReturns true if the <code>Set</code> contains no elements.DcReturn <code>true</code> if there are no values stored in the slab.C`Returns <code>true</code> if the vector is emptyBnReturn whether the assembler contains no data.BbQuery whether the buffer is empty.0CkReturns <code>true</code> if no flags are currently stored.000ClReturn whether the segment has no flags set (except PSH) \xe2\x80\xa6BmReturns whether <code>base &gt;= acme</code>.BoWhether all bits in this flags value are unset.000000000000000033333333333333333333000000000000CiChecks if the page table is empty (all entries are zero).BlReturns wether this range contains no pages.BmReturns whether this range contains no pages.BmReturns whether the range contains no frames.044CmPer RFC 4443 \xc2\xa7 2.1 ICMPv6 message types with the highest \xe2\x80\xa6CkQuery whether the \xe2\x80\x9clocally administered\xe2\x80\x9d bit in the \xe2\x80\xa6AjWhether the flag is named.CkReturn a boolean value indicating if the given message typeAoCheck if no effects are enabledAnCheck if no styling is enabledBlReturns whether <code>base &lt; acme</code>.DbReturns <code>true</code> if the mutable reference has been taken.00AhGet the ISO week number.CiGet the ISO week number of the date in the stored offset.11CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CnAn iterator visiting all elements in arbitrary order, with \xe2\x80\xa6CiReturns a mutable iterator visiting all values in the \xe2\x80\xa6CeReturns an iterator that allows modifying each value.CnReturn an iterator over the key-value pairs of the map, in \xe2\x80\xa641CdReturn an iterator that allows modifying each value.BlGet a mutable iterator to the inner sockets.ClReturns an iterator that allows modifying the entries of \xe2\x80\xa6CkGet the last key-value pair, with mutable access to the \xe2\x80\xa6CnCreate a stack-based event listener for an <code>Event</code>.DdLoad the task state register using the <code>ltr</code> instruction.DiThis library provides type-safe and fully-featured <code>Mutex</code> \xe2\x80\xa6CkThe spinlock implemenation is based on the abstractions \xe2\x80\xa6C`Acquires the mutex and clones a reference to it.BeGet Maximum supported ABMC counter IDCfThe maximum size dhcp packet the interface can receiveCfReturn whether the receive half of the full-duplex \xe2\x80\xa6CgReturn whether the transmit half of the full-duplex \xe2\x80\xa6BkGet the metadata associated with this task.0AjAdds metadata to the task.CjGiven a path, query the file system to get information \xe2\x80\xa6BaMetadata about the log directive.DlSet <code>metadata</code>. Construct a <code>Metadata</code> object with \xe2\x80\xa6ClCompute any information needed to format the value. This \xe2\x80\xa6DhCreate a <code>PrimitiveDateTime</code> using the existing date. The \xe2\x80\xa6CkReturns the last modification time listed in this metadata.AnReturn the message code field.0AnReturn the message type field.00CkConstructs a new history buffer, where every element is \xe2\x80\xa60AkGet the next calendar date.oAvailable indexCnOffset within the ring where the next available ring entry \xe2\x80\xa6BhReturn the next random <code>u32</code>.BhReturn the next random <code>u64</code>.AdGet n-th next month.AbGet n-th next day.AhGet n-th previous month.AfGet n-th previous day.De<code>num_conv</code> is a crate to convert between integer types \xe2\x80\xa6AoTotal number of CPUs available.CiSee https://docs.rs/num_enum for more info about this \xe2\x80\xa6AiReturn number of sources.BcReturn the number of sources field.DbAn overflow exception (<code>#OF</code>) occurs as a result of \xe2\x80\xa6DcReturns true if <code>self</code> overlaps with <code>other</code>.DkReturns whether some of <code>self</code> overlaps with <code>other</code>.BkReturns the 9-bit level 1 page table index.000CbReturns the level 1 page table index of this page.BkReturns the 9-bit level 2 page table index.000CbReturns the level 2 page table index of this page.BkReturns the 9-bit level 3 page table index.000CbReturns the level 3 page table index of this page.BkReturns the 9-bit level 4 page table index.000CbReturns the level 4 page table index of this page.CjGiven virtual address calculate corresponding entry in PD.0CkReturns a mutable reference to the greatest item in the \xe2\x80\xa6CmFeeds the value into the state given, updating the hasher \xe2\x80\xa60AlReturns package type on AMD.0CkRemoves the item from the back of the deque and returns \xe2\x80\xa6CmFinds the index of the first item of the stream for which \xe2\x80\xa6AiA position of a nul byte.Db<code>powerfmt</code> is a library that provides utilities for \xe2\x80\xa6AgGet the previous month.AiGet the previous weekday.ChReturns an iterator over the subclass\xe2\x80\x99 programming \xe2\x80\xa6BkAttempts to find the a property by its name00CjGiven virtual address calculate corresponding entry in PT.0DfAppends a given string slice onto the end of this <code>String</code>.AdRead FS Segment BaseAdRead GS Segment BaseD`Generates a 16-bit random value and stores it in <code>e</code>.D`Generates a 32-bit random value and stores it in <code>e</code>.D`Generates a 64-bit random value and stores it in <code>e</code>.210BoAcquires an owned, reference-counted read lock.CmReads a IEEE754 single-precision (4 bytes) floating point \xe2\x80\xa6CmReads a IEEE754 double-precision (8 bytes) floating point \xe2\x80\xa6CdReads a signed 16 bit integer from <code>buf</code>.DcReads a signed 24 bit integer from <code>buf</code>, stored in i32.CdReads a signed 32 bit integer from <code>buf</code>.DcReads a signed 48 bit integer from <code>buf</code>, stored in i64.CdReads a signed 64 bit integer from <code>buf</code>.CeReads a signed n-bytes integer from <code>buf</code>.AoRead the current raw DR6 value.AoRead the current raw DR7 value.CeReturns the raw current value of the RFLAGS register.B`Read the current raw EFER flags.CkRead the Ring 0 and Ring 3 segment bases. The remaining \xe2\x80\xa6BaReads the raw IA32_APIC_BASE MSR.AoRead the current raw CR0 value.CkRead the current page fault linear address from the CR2 \xe2\x80\xa6CgRead the current P4 table address from the CR3 registerAoRead the current raw CR4 value.AoRead the current raw CR8 value.B`Read the current raw XCR0 value.CkGets the current instruction pointer. Note that this is \xe2\x80\xa6CgReads an unsigned 16 bit integer from <code>buf</code>.DfReads an unsigned 24 bit integer from <code>buf</code>, stored in u32.CgReads an unsigned 32 bit integer from <code>buf</code>.DfReads an unsigned 48 bit integer from <code>buf</code>, stored in u64.CgReads an unsigned 64 bit integer from <code>buf</code>.CiReturns which register this specific extended subleaf \xe2\x80\xa60AbReserved, set to 0BoRestricts access permissions to <code>A</code>.0AdSVM revision number.0B`The actual scheduling procedure.AcSchedules the task.CgReturns the eight 16-bit segments that make up this \xe2\x80\xa6AcSend a generic IPI.00ClSends a raw byte on the serial port, intended for binary \xe2\x80\xa60ClMap the entry to the specified physical address with the \xe2\x80\xa6DiSets the range of bits defined by the range <code>range</code> to the \xe2\x80\xa60BoSet the Differential Services Code Point field.AdSets the hops field.CgThe Packet ID to be associated with the frame to be \xe2\x80\xa6BhSet the Querier\xe2\x80\x99s Query Interval Code.BaSets the <code>secs</code> field.C`Sets the size field of a debug address register.CmSet the type of the descriptor (bits 8-11). Indicates the \xe2\x80\xa6CaShared memory region 64 bit long physical addressCiSmall vectors in various sizes. These store a certain \xe2\x80\xa6CiCreates a <code>SmallVec</code> containing the arguments.BkAttempts to split <code>self</code> in two.0CdAttempts to split <code>self</code> at the midpoint.B`Return the source address field.AjReturn the source address.11B`IPv6 address of the source node.AmReturn the source port field.0DdCreate a [<code>std::time::Duration</code>] from the number of days.CnThe function computes a sequence of pseudo-random integers \xe2\x80\xa6AaInvoke a syscall.000000CmRepresent the number of seconds and nanoseconds since the \xe2\x80\xa6AmKernel image TLS information.DhExtracts the bytes of <code>self</code> without swapping the byte order.00000000000CcSplit a multi-lane vector into single-lane vectors.D`Converts <code>self</code> to the equivalent <code>Level</code>.ChReturns <code>None</code> if <code>self</code> is empty.AkConstruct a transmit token.DhShortens the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6BgRemove any unknown bits from the flags.01DeShortens the map, keeping the first <code>len</code> elements and \xe2\x80\xa6CjShortens this <code>String</code> to the specified length.CiTruncate an integer to an integer of the same size or \xe2\x80\xa6DgShorten the vector, keeping the first <code>len</code> elements and \xe2\x80\xa6CnReduce the extent of a heap. The new extent must encompass \xe2\x80\xa6EmRaise <code>base</code> by <code>low</code> and lower <code>acme</code> by <code>high</code>.CcAccumulates a fallible computation over the stream.EhAttempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.CmTry to create the target number type from a source number \xe2\x80\xa60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CcTries to convert the exception vector number to \xe2\x80\xa6BfRe-allocate to set the capacity to \xe2\x80\xa6BlGet an iterator over the items in the queue.AnAttempts to acquire the mutex.ClAttempts to acquire this mutex without blocking. Returns \xe2\x80\xa6AnAttempts to acquire this lock.10CmTry to lock the mutex and access the inner <code>Talc</code>.BfRetrieves the next item in the stream.DePoll this <code>TryFuture</code> as if it were a <code>Future</code>.B`Attempts to acquire a read lock.DeAttempts to acquire this <code>RwLock</code> with shared read access.CdAttempts to run a task if at least one is scheduled.000CfTemporarily unlocks the mutex to execute the given \xe2\x80\xa60DdTemporarily unlocks the <code>RwLock</code> to execute the given \xe2\x80\xa600AgLaunch virtual machine.AgResume virtual machine.AgVolatile Pointer Types.CaProvides volatile wrapper types for raw pointers.DiAttempt to create a <code>PrimitiveDateTime</code> using the existing \xe2\x80\xa6AiVQ number to be notified.AeWrite FS Segment BaseAeWrite GS Segment BaseCgWrites a copy of <code>self</code> to <code>dst</code>.BkAccess to various extended system registersCn<em><strong>Fast, safe, compile error. Pick two.</strong></em>BoSection 10.4.4, Local APIC Status and Location.BiAvailable for use by the Operating SystemCnA socket address could not be bound because the address is \xe2\x80\xa6oA memory range.AfAddress already in useBmThe conversion source was improperly aligned.0000CdFuture for the <code>StreamExt::all()</code> method.DkAn implementation of <code>Allocator</code> can allocate, grow, shrink, \xe2\x80\xa6BhAvailable 4-bit ANSI color palette codesCdFuture for the <code>StreamExt::any()</code> method.BgA conversion trait for network sockets.CnA read/write wrapper around an Address Resolution Protocol \xe2\x80\xa6AgA buffer (re)assembler.AkPointer indicates the errorDgBits <code>0..=23</code> of the base field (ignored in 64-bit mode, \xe2\x80\xa6AfThe broadcast address.CgAn IPv4 address representing the broadcast address: \xe2\x80\xa6jBad lengthBaDefines big-endian serialization.AfBig-endian byte order.CjSpecify the size of the memory location at the address \xe2\x80\xa6EcBright red: #1 (foreground code <code>91</code>, background code <code>101</code>).Di<code>ByteOrder</code> describes types that can serialize integers as \xe2\x80\xa6BjA type-level representation of byte order.CaA mutable or immutable reference to a byte slice.AoControl channel VLAN filtering.CjDescribes any kind of cache (TLB, Data and Instruction \xe2\x80\xa60CiInfo about a what a given cache caches (instructions, \xe2\x80\xa60BhThe error type of reference conversions.ClThe number of cells (big endian u32s) that addresses and \xe2\x80\xa6AeChaCha with 20 roundsAnCommon configuration structureAhConnection reset by peerDhA marker trait over <code>RngCore</code> for securely unpredictable RNGsCjA string representation of the page size for debug output.BiA string representation for debug output.1CnIndicates that the driver is set up and ready to drive the \xe2\x80\xa6CaDebug port capability, Cap ID = <code>0x0A</code>BkA double-ended queue with dynamic capacity.BiSent by the device, to create a new port.AcEPT pointer (full).AcEPT pointer (high).DmThis feature enables the <em>used_event</em> and the <em>avail_event</em> \xe2\x80\xa6CnDevice-independent Bit. See <code>virtio::F::EVENT_IDX</code>.0000jEcho replyjEcho ReplyBnFlags of the Extended Feature Enable Register.CjStream for the <code>StreamExt::enumerate()</code> method.AiPossible kinds of errors.CfBase trait for all IO traits, defining the error type.DjA draining iterator over entries of a <code>HashMap</code> which don\xe2\x80\x99\xe2\x80\xa6DjA draining iterator over entries of a <code>HashSet</code> which don\xe2\x80\x99\xe2\x80\xa6DiA draining iterator over entries of a <code>HashTable</code> which don\xe2\x80\xa6AlVirtual Interrupt Flag (VIF)0AoVirtual Interrupt Pending (VIP)0BaPort address = <code>0x480</code>BaPort address = <code>0x580</code>BaPort address = <code>0x400</code>CkStream for the <code>StreamExt::filter_map()</code> method.Al32-bit Fowler-Noll-Vo hasherBiTypes for which any bit pattern is valid.DgTypes for which a sequence of <code>0</code> bytes is a valid instance.BhExtension trait for <code>Future</code>.oHost GDTR base.A`Guest GDTR base.B`Driver can receive TSO with ECN.AgDriver can receive UFO.CnMarker type which indicates that the Guard type for a lock \xe2\x80\xa6AiDevice can receive TSOv4.AiDevice can receive TSOv6.CkSpecifies that the entry maps a huge frame instead of a \xe2\x80\xa6BkLow-level hash table with explicit hashing.0EcThe entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> \xe2\x80\xa6CmHypervisor calls available in Uhyve with their respective \xe2\x80\xa6CmIf (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.\xe2\x80\xa6BmPerformance Counter Register  See Table 35-2.0000000CaSystem Call Target Address (R/W)  See Table 35-2.oHost IDTR base.A`Guest IDTR base.BnThe high bit of the I/O Privilege Level field.BnTypes which are free from interior mutability.AeA  network interface.ChTypes that can be converted to an immutable slice of \xe2\x80\xa6AkAn internetworking address.AjInternet protocol version.jISR StatusAnAn iterator over flags values.CgL2 Cache Allocation Technology Enumeration Sub-leaf \xe2\x80\xa60CgL3 Cache Allocation Technology Enumeration Sub-leaf \xe2\x80\xa60CfEnables 5-level paging on supported CPUs (Intel Only).A`Guest LDTR base.CkAn IPv4 address with the address pointing to localhost: \xe2\x80\xa6CiAn IPv6 address representing localhost: <code>::1</code>.CfMust be set for 64-bit code segments, unset otherwise.CaA type wrapping a large page with a 4 MiB buffer.CaA type wrapping a large page with a 2 MiB buffer.CmA fixed capacity map/dictionary that performs lookups via \xe2\x80\xa6AbThe maximum value.0000BaDriver can merge receive buffers.BfDevice has support for multiple ports;AiMulticast Listener ReportBlA vector composed of multiple 128-bit lanes.jMultiboot.D`The device uses this in used-&gt;flags to advise the driver: \xe2\x80\xa6ChA high-level representation of an Neighbor Discovery \xe2\x80\xa6BoThe given page table was not active on the CPU.CiThe given virtual address is not mapped to a physical \xe2\x80\xa6AePCI Notify CapabilityCdFuture for the <code>StreamExt::nth()</code> method.De<code>O_CLOEXEC</code> has no functionality in Hermit and will be \xe2\x80\xa6BmOperation not supported on transport endpointjOwner diedAcThe base page size.CiA PDPT Entry consists of an address and a bunch of flags.BcPDPT configuration bit description.CiA PML4 Entry consists of an address and a bunch of flags.BcPML4 configuration bit description.CiA PML5 Entry consists of an address and a bunch of flags.BcPML5 configuration bit description.jPML index.iPrecisionBfA non-empty page-aligned memory range.BlA range of pages with exclusive upper bound.AhRepresents a page table.A`Parameter ServerClEvery PCI configuration region starts with a header made \xe2\x80\xa6DiIdentical to <code>std::borrow::Borrow</code> except omitting blanket \xe2\x80\xa6AhA physical memory frame.oPacket Too Big.CdSent by the driver in response to the device\xe2\x80\x99s \xe2\x80\xa6ChA helper trait that implements the write port operation.AnProtocol wrong type for socketCiError which occurs when pushing into a full or closed \xe2\x80\xa6BkA <code>Queue</code> with dynamic capacity.0DlAn <code>i16</code> that is known to be in the range <code>MIN..=MAX</code>.DlAn <code>i32</code> that is known to be in the range <code>MIN..=MAX</code>.DlAn <code>i64</code> that is known to be in the range <code>MIN..=MAX</code>.DkA <code>u16</code> that is known to be in the range <code>MIN..=MAX</code>.DkA <code>u32</code> that is known to be in the range <code>MIN..=MAX</code>.DkA <code>u64</code> that is known to be in the range <code>MIN..=MAX</code>.BjBasic operations for a reader-writer lock.AnGet whether a reader is ready.CkZero-sized marker type for allowing both read and write \xe2\x80\xa6oData Read/WriteBkError returned by <code>Socket::recv</code>BaFor configurable receive steeringBcseqpacket socket type is supported.CnSet by hardware if last arithmetic operation resulted in a \xe2\x80\xa6AoEnable shadow stack (SH_STK_EN)CdAn x86 segment which is actually used in 64-bit modeCkA counter for limiting the number of concurrent operations.BkError returned by <code>Socket::send</code>AlSocket Device Shutdown FlagsBaAn implementation of SipHash 2-4.BdAn implementation of SipHash128 2-4.CnThe error emitted if the conversion source is of incorrect \xe2\x80\xa6CkStream for the <code>StreamExt::skip_while()</code> method.BjProvides links between slots and elements.AmAn extensible set of sockets.DbA <code>lock_api::Mutex</code> based on <code>RawSpinMutex</code>.BhExtension trait for <code>Stream</code>.CfRepresents an subsystem to a PCI device in the PCI \xe2\x80\xa6BfEnable single-step mode for debugging.CkStream for the <code>StreamExt::take_while()</code> method.BhA representation of a single TCP option.CfA read/write wrapper around a Transmission Control \xe2\x80\xa6iTimestampCcProvides methods for translating virtual addresses.DiA convenience for futures that return <code>Result</code> values that \xe2\x80\xa6DiA convenience for streams that return <code>Result</code> values that \xe2\x80\xa6CbStream for the <code>try_unfold()</code> function.iUnderflowCiStyle extensions exist for Kitty, VTE, mintty and iTerm2.BkA user data segment (64-bit or flat 32-bit)CnIf this flag is set, an access in user mode (CPL=3) caused \xe2\x80\xa6CiA read/write wrapper around an User Datagram Protocol \xe2\x80\xa6BdTypes with no alignment requirement.DjWrapper around <code>TryRngCore</code> implementation which implements \xe2\x80\xa60AcAn offset from UTC.CmThis indicates compliance with this specification, giving \xe2\x80\xa6CnDevice-independent Bit. See <code>virtio::F::VERSION_1</code>.0000DcA mutable iterator over the values of a <code>HashMap</code> in \xe2\x80\xa6CnA mutable iterator over the values of a <code>IndexMap</code>.CfZero-sized marker type for allowing only write access.BlAn attempted write could not write any data.AiEOI register. Write-only.ChError Status Register (ESR). Read/write. See Section \xe2\x80\xa6CkLogical Destination Register (LDR). Read/write in xAPIC \xe2\x80\xa6BmProcessor Priority Register (PPR). Read-only.CmSpurious Interrupt Vector Register (SVR). Read/write. See \xe2\x80\xa6CkTask Priority Register (TPR). Read/write. Bits 31:8 are \xe2\x80\xa6BiConfiguration flags of the XCr0 register.CnSet by hardware if last arithmetic operation resulted in a \xe2\x80\xa6CnEnables AVX-512 instructions and using the upper halves of \xe2\x80\xa6hReservedAnReturn the ACK delay duration.BbReturn the address vector in bytesCbVector of addresses, numbered 1 to <code>n</code>.CdReturns an iterator over all of the nodes in the \xe2\x80\xa6C`Returns a reference to the underlying allocator.000000CdDetermines if the <code>#</code> flag was specified.CiReturns the four eight-bit integers that make up this \xe2\x80\xa6CkReturns the sixteen eight-bit integers the IPv6 address \xe2\x80\xa6CiReturns a pair of slices which contain, in order, the \xe2\x80\xa60CmProvides the abstraction of a bit field, which allows for \xe2\x80\xa6DfCreating and reading <code>RawBootInfo</code> from <code>Entry</code>.jBoot time.BoReturn the broadcast address of this IPv4 CIDR.CnBroadcast flags. It can be set in DHCPDISCOVER, DHCPINFORM \xe2\x80\xa6ClThis crate provides convenience methods for encoding and \xe2\x80\xa6BdByte order-aware numeric primitives.BbGets the underlying bytes mutably.DiThis crate provides <code>CallOnce</code>, a simple, thread-safe type \xe2\x80\xa6BjMark this <code>CallOnce</code> as called.00ChEnsure that no accessor method will panic if called. \xe2\x80\xa60000000000000000ChReturns the Ipv4 address of the client, zero if not set.DjThis field is also known as <code>ciaddr</code> in the RFC. It is only \xe2\x80\xa6ChReturns the condition field of a debug address register.CoConfigures the breakpoint by writing <code>dr</code> registers.CfCreates a new mutex based on a pre-existing raw mutex.CmCreates a new reentrant mutex based on a pre-existing raw \xe2\x80\xa6DlCreates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a \xe2\x80\xa6CkReports a value that may be used to distinguish between \xe2\x80\xa6CgThe flags register before the interrupt handler was \xe2\x80\xa6jWrite cr0.BdWrite cr2, for instance to reset cr2AoSwitch page-table PML4 pointer.jWrite cr4.BlFunctions to read and write debug registers.BeReturn the destination address field.AjVirtio Subsystem Device IDBgReturn the \xe2\x80\x9cdon\xe2\x80\x99t fragment\xe2\x80\x9d flag.BgDowngrades into a regular reader guard.000CnAtomically downgrades an exclusive lock into a shared lock \xe2\x80\xa6CgAtomically downgrades a write lock into a read lock \xe2\x80\xa6CmAtomically downgrades an upgradable read lock lock into a \xe2\x80\xa6jWrite dr0.jWrite dr1.jWrite dr2.jWrite dr3.jWrite dr6.jWrite dr7.CgEnables the breakpoint condition for the associated \xe2\x80\xa6AbAdd Version Array.CdInvalidate an EPC Page and Write out to Main Memory.DhReturns <code>true</code> if <code>needle</code> is a suffix of the Vec.CnGets the given key\xe2\x80\x99s corresponding entry by reference in \xe2\x80\xa6CmEnumerates items, mapping them to <code>(index, item)</code>.ChReturn the EtherType field, without checking for 802.1Q.DdIncrements the current value by <code>val</code> and returns the \xe2\x80\xa600000000000CnApplies bitwise \xe2\x80\x9cand\xe2\x80\x9d to the current value and returns \xe2\x80\xa600000CnApplies logical \xe2\x80\x9cand\xe2\x80\x9d to the current value and returns \xe2\x80\xa6111111DhCompares and sets the maximum of the current value and <code>val</code>,00000000000DhCompares and sets the minimum of the current value and <code>val</code>,00000000000DdDecrements the current value by <code>val</code> and returns the \xe2\x80\xa600000000000CnApplies logical \xe2\x80\x9cxor\xe2\x80\x9d to the current value and returns \xe2\x80\xa6CnApplies bitwise \xe2\x80\x9cxor\xe2\x80\x9d to the current value and returns \xe2\x80\xa600000000000CmReturns the first node that matches the node path, if you \xe2\x80\xa6AeReturn a 128-bit hash000ClGet the first key-value pair, with mutable access to the \xe2\x80\xa6CfInvalidate the TLB completely by reloading the CR3 \xe2\x80\xa60CjFlush all pages from the TLB to ensure that the newest \xe2\x80\xa6CnPrint a <code>const</code> expression representing this value.CmProduces layout describing a record that could be used to \xe2\x80\xa6CjForces the evaluation of this lazy value and returns a \xe2\x80\xa60BgA free-list-based page/frame allocator.BnLosslessly convert from <code>AnsiColor</code>AjConvert from a bits value.000000000CkConvert from underlying bit representation, unless that \xe2\x80\xa6000DcConverts a native byte order <code>u32</code> into an IPv4 address.DdConverts a native byte order <code>u128</code> into an IPv6 address.333AbConvert from bits.44444444004444443333333333333333333344DgCreates a new hardware breakpoint condition if <code>bits</code> is \xe2\x80\xa6DeCreates a new hardware breakpoint size if <code>bits</code> is valid.5666666666666E`Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.D`The bitwise or (<code>|</code>) of the bits in each flags value.00000000000000000000000000000000000000ClGet a flags value with the bits of a flag with the given \xe2\x80\xa60000000000000000000000000000000000000000CgCreates a new Flags with the given I/O privilege level.0CkCreate a new <code>Instant</code> from a number of seconds.ClCreate a new <code>Duration</code> from a number of seconds.BgCreate a new PRNG using the given seed.ClCreates a page layout with <code>PAGE_SIZE</code> alignment.BoConvert UTF-8 bytes into a <code>String</code>.0CnProvides a mutable reference to the front element, or None \xe2\x80\xa6CnLike <code>get</code>, but returns both the key and the value.0CjReturns a tuple of references to the key and the value \xe2\x80\xa6ChReturns the index of the key within the list used to \xe2\x80\xa60D`Return an index into <code>phf_generator::HashState::map</code>.Aa3DNow extensions.0CjA value of 1 indicates that the processor supports the \xe2\x80\xa60nSupports AVX10ClThe internal FP/SIMD execution datapath is 128 bits wide \xe2\x80\xa60ClThe internal FP/SIMD execution datapath is 256 bits wide \xe2\x80\xa60CaMemory Bandwidth Enforcement is supported if set.AcIs LZCNT available?0ClA value of 1 indicates that the processor supports MOVBE \xe2\x80\xa60CiOS has set CR4.PKE to enable protection keys (and the \xe2\x80\xa60Ch36-Bit Page Size Extension. 4-MByte pages addressing \xe2\x80\xa60BeRDPID and IA32_TSC_AUX are available.0BcRDPRU instruction supported if set.0CjA value of 1 indicates that the processor supports SSE4.1.0CjA value of 1 indicates that the processor supports SSE4.2.0ChXTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.0CkA value of 1 indicates the presence of the Supplemental \xe2\x80\xa60>>ClThis crate is a Rust port of Google\xe2\x80\x99s high-performance \xe2\x80\xa6ClReturn the time-to-live (IPv4) or hop limit (IPv6) value \xe2\x80\xa6AeReturn the TTL value.AnReturn the time to live field.AkReturn the hop limit field.AjThe 8-bit hop limit field.ClA fixed-capacity hash table where the iteration order is \xe2\x80\xa6CiReturns a mutable reference to the IDT entry with the \xe2\x80\xa60000000000000CjA fixed-capacity hash set where the iteration order is \xe2\x80\xa6iInput ECXCmConvert to <code>AnsiColor</code> when there is a 1:1 mappingAbConvert into bits.00CnCreates a consuming iterator, that is, one that moves each \xe2\x80\xa60DeCreates an iterator over the entries of a <code>HashMap</code> in \xe2\x80\xa601CiCreates a consuming iterator visiting all the keys in \xe2\x80\xa6BfGet the first IPv4 address if present.BlGet the first IPv4 address of the interface.BfGet the first IPv6 address if present.0BfReturn whether a connection is active.BbReport whether the color is brightCaReturns <code>true</code> if the queue is closed.CkReturns <code>true</code> if the queue is empty and closed.1DcReturns <code>true</code> if the address appears to be globally \xe2\x80\xa60CnGlobal; if CR4.PGE = 1, determines whether the translation \xe2\x80\xa60D`Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the \xe2\x80\xa60DbReturns <code>true</code> if this task was the last to call to \xe2\x80\xa6BmChecks whether the mutex is currently locked.0000DbChecks if this <code>RwLock</code> is currently locked in any way.0DgChecks whether this <code>RwLock</code> is currently locked in any way.DkReturns <code>true</code> if this address is part of the Shared Address \xe2\x80\xa6EhReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>\xe2\x80\xa6EhReturns <code>true</code> if the set is a subset of another, i.e. <code>other</code> \xe2\x80\xa6DlReturns true if <code>other</code> contains all values in <code>self</code>.0BcReturns whether this entry is zero.BoIterate over all of the contiguous data ranges.CmAn iterator visiting all elements which may match a hash. \xe2\x80\xa6ChRepresent the timer interval in seconds and microsecondsCgKeep unyielded elements in the source <code>Vec</code>.AaLoad information.CmLoads the segment selector into the selector field of the \xe2\x80\xa6CbGenerates a random <code>char</code> in range a-z.ChProvides safe field projection for volatile pointers \xe2\x80\xa6DbMaps items while <code>predicate</code> returns <code>Some</code>.BfReturns the current maximum log level.AjConstruct an empty vector.AiCreate a new linked list.0DiWrap Counter. With <code>VIRTIO_F_RING_PACKED</code> this is the wrap \xe2\x80\xa6CeAn unsigned integer which is the numerator of the \xe2\x80\xa60CmReturn the version of an IP packet stored in the provided \xe2\x80\xa6hOverviewAkReturn the operation field.ClEnsures a value is in the entry by inserting the default \xe2\x80\xa60CjEnsures a value is in the entry by inserting if it was \xe2\x80\xa601AiParse the value from hex.EePartitions items into those for which <code>predicate</code> is <code>true</code> \xe2\x80\xa6CfAttempt to pull out the next value of this stream, \xe2\x80\xa6FbA convenience for calling <code>Stream::poll_next()</code> on <code>!</code><code>Unpin</code> \xe2\x80\xa6DhPolls a future just once and returns an <code>Option</code> with the \xe2\x80\xa6ClRemoves the item from the front of the deque and returns \xe2\x80\xa6CeOptionally specified precision for numeric types. \xe2\x80\xa6CeAppends an <code>item</code> to the back of the dequeChTurn the PSH flag into no flag, and keep the rest as-is.AbVirtual queue sizeAcVirtual queue indexAoRandom number generation traitsClA library to parse the x86 CPUID instruction, written in \xe2\x80\xa6AnReads the segment base addressCeReads a signed 128 bit integer from <code>buf</code>.BjRestricts access permissions to read-only.0CkRead the current P4 table address from the CR3 register \xe2\x80\xa6ChReads an unsigned 128 bit integer from <code>buf</code>.ChReads an unsigned n-bytes integer from <code>buf</code>.CfAccess to various system and model specific registers.CjGet a flags value of any remaining bits that haven\xe2\x80\x99t \xe2\x80\xa6BkRender the ANSI code for a background color000BkRender the ANSI code for a foreground color000DdReturns the value of the <code>siaddr</code> field, zero if not set.DiThis field is also known as <code>siaddr</code> in the RFC. It may be \xe2\x80\xa6BfSets the flags to the specified value.DkInserts or removes the specified <code>Dr7Flags</code> depending on the \xe2\x80\xa6AmSets the flags of this entry.CjMap the entry to the specified physical frame with the \xe2\x80\xa6BfSet the fragment identification field.BkSet the fragmentation identification field.AjSet the server/client portCfShrinks the capacity of the vector with a lower bound.CjShrinks the capacity of the map with a lower limit. It \xe2\x80\xa6CjShrinks the capacity of the set with a lower limit. It \xe2\x80\xa6ClShrinks the capacity of the table with a lower limit. It \xe2\x80\xa6CdDetermines if the <code>+</code> flag was specified.AoSipHash implementation for RustCiReturns the bounds on the remaining length of the stream.CmReturns a mutable slice of IDT entries with the specified \xe2\x80\xa6CbSplits the collection into two at the given index.nsize in blocksDeCreate a [<code>std::time::Duration</code>] from the number of hours.DeCreate a [<code>std::time::Duration</code>] from the number of weeks.BdReturns the subsystem\xe2\x80\x99s subdevice.AmReturns the subsystem\xe2\x80\x99s ID.BmInterface to allocate memory from system heapCbGet the error number from the thread local storageAjmanipulate file descriptorEa<code>read()</code> attempts to read <code>nbyte</code> of data to the object \xe2\x80\xa6ChThe function sets its argument as the seed for a new \xe2\x80\xa6CcThe index of the BAR that contains the MSI-X table.Algithub\xe2\x80\x82crates-io\xe2\x80\x82docs-rsBaCore items for <code>time</code>.EfConvert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to \xe2\x80\xa6EgConvert the <code>UtcDateTime</code> from UTC to the provided <code>UtcOffset</code>\xe2\x80\xa6DgCopies <code>self</code> into a new <code>Vec</code> with an allocator.AlWrite a flags value as text.AnReturn the total length field.CkReturn the payload length added to the known header length.CmReturn the frame that the given virtual address is mapped \xe2\x80\xa6CgSafely transmutes a value of one type to a value of \xe2\x80\xa6DiAttempts to return a reference to the wrapped <code>T</code>, failing \xe2\x80\xa6BaAttempts to acquire a write lock.DfAttempts to lock this <code>RwLock</code> with exclusive write access.AnCreates a new unbounded queue.BcApply <code>underline</code> effectCiReturn the IO port of this BAR or panic if not an IO BAR.CbGenerates a random <code>char</code> in range A-Z.B`Return the urgent pointer field.AjVirtio Subsystem Vendor IDCkSets the fill character to use whenever there is alignment.DhBuild a <code>RandomState</code> from a single key. The provided key \xe2\x80\xa6CjCreates a new random number generator with the initial \xe2\x80\xa6DkCreate a <code>PrimitiveDateTime</code> using the existing date and the \xe2\x80\xa6BhWrite an entire buffer into this writer.C`Acquires an owned, reference-counted write lock.ChWrite to a BAR, setting the address for a device to use.CnWrites a IEEE754 single-precision (4 bytes) floating point \xe2\x80\xa6CnWrites a IEEE754 double-precision (8 bytes) floating point \xe2\x80\xa6ClWrite a formatted string into this writer, returning any \xe2\x80\xa6AgWrite the value as hex.DbWrites a signed 16 bit integer <code>n</code> to <code>buf</code>.EaWrites a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.DbWrites a signed 32 bit integer <code>n</code> to <code>buf</code>.EaWrites a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.DbWrites a signed 64 bit integer <code>n</code> to <code>buf</code>.EjWrites a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.AdWrite raw DR7 value.AkWrites the RFLAGS register.AeWrite the EFER flags.ClWrite the Ring 0 and Ring 3 segment bases. The remaining \xe2\x80\xa6BdWrites the IA32_APIC_BASE MSR flags.AdWrite raw CR0 flags.CcWrite a new P4 table address into the CR3 register.AdWrite raw CR4 flags.mWrite to CR8.AeWrite raw XCR0 flags.DeWrites an unsigned 16 bit integer <code>n</code> to <code>buf</code>.CnWrite an <code>u16</code> into the sink, in native byte order.0EdWrites an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.DeWrites an unsigned 32 bit integer <code>n</code> to <code>buf</code>.CnWrite an <code>u32</code> into the sink, in native byte order.0EdWrites an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.DeWrites an unsigned 64 bit integer <code>n</code> to <code>buf</code>.ix2APIC IDCex2APIC ID the current logical processor. (Bits 31-00)10DcWakes the current task and returns <code>Poll::Pending</code> once.CkThe future returned by <code>Semaphore::acquire_arc</code>.BfThe memory allocator returned an errorDjThe <code>AllocError</code> error indicates an allocation failure that \xe2\x80\xa6AcAllocation failure.2BfThe error type of a failed allocation.BfA thread-safe mutable memory location.DhBits <code>24..=31</code> of the base field (ignored in 64-bit mode, \xe2\x80\xa6BeThe number of bits in this bit field.C`A priority queue implemented with a binary heap.DbA wrapper type implementing <code>RngCore</code> for some type \xe2\x80\xa6AdBound Range ExceededBiSpecifies available hardware breakpoints.jBreakpointEdBright blue: #4 (foreground code <code>94</code>, background code <code>104</code>).EdBright cyan: #6 (foreground code <code>96</code>, background code <code>106</code>).BoThe operation failed because a pipe was closed.ClSet by hardware if last arithmetic operation generated a \xe2\x80\xa6ClFor code segments, sets the segment as \xe2\x80\x9cconforming\xe2\x80\x9d, \xe2\x80\xa6BaPCI Capability Configuration TypeBjCast to a signed integer of the same size.CkA cryptographically secure random number generator that \xe2\x80\xa6BjChaCha with 20 rounds, low-level interfaceCnAn out-of-memory handler that attempts to claim the memory \xe2\x80\xa6CiRepresents the <code>compatible</code> property of a nodeCcConfiguration has been newly acquired, or modified.CnThese two bits encode the Descriptor Privilege Level (DPL) \xe2\x80\xa6Ba01 \xe2\x80\x94 Break on data writes only.kData writesEcBase struct for <code>Deque</code> and <code>DequeView</code>, generic over the \xe2\x80\xa6CnEntry for IDT, GDT or LDT. Provides size and location of a \xe2\x80\xa6BaA 64-bit mode segment descriptor.ClCombines the Base Class and the Sub-class of a device to \xe2\x80\xa6BfThe possible opcodes of a DHCP packet.BiA representation of a single DHCP option.ClA read/write wrapper around a Dynamic Host Configuration \xe2\x80\xa6CkA lazy iterator producing elements in the difference of \xe2\x80\xa6CnAn iterator over the difference of two <code>IndexSet</code>s.kEnable EPT.kEnable PML.kEPTP index.Aox86 External Interrupts (1-32).CnThis flag must be set for code segments and unset for data \xe2\x80\xa6CdEnumerate each enabled value in <code>Effects</code>CjEBX:EAX and EDX:ECX provide information on the Enclave \xe2\x80\xa60AfKey equivalence trait.BmParameters for a <code>Exit</code> hypercall.BaPort address = <code>0x840</code>CeFuture for the <code>StreamExt::find()</code> method.CeFuture for the <code>StreamExt::fold()</code> method.DdThe error returned by the <code>PageTableEntry::frame</code> method.AaGuest GDTR limit.BmDriver handles packets with partial checksum.AiDriver can receive TSOv4.AiDriver can receive TSOv6.BaFor configurable hash calculationkHash ReportChA \xe2\x80\x9chistory buffer\xe2\x80\x9d, similar to a write-only ring \xe2\x80\xa6BmIdentifies the different Hypervisor products.0kI2C adapterClActual Performance Frequency Clock Count (RW)  See Table \xe2\x80\xa6CbSystem Call Target Address the compatibility mode.BlSystem Call Flag Mask (R/W)  See Table 35-2.CkIA-32e Mode System Call Target Address (R/W)  See Table \xe2\x80\xa6CmMaximum Performance Frequency Clock Count (RW)  See Table \xe2\x80\xa6BjEnable indirect branch tracking (ENDBR_EN)AaGuest IDTR limit.CnA high-level representation of an Internet Control Message \xe2\x80\xa60ClA read/write wrapper around an Internet Group Management \xe2\x80\xa6AiOperation now in progressDcAn owning iterator over the values of a <code>HashMap</code> in \xe2\x80\xa6kInvalid TSSAmAn internet endpoint address.BbIP datagram encapsulated protocol.CnA read/write wrapper around an Internet Protocol version 4 \xe2\x80\xa6ChA read/write wrapper around an IPv6 Extension Header \xe2\x80\xa6CnA read/write wrapper around an Internet Protocol version 6 \xe2\x80\xa6BlEnables the Key Locker feature (Intel Only).oKey has expiredAdKey has been revokedAaGuest LDTR limit.DdBits <code>0..=15</code> of the limit field (ignored in 64-bit mode)CmA vector composed one or more lanes each composed of four \xe2\x80\xa6CeFuture for the <code>StreamExt::last()</code> method.CkMAXPHYADDR, which is at most 52; (use CPUID for finding \xe2\x80\xa6BcBit definitions same as MC0_STATUS.00CmBit definitions same as MC0_STATUS, except bits 0, 4, 57, \xe2\x80\xa6CmMachine Check R8 See Section 15.3.2.6, IA32_MCG Extended  \xe2\x80\xa6CgMachine Check R9D/R9 See Section 15.3.2.6, IA32_MCG \xe2\x80\xa6nA managed map.DdThis error is returned from <code>map_to</code> and similar methods.DiAn area described by the <code>initial-mapped-area</code> property of \xe2\x80\xa6AaWrong medium typeBmA guard that releases the mutex when dropped.CmAn RAII implementation of a \xe2\x80\x9cscoped lock\xe2\x80\x9d of a mutex. \xe2\x80\xa6BkEquivalent to <code>1.nanoseconds()</code>.BmForbid code execution from the mapped frames.CcA unit of time representing exactly one nanosecond.0AfNetwork is unreachableCeFuture for the <code>StreamExt::next()</code> method.AfProtocol not availableCcStream for the <code>once_future()</code> function.AiOptions for opening filesCaParameters for a <code>FileOpen</code> hypercall.ClAn order-preserving immutable map constructed at compile \xe2\x80\xa60ClAn order-preserving immutable set constructed at compile \xe2\x80\xa60ClSee Section 35.16, MSRs in Pentium Processors,  and see  \xe2\x80\xa60kPLE_Window.B`Metadata associated to a packet.AkLayout of a range of pages.BaA 12-bit offset into a 4KiB Page.CcAn error encountered while parsing flags from text.BkAn error returned when shell parsing fails.AoA packet capture writer device.AoThe address of a PCIe function.CbPCI Express capability, Cap ID = <code>0x10</code>BoA passed <code>u16</code> was not a valid PCID.C`Result returned by <code>Interface::poll</code>.CnA marker trait for access types which allow accessing port \xe2\x80\xa6EcBase struct for <code>Queue</code> and <code>QueueView</code>, generic over the \xe2\x80\xa60ClThis feature indicates that the driver can reset a queue \xe2\x80\xa6CoDevice-independent Bit. See <code>virtio::F::RING_RESET</code>.0000DmAn <code>i128</code> that is known to be in the range <code>MIN..=MAX</code>.DlA <code>u128</code> that is known to be in the range <code>MIN..=MAX</code>.AkData Read-Only, expand-downCaParameters for a <code>FileRead</code> hypercall.CcStream for the <code>repeat_with()</code> function.BmA trait for setting a value to a known state.EjThe resulting <code>Access</code> type of <code>Self</code> restricted to <code>To</code>.nA ring buffer.AcRPL Control MessageDdA <code>lock_api::RwLock</code> based on <code>RawRwSpinLock</code>.DdA <code>lock_api::RwLock</code> based on <code>RawRwSpinlock</code>.Dh<code>ScopeGuard</code> is a scope guard that may own a protected value.AkA x86 I/O port-mapped UART.BjInformation on how to reach a DHCP server.AjSignal Distribution ModuleBgA dynamic capacity <code>String</code>.CjA synchronization primitive which can be accessed only \xe2\x80\xa6ChThe possible control flags of a Transmission Control \xe2\x80\xa6CjConvenience trait for constructing a <code>SmallVec</code>CfA potentially fallible variant of <code>RngCore</code>AfTTL expired in transitB`Midnight, 1 January, 1970 (UTC).AjMidnight, 1 January, 1970.CnSome unified TLBs will allow a single TLB entry to satisfy \xe2\x80\xa60CkAn error indicating that an <code>unmap</code> call failed.AjThe future returned by \xe2\x80\xa6CbTrait defining how data for a container is stored.AmVendor Info String (LEAF=0x0)0AnFor automatic receive steeringAnGet whether a writer is ready.ClInterrupt Command Register (ICR). Read/write. See Figure \xe2\x80\xa60CgInterrupt Request Register (IRR); bits 31:0. Read-only.AjIRR bits 63:32. Read-only.AjIRR bits 95:64. Read-only.AkIRR bits 127:96. Read-only.AlIRR bits 159:128. Read-only.AlIRR bits 191:160. Read-only.AlIRR bits 223:192. Read-only.AlIRR bits 255:224. Read-only.C`In-Service Register (ISR); bits 31:0. Read-only.AjISR bits 63:32. Read-only.AjISR bits 95:64. Read-only.AkISR bits 127:96. Read-only.AlISR bits 159:128. Read-only.AlISR bits 191:160. Read-only.AlISR bits 223:192. Read-only.AlISR bits 255:224. Read-only.CbTrigger Mode Register (TMR); bits 31:0. Read-only.AjTMR bits 63:32. Read-only.AjTMR bits 95:64. Read-only.AkTMR bits 127:96. Read-only.AlTMR bits 159:128. Read-only.AlTMR bits 191:160. Read-only.AlTMR bits 223:192. Read-only.AlTMR bits 255:224. Read-only.BhReturn the acknowledgement number field.fPanics00000BcAdd an offset to a virtual address.CcConvert this value into an additional notification.0AhAlign address downwards.0CeAligns the virtual address downwards to the given \xe2\x80\xa6CfAligns the physical address downwards to the given \xe2\x80\xa6CkGenerates a random <code>char</code> in ranges a-z and A-Z.CiProvides in-place mutable access to an occupied entry \xe2\x80\xa6000CgReturns a tuple of (class ID, subclass ID) for this \xe2\x80\xa6CgReturns an unsafe mutable pointer to the vector\xe2\x80\x99s \xe2\x80\xa6DcReturns a raw mutable pointer to the <code>Box</code>\xe2\x80\x99s contents.CmReturns a raw pointer to the vector\xe2\x80\x99s buffer, which may \xe2\x80\xa6BnConverts the address to a mutable raw pointer.0000CgReturns a raw mutable pointer to the vector\xe2\x80\x99s buffer.1DlBorrows this <code>VolatileRef</code> as a mutable <code>VolatilePtr</code>.AkConvert to mutable pointer.003CkConverts a <code>String</code> into a mutable string slice.DhReturns a mutable reference to the contents of this <code>String</code>.BaExtracts the wrapped raw pointer.CkReturns a tuple of (vendor ID, device/\xe2\x80\x9cproduct\xe2\x80\x9d ID) \xe2\x80\xa6DjAssuming that the existing <code>PrimitiveDateTime</code> represents a \xe2\x80\xa6BaAsync synchronization primitives.BhTask abstraction for building executors.CcNumeric primitives stored in big-endian byte order.CiReturns the length, eg number of bits, in this bit array.CcMutably borrows from this <code>VolatileRef</code>.DnA breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> \xe2\x80\xa6CkReturn the length of a packet that will be emitted from \xe2\x80\xa60CkReturn the length of a buffer required to hold a packet \xe2\x80\xa6CkReturn the length of a header that will be emitted from \xe2\x80\xa6222ClReturn the total length of a packet that will be emitted \xe2\x80\xa611CiReturn the length, in bytes, of a header that will be \xe2\x80\xa6020CkReturn the length of a record that will be emitted from \xe2\x80\xa6535CfTraits for types that encapsulate a <code>[u8]</code>.AmTranslation cache type field.jCache Type10ClVerifies if the current access options are all valid for \xe2\x80\xa6AjCell sizes for child nodesAdRoot node cell sizesCmClears the buffer, replacing every element with the given \xe2\x80\xa6EeCopies <code>source</code>\xe2\x80\x99s contents into <code>self</code> without creating a \xe2\x80\xa6B`<code>compatible</code> property0DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6000000000BlReturns the complement of this set of flags.000111111111111111110000000000000000000011111111111111CnReturns the number of ones in the binary representation of \xe2\x80\xa600000000000000000000000000000000000000000000000CcCreates a new, empty directory at the provided pathCfDeallocates the memory referenced by <code>ptr</code>.BeAttempts to deallocates a page range.CfDeallocates the pages described by <code>range</code>.CeThe intersection of a source flags value with the \xe2\x80\xa60ClVisits the values representing the difference, i.e., the \xe2\x80\xa6CkVisits the values representing the difference, i.e. the \xe2\x80\xa622222222EeReturns the difference between the flags in <code>self</code> and <code>other</code>.000333333333333333330000000000000000000033333333333333ChDisables the breakpoint condition for the associated \xe2\x80\xa6CgLength of EBX bit vector to enumerate architectural \xe2\x80\xa60CkReturn the identifier field (for echo request and reply \xe2\x80\xa60CfA hex or named flag wasn\xe2\x80\x99t found between separators.ChEnables advanced debugging of RTM transactional regions.BgAdd a Page to an Uninitialized Enclave.BeAdd a Page to an Initialized Enclave.ChLoads and verifies an EPC page and marks the page as \xe2\x80\xa6CeLoads, verifies an EPC page and marks the page as \xe2\x80\xa6AoByte-order-aware numeric types.CdChecks if this value is equivalent to the given key.Bf<code>None</code> means \xe2\x80\x9cforever\xe2\x80\x9d.CmDrains elements which are true under the given predicate, \xe2\x80\xa600CgApplies bitwise \xe2\x80\x9cnand\xe2\x80\x9d to the current value and \xe2\x80\xa600000CgApplies logical \xe2\x80\x9cnand\xe2\x80\x9d to the current value and \xe2\x80\xa6111111BhFill <code>dest</code> with random data.CeFilters and maps items of the stream using a closure.DhReturns an <code>OccupiedEntry</code> for an entry in the table with \xe2\x80\xa6EcReturns a span that <code>other</code> contains by raising <code>base</code> or \xe2\x80\xa6AlReturn the flow label field.DjInvalidate the given address in the TLB using the <code>invpcid</code> \xe2\x80\xa6CjShort-hand to create a Icr value that will work for an \xe2\x80\xa6CjPush an element into the queue, potentially displacing \xe2\x80\xa6ChReturns how much free space this allocator has in bytes.DdConstructs a new vector with a fixed capacity of <code>N</code>, \xe2\x80\xa60ClConstruct an Ethernet address from a sequence of octets, \xe2\x80\xa6C`Constructs a <code>Ref</code> from a byte slice.DiConstructs a new value from bytes which are already in <code>O</code> \xe2\x80\xa600000000000ClThe array passed as an argument is moved to be an inline \xe2\x80\xa6CaConverts to this type from the overaligned field.C`Build a multi-lane vector from individual lanes.DgConstructs a new vector with a fixed capacity of <code>N</code> and \xe2\x80\xa60D`Copy the elements from a slice into a new <code>SmallVec</code>.AoConvert from <code>usize</code>0DoDecodes a UTF-16\xe2\x80\x93encoded slice <code>v</code> into a <code>String</code>, \xe2\x80\xa60AfGet the stream number.00B`Return the source address field.DjGiven the allocator and the <code>layout</code> of the allocation that \xe2\x80\xa6CkSupports CET shadow stack features. Processors that set \xe2\x80\xa60CkL1 Context ID. A value of 1 indicates the L1 data cache \xe2\x80\xa60BhSupports Fast Short REP CMPSB, REP SCASBoSupports HRESETAmSupports L2 Cache Allocation.0AmSupports L3 Cache Allocation.0CfSlow Memory Bandwidth Enforcement is supported if set.CbA value of 1 indicates that the OS has enabled \xe2\x80\xa60CjA value of 1 indicates that the processor supports the \xe2\x80\xa60CiA value of 1 indicates that processor supports RDRAND \xe2\x80\xa60A`Supports RDSEED.0BeCheck support for rdtscp instruction.0ClSmart Data Cache Injection (SDCI) Allocation Enforcement \xe2\x80\xa6BhSEV Encrypted State is supported if set.0BbSupports SGX Launch Configuration.0AnSKINIT and STGI are supported.0CmHas Software uncorrectable error containment and recovery \xe2\x80\xa60BoIndicates the following MSRs are supported: \xe2\x80\xa60CmA value of 1 indicates that the processor supports x2APIC \xe2\x80\xa60BdSupports XGETBV with ECX = 1 if set.0ChSupports XSAVEC and the compacted form of XRSTOR if set.0ClA hash table implemented with quadratic probing and SIMD \xe2\x80\xa6BkOnly if VIRTIO_NET_F_HASH_REPORT negotiatedBdReturn the length of a frame header.CmReturn the header length. The result depends on the value \xe2\x80\xa60CkReturn the length of a header that will be emitted from \xe2\x80\xa6BdReturn the header length, in octets.AiReturn the header length.AoReturn the header length field.CiReturn the length, in bytes, of a header that will be \xe2\x80\xa634CgReturn the length of the packet header that will be \xe2\x80\xa6CiServer identifier to use in outgoing packets. Usually \xe2\x80\xa6DhInserts a string slice into this <code>String</code> at a byte position.B`<code>interrupts</code> propertyCjCross-architecture utilities for temporarily disabling \xe2\x80\xa6BaEnabling and disabling interruptsCmWhether any set bits in a source flags value are also set \xe2\x80\xa6000000000EeReturns <code>true</code> if there are flags common to both <code>self</code> and \xe2\x80\xa6000111111111111111110000000000000000000011111111111111DkReturns the contents of the vector as an array of length <code>M</code> \xe2\x80\xa60CbConverts a <code>String</code> into a byte vector.0BnConverts this type into the overaligned field.CkConsumes the <code>Box</code>, returning the wrapped value.CbConsumes the mutex, returning the underlying data.DeConvert this <code>OnceCell</code> into the inner value, if it is \xe2\x80\xa6BmUnwraps the lock and returns the inner value.BkUnwraps the item that couldn\xe2\x80\x99t be pushed.CfReturn the inner value that failed to be force-pushed.AhReturns the inner value.CdConsumes the atomic and returns the contained value.DcConsume the <code>FutureWrapper</code>, returning the inner future.AbUnwraps the value.CbConsume this stream and get the underlying stream.DhConsumes the <code>OnceCell</code>, returning the wrapped value. Returns2CcConsumes this mutex, returning the underlying data.0DaConsumes this <code>RwLock</code>, returning the underlying data.D`Consumes the <code>OnceCell</code>, returning the wrapped value.Ch\xe2\x80\x9cDefuse\xe2\x80\x9d the guard and extract the value without \xe2\x80\xa6EcConvert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise \xe2\x80\xa6CcReturn the underlying device, consuming the tracer.CkReturn the underlying device, consuming the fault injector.CjReturn the underlying device, consuming the fuzz injector.CdConsume the header, returning the underlying buffer.CdConsume the packet, returning the underlying buffer.0CdConsumes the frame, returning the underlying buffer.1111122CiConsume the ipv6 option, returning the underlying buffer.32CjConsume the NDISC option, returning the underlying buffer.33BeRetrieve the inner <code>Talc</code>.CoConsumes <code>self</code>, returning the inner <code>T</code>.DkConverts the <code>OccupiedEntry</code> into a mutable reference to the \xe2\x80\xa6DiConverts the <code>VacantEntry</code> into a mutable reference to the \xe2\x80\xa6DiConverts the <code>AbsentEntry</code> into a mutable reference to the \xe2\x80\xa6CkConsumes this <code>Lazy</code> returning the stored value.AlTake ownership of the value.1ClThe 16-bit offset to the I/O permission bit map from the \xe2\x80\xa60CgChecks whether the virtual address has the demanded \xe2\x80\xa600BnIs this address aligned to <code>align</code>?000001ChChecks whether the physical address has the demanded \xe2\x80\xa6AjIs MSI capability enabled?BcTrue if bit n is supported in XCR0.0AfGet pending interruptsBiPresent; must be 1 to map a 4-MByte page.BiPresent; must be 1 to map a 4-KByte page.A`Is page present?00CkPresent; must be 1 to map a 2-MByte page or reference a \xe2\x80\xa6CkPresent; must be 1 to map a 4-KByte page or reference a \xe2\x80\xa6CgReturns <code>true</code> if this is a private address.CmWhether the stream was stopped yet by the stopping future \xe2\x80\xa6C`Query whether the address is an unicast address.CeQuery whether the address is a valid unicast address.1DiReturns <code>true</code> if this is a unicast address, as defined by \xe2\x80\xa6AlWhether the flag is unnamed.BlYield a set of contained named flags values.0000000000000000000000000000000000000000AoReturn the keep-alive interval.AlEncoded hierarchy level typeCmA fixed capacity map/dictionary that performs lookups via \xe2\x80\xa6EcReturns <code>true</code> if this listener listens to the given <code>Event</code>.AlReturns the logical APIC ID.CmIn x2APIC mode, the 32-bit logical x2APIC ID, can be read \xe2\x80\xa6CkNumber of bits to shift Extended APIC ID right to get a \xe2\x80\xa6BaReturn the address being queried.BcReturn the multicast address field.BnBit vector of supported extended SGX features.0BeReturn the \xe2\x80\x9cmore fragments\xe2\x80\x9d flag.B`Return more fragment flag field.CcWhen there are more fragments following this headerCkGet the nanoseconds within the second in the stored offset.BfGet the nanoseconds within the second.00CkCreates a ranged integer with a statically known value. \xe2\x80\xa600000000000CaConstructs a new box with uninitialized contents.BjCreates a new address, without any checks.00000000000CbCreates a new virtual address, without any checks.CcCreates a new physical address, without any checks.DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6CkCreates an instance of <code>Self</code> from zeroed bytes.CiThe device specifies the maximum number of virtqueues \xe2\x80\xa6CgCreate a <code>Style</code> with this as the foreground000ClEnsures a value is in the entry by inserting the default \xe2\x80\xa600DkA page fault (<code>#PF</code>) can occur during a memory access in any \xe2\x80\xa6CdAbstractions for page tables and page table entries.AjParameters for hypercalls.C`Parses the input into a <code>u128</code> value.CjGiven virtual address calculate corresponding entry in \xe2\x80\xa6CgReturn length of the front contiguous range without \xe2\x80\xa6CjPeek at a sequence of received octets without removing \xe2\x80\xa6CmSee the <code>phf</code> crate\xe2\x80\x99s documentation for details.33DcReturn an <em>advisory wait time</em> for calling poll the next \xe2\x80\xa6DaIf <code>self</code> is a CIDR-compatible subnet mask, return \xe2\x80\xa6BlReturn the prefix length of this CIDR block.CaReturn the prefix length of this IPv4 CIDR block.CaReturn the prefix length of this IPv6 CIDR block.AiReturn the prefix length.ChNumber of logical processors at this level type. The \xe2\x80\xa60ClReturns an iterator over the available properties of the \xe2\x80\xa6ChReturns an iterator over all of the available propertiesCnReturns an iterator over all of the properties for the CPU \xe2\x80\xa6CfAppends an <code>item</code> to the front of the dequeCjVirtual queue\xe2\x80\x99s Descriptor Area 64 bit long physical \xe2\x80\xa6CiThe driver writes the physical address of Device Area \xe2\x80\xa6CkQueue Size.  On reset, specifies the maximum queue size \xe2\x80\xa6DaRead the exact number of bytes required to fill <code>buf</code>.ChGet whether the reader is ready for immediately reading.CmReturn the amount of octets queued in the receive buffer. \xe2\x80\xa6CkDequeue a sequence of received octets, and fill a slice \xe2\x80\xa6AkRemoves an empty directory.CiRetains only the elements specified by the predicate, \xe2\x80\xa60CeRetains only the elements specified by the predicate.CkMaximum range (zero-based) of RMID within this physical \xe2\x80\xa60EbReturns <code>true</code> if both listeners listen to the same <code>Event</code>.CnA scope guard will run a given closure when it goes out of \xe2\x80\xa6CjReturn the amount of octets queued in the transmit buffer.CmEnqueue a sequence of octets to be sent, and fill it from \xe2\x80\xa6BaReturn the sequence number field.Ao96 bit processor serial number.0BgEnable or disable the AnyIP capability.ChSet the number of prefix octets elided from the last \xe2\x80\xa6CiSet the number of prefix octets elided from addresses[\xe2\x80\xa6CnSets the global logger to a <code>&amp;&#39;static Log</code>.BlSets the <code>OpCode</code> for the packet.oSet the prefix.BmSet the Suppress Router-Side Processing flag.AfSet the stream number.00AhSets this entry to zero.DhReturn <code>true</code> if the guard\xe2\x80\x99s associated code should run \xe2\x80\xa6CdDetermines if the <code>-</code> flag was specified.BbSize of values representing a sizeDcSkips items while <code>predicate</code> returns <code>true</code>.BdSpawns many tasks onto the executor.0jblock sizeCjRepresentations of various x86 specific structures and \xe2\x80\xa6EhModifies this set to contain the difference of <code>self</code> and <code>rhs</code>\xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa60000000BfDisables all flags enabled in the set.000fPanics000002222222222222222211111111111111111111BjSubtract an offset from a virtual address.33333333333333BnReturns an iterator over the class\xe2\x80\x99 devices.CcReturns an iterator over the device\xe2\x80\x99s subsystems.BgReverses the byte order of the integer.00000000000000000000000000000000000000000000000Ec<code>write()</code> attempts to write <code>nbyte</code> of data to the object \xe2\x80\xa6DcTakes items while <code>predicate</code> returns <code>true</code>.BoCreates a non-zero value from a ranged integer.00000BeTotal size of the devicetree in bytesDiLike <code>set</code>, but also returns a reference to the final cell \xe2\x80\xa6CnTries to insert a key-value pair into the map, and returns \xe2\x80\xa61DkAllocates memory in the given allocator then places <code>x</code> into \xe2\x80\xa6ClTries to remove the value associated with the given key, \xe2\x80\xa6CkCreates a stream from a seed value and a fallible async \xe2\x80\xa6AjEnable TSC deadline timer.A`Enable TSC timerAaEnable TSC timer.CiMinimal support for serial communication through UART \xe2\x80\xa6FdAllows turning a <code>Box&lt;T: Sized, A&gt;</code> into a <code>Box&lt;U: ?Sized, A&gt;</code> \xe2\x80\xa6CaWrap RNG with the <code>UnwrapErr</code> wrapper.CmReturn the address and size of this BAR or panic if not a \xe2\x80\xa6CaWrap RNG with the <code>UnwrapMut</code> wrapper.BiReturns the key of the next vacant entry.CkAn iterator visiting all values mutably in arbitrary order.CiReturn an iterator over mutable references to the the \xe2\x80\xa61CmVersion ID of architectural performance monitoring. (Bits \xe2\x80\xa60DdReturns <code>true</code> if <code>call_once</code> has been called.00BmGet the number of whole days in the duration.AmReturn the window size field.CeSet the flag indicating what form of alignment is \xe2\x80\xa6ChAllows for explicitly setting the seeds to used. All \xe2\x80\xa6AoCreates a new initialized cell.BhCreates a new cell with the given value.1CiSet the optional integer width that the output should be.AoWrites the segment base addressDcWrites a signed 128 bit integer <code>n</code> to <code>buf</code>.BkRestricts access permissions to write-only.0CcWrite a new P4 table address into the CR3 register.DfWrites an unsigned 128 bit integer <code>n</code> to <code>buf</code>.EmWrites an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.CnWrite to Extended Control Register XCR0. Only supported if \xe2\x80\xa6CmThe size in bytes of the XSAVE area containing all states \xe2\x80\xa60ChIndicates that the guest OS has found the device and \xe2\x80\xa6CmType representing the absence of an entry, as returned by \xe2\x80\xa6BhAddress family not supported by protocolClAbstracts common interface of local APIC (x2APIC, xAPIC) \xe2\x80\xa6AbARP hardware type.AcAudio policy deviceCdThe future returned by <code>Barrier::wait()</code>.AoBeyond scope of source address.EeBright black: #0 (foreground code <code>90</code>, background code <code>100</code>).EeBright green: #2 (foreground code <code>92</code>, background code <code>102</code>).EeBright white: #7 (foreground code <code>97</code>, background code <code>107</code>).AaHost CS selector.AbGuest CS selector.CfPads and aligns a value to the length of a cache line.CkA cryptographically secure random number generator that \xe2\x80\xa60AdChaCha with 8 roundsCbParameters for a <code>FileClose</code> hypercall.B`Software caused connection abortAbConnection refusedChSent by the device to nominate a port as a console port.CfFuture for the <code>StreamExt::count()</code> method.CkImplements function to read/write cpuid. This allows to \xe2\x80\xa6CeLow-level data-structure to store result of cpuid \xe2\x80\xa60AaHost DS selector.AbGuest DS selector.AfError decoding UTF-16.AlDestination address requiredClSent by the driver at initialization to indicate that it \xe2\x80\xa6BgDevice has support for emergency write.lEnable VPID.AaHost ES selector.AbGuest ES selector.lExit reason.lEcho requestlEcho RequestAaCode Execute/ReadAjRFC3692-style Experiment 1AjRFC3692-style Experiment 2CcAn error to extend <code>CString</code> with bytes.CfIndicates that the driver has acknowledged all the \xe2\x80\xa6AlI/O Privilege Level (IOPL) 00AlI/O Privilege Level (IOPL) 10AlI/O Privilege Level (IOPL) 20AlI/O Privilege Level (IOPL) 30AaHost FS selector.AbGuest FS selector.lFeature BitsChProcessor and Processor Feature Identifiers (LEAF=0x01).0CcComes from <code>SortedLinkedList::find_mut</code>.CfAn <code>IndexMap</code> using the default FNV hasher.CfAn <code>IndexSet</code> using the default FNV hasher.BaFragment reassembly time exceededCnA future which tracks whether or not the underlying future \xe2\x80\xa6CnA stream which tracks whether or not the underlying stream \xe2\x80\xa6ChLimit field is scaled by 4096 bytes. In 64-bit mode, \xe2\x80\xa6AaHost GS selector.AbGuest GS selector.C`Helper trait which returns a non-zero thread ID.CmA memory allocator that can be registered as the standard \xe2\x80\xa6ClMarker type which determines whether a lock guard should \xe2\x80\xa60CnMarker type which indicates that the Guard type for a lock \xe2\x80\xa6CiDevice can report per-packet hash value and a type of \xe2\x80\xa6lHLT exiting.CgA handler function for an interrupt or an exception \xe2\x80\xa6A`No route to hostDe(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6De(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13\xe2\x80\xa6BoIf ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )AiIf IA32_VMX_MISC[bit 15])CkIs IBT waiting for a branch to return? (read-only, TRACKER)BfType of IGMP membership report versionCbAn index provided was not associated with a value.AaInstruction cache0CiAn invalid interior nul byte found in a given byte slice.AoThis operation was interrupted.CbData not valid for the operation were encountered.A`An IPv4 address.A`An IPv6 address.DhA mutable iterator over the entries of a <code>HashTable</code> that \xe2\x80\xa6BmA kernel data segment (64-bit or flat 32-bit)AkKey was rejected by serviceClIndicates that zerocopy can reason about certain aspects \xe2\x80\xa6DeBits <code>16..=19</code> of the limit field (ignored in 64-bit mode)DiThe <code>LayoutError</code> is returned when the parameters given to \xe2\x80\xa6CnAn enum representing the available verbosity level filters \xe2\x80\xa6BmError returned by <code>Socket::listen</code>CaParameters for a <code>FileLseek</code> hypercallBlEquivalent to <code>1.microseconds()</code>.BlEquivalent to <code>1.milliseconds()</code>.BiSee Section 15.3.2.1,  IA32_MCi_CTL MSRs.000000CnMachine Check R10 See Section 15.3.2.6, IA32_MCG Extended  \xe2\x80\xa6CnMachine Check R11 See Section 15.3.2.6, IA32_MCG Extended  \xe2\x80\xa6CnMachine Check R12 See Section 15.3.2.6, IA32_MCG Extended  \xe2\x80\xa6CnMachine Check R13 See Section 15.3.2.6, IA32_MCG Extended  \xe2\x80\xa6CnMachine Check R14 See Section 15.3.2.6, IA32_MCG Extended  \xe2\x80\xa6CjMachine Check EAX/RAX Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check EBP/RBP Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check EBX/RBX Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check ECX/RCX Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check EDI/RDI Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check EDX/RDX Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check EIP/RIP Save State See Section 15.3.2.6, \xe2\x80\xa6CjMachine Check ESI/RSI Save State See Section 15.3.2.6, \xe2\x80\xa6CcRepresents a physical frame mapped in a page table.ClThis type represents a page whose mapping has changed in \xe2\x80\xa6CdA unit of time representing exactly one microsecond.0CdA unit of time representing exactly one millisecond.0DjUsed by <code>iret</code> in hardware task switch mode to determine if \xe2\x80\xa6lNMI exiting.AbFile name too longBlA read/write wrapper around an NDISC Option.AaNitroSecureModuleCkA strategy that uses polling to efficiently wait for an \xe2\x80\xa6CmAn operation could not be completed, because it failed to \xe2\x80\xa6CgEnables the global page feature, allowing some page \xe2\x80\xa6CjA hint to the device, that the driver will immediately \xe2\x80\xa6CjSet by hardware if last result has an even number of 1 \xe2\x80\xa6AdGuest PDPTE0 (full).AdGuest PDPTE0 (high).AdGuest PDPTE1 (full).AdGuest PDPTE1 (high).AdGuest PDPTE2 (full).AdGuest PDPTE2 (high).AdGuest PDPTE3 (full).AdGuest PDPTE3 (high).CjStructure wrapping a mutable reference to the greatest \xe2\x80\xa6AmProtocol family not supportedlAn I/O port.B`Interface for printing listings.CmAllows to restart an instruction following an instruction \xe2\x80\xa6CkThis feature indicates support for the packed virtqueue \xe2\x80\xa6D`Device-independent Bit. See <code>virtio::F::RING_PACKED</code>.0000CnProvides a Hasher factory. This is typically used (e.g. by \xe2\x80\xa6DnAn <code>isize</code> that is known to be in the range <code>MIN..=MAX</code>.DmA <code>usize</code> that is known to be in the range <code>MIN..=MAX</code>.B`The raw boot information struct.CeProvides mutual exclusion based on spinning on an \xe2\x80\xa6AlReject route to destination.B`Timeout and retry configuration.lRouter Alertlrproc serialAaHost SS selector.AbGuest SS selector.ChA random number generator that can be explicitly seeded.BaAn implementation of SipHash 1-3.BdAn implementation of SipHash128 1-3.BaAn implementation of SipHash 2-4.BdAn implementation of SipHash128 2-4.CkAn unsafe marker trait for types that deref to a stable \xe2\x80\xa6AbFile status flags.EeBase struct for <code>String</code> and <code>StringView</code>, generic over the \xe2\x80\xa6CjInformation about the SVM features that the processory \xe2\x80\xa60AaHost TR selector.AbGuest TR selector.DdA <code>lock_api::Mutex</code> based on <code>RawTicketMutex</code>.BbToo many references: cannot spliceBhWhen device should trigger the interruptA`IPI Trigger ModeChAn IPv4 address representing an unspecified address: \xe2\x80\xa6DfAn IPv6 address representing the unspecified address: <code>::</code>.AoA flat 32-bit user code segmentAjA 64-bit user code segmentBoThis operation is unsupported on this platform.CfFuture for the <code>StreamExt::unzip()</code> method.BfDescriptor for a code or data segment.CiA <code>PrimitiveDateTime</code> that is known to be UTC.DkA view into a vacant entry in a <code>HashMap</code>. It is part of the \xe2\x80\xa6DkA view into a vacant entry in a <code>HashSet</code>. It is part of the \xe2\x80\xa6DiA view into a vacant entry in a <code>HashTable</code>. It is part of \xe2\x80\xa6BoA view into an empty slot in the underlying mapCbA handle to a vacant entry in a <code>Slab</code>.DkImplementation of <code>LinearMapStorage</code> that stores the data in \xe2\x80\xa6DkImplementation of <code>StringStorage</code> that stores the data in an \xe2\x80\xa6DeImplementation of <code>Storage</code> that stores the data in an \xe2\x80\xa6CcVMCS pointer is valid, but some other error was \xe2\x80\xa6ClWraps a pointer to make accesses to the referenced value \xe2\x80\xa6CiVolatile pointer type that respects Rust\xe2\x80\x99s aliasing \xe2\x80\xa6CgA buffer for construct a string while avoiding heap \xe2\x80\xa6CbParameters for a <code>FileWrite</code> hypercall.CeWaits for an owned permit for a concurrent operation.ChAdds <code>n</code> additional permits to the semaphore.BkAttempts to allocate a specific page range.CoAttempts to allocate the pages described by <code>range</code>.BgReturns whether interrupts are enabled.CcGet the clock hour, minute, second, and nanosecond.00DoGet a mutable reference to the <code>Vec</code>, erasing the <code>N</code> \xe2\x80\xa6EfGet a mutable reference to the <code>BinaryHeap</code>, erasing the <code>N</code> \xe2\x80\xa6EaGet a mutable reference to the <code>Deque</code>, erasing the <code>N</code> \xe2\x80\xa6EfGet a mutable reference to the <code>HistoryBuf</code>, erasing the <code>N</code> \xe2\x80\xa6EeGet a mutable reference to the <code>LinearMap</code>, erasing the <code>N</code> \xe2\x80\xa6EbGet a mutable reference to the <code>String</code>, erasing the <code>N</code> \xe2\x80\xa6EaGet a mutable reference to the <code>Queue</code>, erasing the <code>N</code> \xe2\x80\xa660BiConverts to <code>Box&lt;T, A&gt;</code>.BkConverts to <code>Box&lt;[T], A&gt;</code>.C`A priority queue implemented with a binary heap.kBrand Index0CkTemporarily yields a shared lock to a waiting thread if \xe2\x80\xa60BeTranslation cache level (starts at 1)0CgCast an integer to the signed integer of the same size.EhChecked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>\xe2\x80\xa600000DiChecked integer addition. Computes <code>self + rhs</code>, returning \xe2\x80\xa600000000000EeComputes <code>self + duration</code>, returning <code>None</code> if an overflow \xe2\x80\xa6E`Computes <code>self + rhs</code>, returning <code>None</code> if an overflow \xe2\x80\xa6111DiChecked integer addition. Computes <code>self / rhs</code>, returning \xe2\x80\xa600000000000FdComputes <code>self / rhs</code>, returning <code>None</code> if <code>rhs == 0</code> or if the \xe2\x80\xa6DiChecked integer addition. Computes <code>self * rhs</code>, returning \xe2\x80\xa600000000000E`Computes <code>self * rhs</code>, returning <code>None</code> if an overflow \xe2\x80\xa6EeChecked negation. Computes <code>-self</code>, returning <code>None</code> if the \xe2\x80\xa600000000000E`Computes <code>-self</code>, returning <code>None</code> if the result would \xe2\x80\xa6DjChecked exponentiation. Computes <code>self.pow(exp)</code>, returning \xe2\x80\xa600000000000DjChecked integer remainder. Computes <code>self % rhs</code>, returning \xe2\x80\xa600000000000ElChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> \xe2\x80\xa600000000000EmChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> \xe2\x80\xa600000000000DiChecked integer addition. Computes <code>self - rhs</code>, returning \xe2\x80\xa600000000000EeComputes <code>self - duration</code>, returning <code>None</code> if an overflow \xe2\x80\xa6E`Computes <code>self - rhs</code>, returning <code>None</code> if an overflow \xe2\x80\xa6111AmClear the entire flags field.0BkProvides <code>const fn</code> for parsing.ClFunctions to read and write control registers. See Intel \xe2\x80\xa6ClReturns the number of zeros in the binary representation \xe2\x80\xa600000000000000000000000000000000000000000000000AhL1 data cache size in KB0CgAn unsigned integer which is the denominator of the \xe2\x80\xa60CnDequeue an element from the buffer, and return a reference \xe2\x80\xa6AjAddress of the device treekDNS servers0CiReturn the probability of dropping a packet, in percents.CjReturn the sequence number field (for echo request and \xe2\x80\xa60Bacrates.io crates.io DocumentationBcInitialize an Enclave for ExecutionAoChange the Type of an EPC Page.AaExits an Enclave.CjEnqueue a single element into the buffer, and return a \xe2\x80\xa6DoThe source file containing the message, if it is a <code>&#39;static</code> \xe2\x80\xa6CkSet <code>file</code> to a <code>&#39;static</code> string.DhFills <code>self</code> with random bits. Returns true on success or \xe2\x80\xa60BfReturn the fragment offset, in octets.BaReturn the fragment offset field.CmThe offset of the data following this header, relative to \xe2\x80\xa6D`Create a new <code>Instant</code> from a number of microseconds.DaCreate a new <code>Duration</code> from a number of microseconds.D`Create a new <code>Instant</code> from a number of milliseconds.DaCreate a new <code>Duration</code> from a number of milliseconds.D`Creates an <code>Ipv4Addr</code> from a four element byte array.DcCreates an <code>Ipv6Addr</code> from a sixteen element byte array.CnConstructs a <code>Ref</code> from the prefix of a byte slice.CkConstructs a box from a raw pointer in the given allocator.CnConstructs a <code>Ref</code> from the suffix of a byte slice.BhModify a single packet with fuzzed data.DbGets an unaligned mutable raw pointer to the inner <code>T</code>.ChEither get the value or initialize it with the given \xe2\x80\xa6DiGets the contents of the cell, initializing it with <code>f</code> if \xe2\x80\xa600000CcGet a pinned mutable reference to the inner future.BkGet a pinned reference to the inner future.DjBehaves like <code>grow</code>, but also ensures that the new contents \xe2\x80\xa6AaSupports AVX512F.0A`Supports CET_SSSBdCLZERO instruction supported if set.0CfCLFLUSH Instruction. CLFLUSH Instruction is supported.0Ch64-bit DS Area. A value of 1 indicates the processor \xe2\x80\xa60CaINVLPGB and TLBSYNC instruction supported if set.0CjINVPCID. If 1, supports INVPCID instruction for system \xe2\x80\xa60ChCheck whether the interface has the given IP address \xe2\x80\xa6BeMCOMMIT instruction supported if set.0CjSecure Host Multi-Key Memory (MEM-HMK) Encryption Mode \xe2\x80\xa6CiSupports RDMSRLIST and WRMSRLIST Instructions and the \xe2\x80\xa6CmIndicates support of PTWRITE. Writes can set IA32_RTIT_CTL\xe2\x80\xa60BjSEV Secure Nested Paging supported if set.0gWAITPKG0BkOnly if VIRTIO_NET_F_HASH_REPORT negotiatedhOverviewBkHighest COS number supported for this Leaf.00000ChA \xe2\x80\x9chistory buffer\xe2\x80\x9d, similar to a write-only ring \xe2\x80\xa6AoL1 instruction cache size in KB0AkGet whether to ignore NAKs.CjThe maximum number of elements this vector can hold inlineDiInsert multiple elements at position <code>index</code>, shifting all \xe2\x80\xa6CkCreates a consuming iterator visiting all the values in \xe2\x80\xa6DjAn invalid TSS exception (<code>#TS</code>) occurs only as a result of \xe2\x80\xa6AmSend a STARTUP IPI to a core.00CiAccessed; indicates whether software has accessed the \xe2\x80\xa60ClAccessed; indicates whether this entry has been used for \xe2\x80\xa600CfAccessed; if PS set indicates whether software has \xe2\x80\xa60FeReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. \xe2\x80\xa60DmReturns true if <code>other</code> shares no elements with <code>self</code>.0CjReturns <code>true</code> if the current task is finished.0EcReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).EdReturns <code>true</code> if this is the loopback address (<code>::1</code>), as \xe2\x80\xa6EeReturns <code>true</code> if the number is negative and <code>false</code> if the \xe2\x80\xa600000FcReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number \xe2\x80\xa600000000000B`Check if a duration is negative.C`Check if the offset is negative, or west of UTC.222222222222CbTell whether any listeners are currently notified.EeReturns <code>true</code> if the number is positive and <code>false</code> if the \xe2\x80\xa600000FcReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number \xe2\x80\xa600000000000B`Check if a duration is positive.C`Check if the offset is positive, or east of UTC.222222222222DeReturns <code>true</code> if this address is reserved by IANA for \xe2\x80\xa6DhReturns <code>true</code> if the set is a superset of another, i.e., \xe2\x80\xa6hExamplesDlReturns true if <code>self</code> contains all values in <code>other</code>.0DjLoads the GDT in the CPU using the <code>lgdt</code> instruction. This \xe2\x80\xa6CmLoads the IDT in the CPU using the <code>lidt</code> command.CmAcquires a shared lock, blocking the current thread until \xe2\x80\xa6ClDetermines if a message logged at the specified level in \xe2\x80\xa6kMagic ValueCdThe value of MAWAU used by the BNDLDX and BNDSTX \xe2\x80\xa60ClReturn the maximum packet reception rate, in packets per \xe2\x80\xa6CkReturn the maximum packet transmission rate, in packets \xe2\x80\xa6ChGet the microseconds within the second in the stored \xe2\x80\xa6BgGet the microseconds within the second.00ChGet the milliseconds within the second in the stored \xe2\x80\xa6BgGet the milliseconds within the second.00AoThe module path of the message.AlSet <code>module_path</code>DhCreate a new <code>Duration</code> with the given number of nanoseconds.CnCreate a <code>Duration</code> from the number of nanoseconds.CkShorthand for a combination of new_unchecked and check_len.0000000000000000BbReturn the next header (protocol).BhReturn the next_header (protocol) field.AmReturn the next header field.0BfProtocol contained in the next header.CiCreates a stream that invokes the given future as its \xe2\x80\xa6AoThe user-specified OOM handler.AgReturn the option type.0CgReturn a mutable pointer to the options of the IPv6 \xe2\x80\xa6B`Return a pointer to the options.0ClAn order-preserving immutable map constructed at compile \xe2\x80\xa6ClAn order-preserving immutable set constructed at compile \xe2\x80\xa6CgReturns the 12-bit page offset of this virtual address.000BlParse an IPv4 address from a slice of bytes.BlParse an IPv6 address from a slice of bytes.AjReturn the payload length.B`Return the payload length field.CfLength of the payload including the extension headers.BhReturn a mutable pointer to the payload.CcReturn a mutable pointer to the type-specific data.11BmReturn a mutable pointer to the payload data.BhReturn a pointer to the address records.13CnReturns the offset used for converting virtual to physical \xe2\x80\xa6CkA macro that creates a projection type covering all the \xe2\x80\xa6BgTransmit packets queued in the sockets.AgVirtual queue ready bitAgVirtual queue reset bitCmThe driver uses this to selectively reset the queue. This \xe2\x80\xa6BdThe ChaCha random number generators.lRandom seed.CeReads a signed n-bytes integer from <code>buf</code>.BmReturn the record type for the given sources.ClCreates an infinite stream from a closure that generates \xe2\x80\xa6AmReplace the day of the month.000F`Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.EcResizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to \xe2\x80\xa6DfShifts the bits to the left by a specified amount, <code>n</code>, \xe2\x80\xa600000000000000000000000000000000000000000000000DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa60CjReturn the length of the segment, in terms of sequence \xe2\x80\xa60B`Enable or disable MSI capabilityBmEnable MSI-X on the specified device feature.AlSet or reset the preset bit.AiSet the timeout duration.AfSet the version field.0C`Sets the value of the <code>yiaddr</code> field.CkProcess command line according to parsing rules of Unix \xe2\x80\xa6BgShared memory region 64 bit long lengthCdSplits a queue into producer and consumer endpoints.000DhReturns <code>true</code> if <code>needle</code> is a prefix of the Vec.DgCreate a [<code>std::time::Duration</code>] from the number of minutes.DgCreate a [<code>std::time::Duration</code>] from the number of seconds.B`Version Information: Stepping ID0CfReturns the number of elements currently in the deque.CaThis field comes from a corresponding DhcpOption.CbRemoves an element from the vector and returns it.0DkRemove the key-value pair equivalent to <code>key</code> and return its \xe2\x80\xa6DhRemove the element at position <code>index</code>, replacing it with \xe2\x80\xa6CkInterface to deallocate a memory region from the system \xe2\x80\xa6DhShrink or grow a block of memory to the given <code>new_size</code>. \xe2\x80\xa6CbExtract the stopping future out of the combinator.ClOnce the stopping future is resolved, this method can be \xe2\x80\xa6DdThis crate provides the <code>take_static</code> macro to create \xe2\x80\xa6CkDeclare a new static that provides mutable access\xe2\x80\x94but \xe2\x80\xa6B`Return the target address field.CnReturn the memory representation of this integer as a byte \xe2\x80\xa600000000000000000000000000000000000000000000000CcGet the clock hour, minute, second, and nanosecond.111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111CcConstruct a new <code>SmallVec</code> from a slice.CdAttempts to get a permit for a concurrent operation.CdCollects all items in the fallible stream into a \xe2\x80\xa6BkTries to receive a byte on the serial port.0DgTries to reserve capacity for at least <code>additional</code> more \xe2\x80\xa6000DdReserve capacity for <code>additional</code> more elements to be \xe2\x80\xa6BfAttempts to upgrade into a write lock.0CjAttempts to upgrade an upgradable lock to an exclusive \xe2\x80\xa6ClTries to atomically upgrade an upgradable read lock into \xe2\x80\xa6CbCreates a TSS system descriptor for the given TSS.AfAlign address upwards.C`Unlocks this mutex using a fair unlock protocol.CnUnlocks this mutex using a fair unlock protocol. The inner \xe2\x80\xa6BoUnlocks the mutex using a fair unlock protocol.000CmUnlocks the <code>RwLock</code> using a fair unlock protocol.0000CaUpdates the P4 table address in the CR3 register.CcThis crate contains the Rust equivalents of the \xe2\x80\xa6BnGet the number of whole hours in the duration.CnObtain the number of whole hours the offset is from UTC. A \xe2\x80\xa6BnGet the number of whole weeks in the duration.DgCreates an empty <code>HashMap</code> which will use the given hash \xe2\x80\xa6CiCreates a new empty hash set which will use the given \xe2\x80\xa6ChGet whether the writer is ready for immediately writing.CbOptions for checking file permissions or existenceAoCannot assign requested addressAi256 (8-bit) color supportAcARP operation type.AeA standard 4KiB page.CiA trait for RNGs which do not generate random numbers \xe2\x80\xa6EgBright yellow: #3 (foreground code <code>93</code>, background code <code>103</code>\xe2\x80\xa6BdA mutable reference to a byte slice.BmCast to an unsigned integer of the same size.AeChaCha with 12 roundsAeChaCha with 20 roundsDdParameters for a <code>Cmdval</code> hypercall, which copies the \xe2\x80\xa6BnError returned by <code>Socket::connect</code>B`Zerocopy\xe2\x80\x99s generic error type.DiUse 32-bit (as opposed to 16-bit) operands. If <code>LONG_MODE</code> \xe2\x80\xa6CkConfiguration has been lost (for example, the lease has \xe2\x80\xa6AiSpecify IPI Delivery ModeAjEntry for IDT, GDT or LDT.BoSent by the device, to remove an existing port.AcDevice Status FieldCnSlowest time that a device will assert DEVSEL# for any bus \xe2\x80\xa6mEntry to SMM.CbRepresents the 4 non-offset bytes of an IDT entry.ChAn Ethernet and IPv4 Address Resolution Protocol packet.CgA high-level representation of an Internet Protocol \xe2\x80\xa6AaVM-exit controls.CdA type that can be used with turbofish syntax in \xe2\x80\xa6BlSource address failed ingress/egress policy.BhA spawned task with a fallible response.CiAn extension trait for <code>core::fmt::Formatter</code>.BgFragmentation required, and DF flag setAgA fuzz injector device.CoDriver can provide the exact <em>hdr_len</em> value. Device \xe2\x80\xa6AeHardware information.CnDS Save Area (R/W) See Table 35-2. Points to the DS buffer \xe2\x80\xa6C`Map of BASE Address of FS (R/W)  See Table 35-2.C`Map of BASE Address of GS (R/W)  See Table 35-2.BiSee Section 15.3.2.1,  IA32_MCi_CTL MSRs.0000f06_0FHf06_1DHf06_1AH0f06_2EHCnMachine Check Capabilities (R) See Table 35-2. See Section \xe2\x80\xa6CjMachine Check Feature Enable (R/W) See Table 35-2. See \xe2\x80\xa6CgMTRR Information See Section 11.11.1, MTRR Feature  \xe2\x80\xa6CnAUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  \xe2\x80\xa6CnMinimum MTU required of all links supporting IPv4. See RFC \xe2\x80\xa6CnMinimum MTU required of all links supporting IPv6. See RFC \xe2\x80\xa6CkA read/write wrapper around an Internet Control Message \xe2\x80\xa60Bk00 \xe2\x80\x94 Break on instruction execution only.CmA lazy iterator producing elements in the intersection of \xe2\x80\xa6D`An iterator over the intersection of two <code>IndexSet</code>s.AjA parameter was incorrect.BeKernelGsBase Model Specific Register.BbEnables or disables the local ApicBdDefines little-endian serialization.AiLittle-endian byte order.CmScaleable Bus Speed(RO) This field indicates the intended \xe2\x80\xa6AoSee Section 18.12.3, CCCR MSRs.00000CmSee Section 18.12.1, ESCR MSRs. This MSR is not available \xe2\x80\xa60AoSee Section 18.12.1, ESCR MSRs.00BjSee Section 15.3.2.4,  IA32_MCi_MISC MSRs.BiSee Section 15.3.2.1,  IA32_MCi_CTL MSRs.000000000100000001CnSee Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR \xe2\x80\xa62CnSee Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR \xe2\x80\xa6AnAlways 0 (CMCI not supported).414BiSee Section 15.3.2.3, IA32_MCi_ADDR MSRs.5050505CnMachine Check Miscellaneous See Section 15.3.2.6, IA32_MCG \xe2\x80\xa699997777mmac80211 wlanmMachine CheckA`A managed slice.oA memory regionCeDevice has support for FUSE notify messages.  The \xe2\x80\xa6DaThe driver uses this in avail-&gt;flags to advise the device: \xe2\x80\xa6BkDefines system native-endian serialization.BeThe endianness used by this platform.oA node propertyCmThe network operation failed because it was not connected \xe2\x80\xa6CeThe given page table was not at an recursive address.D`A notification that can be used to notify an <code>Event</code>.DeA <code>lock_api::Mutex</code> based on <code>RawOneShotMutex</code>.0DkImplementation of <code>LinearMapStorage</code> that stores the data in \xe2\x80\xa6DkImplementation of <code>StringStorage</code> that stores the data in an \xe2\x80\xa6DkImplementation of <code>Storage</code> that stores the data in an array \xe2\x80\xa6AjAn UDP packet ring buffer.BjThe output of <code>PageRange::sub</code>.AaParameter problemAbParameter Problem.AlCaptured packet header type.CjStructure wrapping a mutable reference to the greatest \xe2\x80\xa6AePlatform information.AeA read-only I/O port.AkPrecedence cutoff in effectAbIndentation state.ClA supplier of Randomness used for different hashers. See \xe2\x80\xa6CeAdditional methods for mutexes which support fair \xe2\x80\xa6BkA simple spinlock with exponential backoff.AdRouter advertisementAdRouter AdvertisementCmIf this flag is set, it indicates that the page fault was \xe2\x80\xa6B`Device reports speed and duplex.BcSub-page write permissions for EPT.CjExtra scheduling information that can be passed to the \xe2\x80\xa6AdShared memory regionCjFormat trait that allows authors to provide additional \xe2\x80\xa6AiA TCP socket ring buffer.BoA handle, identifying a socket in an Interface.AfA TCP sequence number.mTime exceedednTime Exceeded.CkWhat type of core we have at this level in the topology \xe2\x80\xa60CaThe error type of fallible reference conversions.DjA marker trait over <code>TryRngCore</code> for securely unpredictable \xe2\x80\xa6BlTypes for which some bit patterns are valid.BlThe error type of fallible read-conversions.CkThis flag must be set for user segments (in contrast to \xe2\x80\xa6CcParameters for a <code>FileUnlink</code> hypercall.mVirtual NMIs.AdVideo decoder deviceAdVideo encoder deviceCeAllocates zero-initialized memory with the global \xe2\x80\xa6DkBehaves like <code>alloc</code>, but also ensures that the contents are \xe2\x80\xa6D`Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.mAPIC ID size.0CdGet the clock hour, minute, second, and microsecond.00CdGet the clock hour, minute, second, and millisecond.00BeGets the bytes of this value mutably.CmReturns the remaining items of this iterator as a mutable \xe2\x80\xa6BnExtracts a mutable slice of the entire vector.CfExtracts a mutable slice containing the entire vector.12BhReturn the length of the auxiliary data.EaModifies this set to contain the union of <code>self</code> and <code>rhs</code>.D`The bitwise or (<code>|</code>) of the bits in two flags values.0000000AfAdds the set of flags.000111111111111111110000000000000000000011111111111111CdConstructs a new AHasher with keys based on this \xe2\x80\xa6BiGet a description of device capabilities.BoClear the Suppress Router-Side Processing flag.CgThe code segment selector at the time of the interrupt.BbCommand line passed to the kernel.0EfConfigures a breakpoint condition <code>bc</code> and size <code>bs</code> for the \xe2\x80\xa6DkReturns <code>true</code> if the map contains a value for the specified \xe2\x80\xa6CnReturns true if the map contains a value for the specified \xe2\x80\xa60CjDetermines if <code>key</code> is in the <code>Map</code>.DaDetermines if <code>key</code> is in the <code>OrderedMap</code>.BmGet QM_CTR counter width, offset from 24 bitsC`Get the number of calendar days in a given year.0ClRemoves all but the first of consecutive elements in the \xe2\x80\xa6CfRemoves consecutive elements that map to the same key.CmDequeue a slice of elements up to the given size from the \xe2\x80\xa6DiCall <code>f</code> with a single packet from the buffer, and dequeue \xe2\x80\xa6DjA divide error (<code>#DE</code>) occurs when the denominator of a DIV \xe2\x80\xa6DgA double fault (<code>#DF</code>) exception can occur when a second \xe2\x80\xa6BhData TLB number of entries for 4K pages.BkL2 Data TLB number of entries for 4K pages.10DkA wrapper around an <code>EventListenerFuture</code> that can be easily \xe2\x80\xa6BdEnable the breakpoint in local mode.BmCreate an SECS page in the Enclave Page CacheAnMark a page in EPC as Blocked.AjRead From a Debug Enclave.AiWrite to a Debug Enclave.BhRestrict the Permissions of an EPC Page.AhActivates EBLOCK Checks.AbEnters an Enclave.CmEnqueue a slice of elements up to the given size into the \xe2\x80\xa6ChFetches the value, and applies a function to it that \xe2\x80\xa6BkSearches for the given <code>phandle</code>AkForcibly unlocks the mutex.0DjReturns the <code>Subclass</code> corresponding to the given class and \xe2\x80\xa6DdCreates a <code>VolatileRef</code> from the given mutable reference.ChCreate an IPv4 CIDR block from the given address and \xe2\x80\xa6BoCreates a ranged integer from a non-zero value.00000DiReturns the <code>Device</code> corresponding to the given vendor and \xe2\x80\xa6CjCore traits and types for asynchronous operations in Rust.BlFutures, streams, and async I/O combinators.AhGet the background colorAhGet the foreground colorClReturns the index of the key-value pair corresponding to \xe2\x80\xa6DjAttempts to get mutable references to <code>N</code> values in the map \xe2\x80\xa60CeInformation about secure enclave support (LEAF=0x12).0CmThis function provides information about the SVM features \xe2\x80\xa60CeTime Stamp Counter/Core Crystal Clock Information \xe2\x80\xa60CjGet the offset from the start of the stream, in 32-bit \xe2\x80\xa600CmReturns the virtual address of this IDT entry\xe2\x80\x99s handler \xe2\x80\xa6BaReturn the hardware length field.CmReturns the length of a hardware address in bytes (e.g. 6 \xe2\x80\xa6AbSupports AMX_BF16.AbSupports AMX_INT8.AbSupports AMX_TILE.hAVX512BW0hAVX512CD0AbSupports AVX512DQ.0hAVX512ER0hAVX512PF0hAVX512VL0AoSupports AVX-IFMA Instructions.AbSupports AVX_VNNI.CmFSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if \xe2\x80\xa60AoPerformance time-stamp counter.0BfIndicates support for SVM-Lock if set.0CmSupport for INVLPGB/TLBSYNC hypervisor enable in VMCB and \xe2\x80\xa60BfWBNOINVD instruction supported if set.0AiCPU has xsaveopt feature.0BaHermit\xe2\x80\x99s loading and entry API.AlReturn the IPv6 Home AddressC`The home address of the destination mobile node.CjMaps the given frame to the virtual page with the same \xe2\x80\xa6DjSets the value of the entry with the <code>VacantEntry</code>\xe2\x80\x99s key, \xe2\x80\xa6DhSets the value of the entry with the <code>VacantEntryRef</code>\xe2\x80\x99s \xe2\x80\xa6CeInserts the specified <code>Dr7Flags</code> in-place.AlSpecial x86_64 instructions.DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.0CnVisits the values representing the intersection, i.e., the \xe2\x80\xa6CmVisits the values representing the intersection, i.e. the \xe2\x80\xa622222222DgReturns the intersection between the flags in <code>self</code> and \xe2\x80\xa6000333333333333333330000000000000000000033333333333333CdQuery whether this address is the broadcast address.CcQuery whether the address is the broadcast address.CaQuery whether the address is a broadcast address.CmReturns <code>true</code> if this is a broadcast address (\xe2\x80\xa6DfReturns <code>true</code> if exponential backoff has completed and \xe2\x80\xa6CmCache Inclusiveness (Bit 1) False: Cache is not inclusive \xe2\x80\xa60CfReturns if the provided year is a leap year in the \xe2\x80\xa60ChReturn whether the socket is passively listening for \xe2\x80\xa6DfReturns <code>true</code> if operations on values of this type are \xe2\x80\xa6ChQuery whether the \xe2\x80\x9cmulticast\xe2\x80\x9d bit in the OUI is set.CgQuery whether the address is a valid multicast address.EdReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).EaReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).CjQuery whether the endpoint has a specified address and \xe2\x80\xa6CnRead/write; if 0, writes may not be allowed to the 4-MByte \xe2\x80\xa6CnRead/write; if 0, writes may not be allowed to the 4-KByte \xe2\x80\xa6CfRead/write; if 0, writes may not be allowed to the \xe2\x80\xa60CnRead/write; if 0, writes may not be allowed to the 1-GByte \xe2\x80\xa6CnRead/write; if 0, writes may not be allowed to the 2-MByte \xe2\x80\xa63BoInstruction TLB number of entries for 4K pages.CbL2 Instruction TLB number of entries for 4K pages.10AaCache size in KB.0BaSpecifies the L3 cache size range0mLevel number.0CnLoads a value from the atomic using a \xe2\x80\x9cconsume\xe2\x80\x9d memory \xe2\x80\xa6DhReturns the value of the <code>magic cookie</code> field in the DHCP \xe2\x80\xa6BjThe maximum ECX value recognized by RDPRU.0AbGet interrupt maskDhThis field is also known as <code>op</code> in the RFC. It indicates \xe2\x80\xa6CoCreate a new <code>Duration</code> with the given number of \xe2\x80\xa6CoCreate a <code>Duration</code> from the number of microseconds.1CoCreate a <code>Duration</code> from the number of milliseconds.DlUses Rust\xe2\x80\x99s <code>cpuid</code> function from the <code>arch</code> module.0CnCreates a new canonical virtual address, throwing out bits \xe2\x80\xa6CjCreates a new physical address, throwing bits 52..64 away.CkCreates a new virtual address truncating non-address parts.CiCreates a new physical address truncating non-address \xe2\x80\xa630BhCreates a new canonical virtual address.1434343DiCreates a new index from the given <code>u16</code>. Throws away bits \xe2\x80\xa6DjCreates a new offset from the given <code>u16</code>. Throws away bits \xe2\x80\xa6CmCreate a new SelectorErrorCode dropping any reserved bits \xe2\x80\xa6CfCreates a <code>SipHasher13</code> from a 16 byte key.CfCreates a <code>SipHasher24</code> from a 16 byte key.CdCreates a <code>SipHasher</code> from a 16 byte key.210CjReturns index of the oldest value in the underlying slice.CnCreates a layout by rounding the size of this layout up to \xe2\x80\xa6BlObtain the width of the value after padding.CjPartitioning (0: Soft partitioning between the logical \xe2\x80\xa60AdData for BAR access.BdReturn the prefix information flags.CiWrite a concise, formatted representation of a packet \xe2\x80\xa6BiPretty-printing of packet representation.AoGet the previous calendar date.BaReturn the protocol length field.CjVirtual queue\xe2\x80\x99s Device Area 64 bit long physical addressCiThe driver writes the physical address of Device Area \xe2\x80\xa6CjVirtual queue\xe2\x80\x99s Driver Area 64 bit long physical address1CjThe driver uses this to selectively prevent the device \xe2\x80\xa6nQueue notifierChQueue Select. The driver selects which virtqueue the \xe2\x80\xa6B`Fill a slice with random values.0ChReads an unsigned n-bytes integer from <code>buf</code>.CkReturns index of the most recently written value in the \xe2\x80\xa6ClRemoves a key from the map, returning the stored key and \xe2\x80\xa6CiTake the ownership of the key and value from the map. \xe2\x80\xa6CbRemoves this entry from the map and yields its \xe2\x80\xa6CeRemoves the specified <code>Dr7Flags</code> in-place.CnRemove a contiguous range from the front of the assembler. \xe2\x80\xa6BlRenders the relevant <code>Reset</code> codeCjReplace the date, which is assumed to be in the stored \xe2\x80\xa6BfReplace the date, preserving the time.0AgReplace the clock hour.000CjReplace the time, which is assumed to be in the stored \xe2\x80\xa6BfReplace the time, preserving the date.0CfReplace the year. The month and day will be unchanged.000ClThe \xe2\x80\x9crequested IP address\xe2\x80\x9d option. It can be used by \xe2\x80\xa6BoReturns the feature that this feature requires.0CeAttempt to find the node specified by the given aliasBaReturn the retransmit time field.BjReverses the order of bits in the integer.00000000000000000000000000000000000000000000000DgShifts the bits to the right by a specified amount, <code>n</code>, \xe2\x80\xa600000000000000000000000000000000000000000000000BfReturn the Router Advertisement flags.AnReturn the routing type field.ChFunctionality to manipulate segment registers, build \xe2\x80\xa6CgProvides functions to read and write segment registers.BcAbstractions for segment registers.BmBits 00-31 of 96 bit processor serial number.0BmBits 64-96 of 96 bit processor serial number.0AgSet the checksum field.0AnSet the header checksum field.11AkSet the option data length.0BbSet the destination address field.00AoSet the destination port field.0AkSet the message code field.0AkSet the message type field.00oAvailable indexCnOffset within the ring where the next available ring entry \xe2\x80\xa6AfSet number of sources.BcReturn the number of sources field.AbReserved, set to 0AmSet the source address field.00AjSet the source port field.0CjSet the offset from the start of the stream, in 32-bit \xe2\x80\xa600CaShared memory region 64 bit long physical addressBgShared memory region 64 bit long lengthCmSpawns a non-<code>&#39;static</code> task onto the executor.0CgProvides simple spinlocks based on the abstractions \xe2\x80\xa6BkAttempts to split <code>self</code> in two.0B`Create a new, unnamed semaphore.AdRelease a semaphore.ChThe offset, in bytes, of the MSI-X table within its BAR.DcConverts this address to an <code>IpAddr::V4</code> if it is an \xe2\x80\xa6CdGet the clock hour, minute, second, and microsecond.CdGet the clock hour, minute, second, and millisecond.ChReturns <code>None</code> if <code>self</code> is empty.C`Get the virtual address of the handler function.CeToggles the specified <code>Dr7Flags</code> in-place.CkThe total number of milliseconds that have passed since \xe2\x80\xa6CoThe total number of microseconds in this <code>Duration</code>.1CoThe total number of milliseconds in this <code>Duration</code>.ChCalls a fallible closure on each item of the stream, \xe2\x80\xa6DfCreate a new PRNG seeded from a potentially fallible <code>Rng</code>.CjAttempts to acquire the mutex and clone a reference to it.CiAttempts to acquire this lock until a timeout is reached.000BhReturn the next random <code>u32</code>.BhReturn the next random <code>u64</code>.CkAttempts to acquire an an owned, reference-counted read \xe2\x80\xa6DhAttempts to acquire this <code>RwLock</code> with shared read access \xe2\x80\xa6CmTries to send a raw byte on the serial port, intended for \xe2\x80\xa60AfAlign address upwards.00EhConvert the existing <code>Duration</code> to a <code>std::time::Duration</code> and \xe2\x80\xa6BiUpdates the flags of an existing mapping.CjReturn a handle to a vacant entry allowing for further \xe2\x80\xa6DiWrapping integer addition. Computes <code>self + rhs</code>, wrapping \xe2\x80\xa600000000000DcWrapping integer subtraction. Computes <code>self - rhs</code>, \xe2\x80\xa600000000000EjWrites a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.CkCommunication with destination administratively prohibited.BgAn entity already exists, often a file.CkFlags for the Advanced Programmable Interrupt Controler \xe2\x80\xa6AoInfo about cache Associativity.0CjTrait which allows reading from primitive atomic types \xe2\x80\xa6EhBright magenta: #5 (foreground code <code>95</code>, background code <code>105</code>\xe2\x80\xa6CaDisables some processor caches, specifics are \xe2\x80\xa6BhSet MAC address through control channel.BlIterates over cache information (LEAF=0x02).0BgWhat type of cache are we dealing with?0EhThe <code>CallOnceError</code> error indicates that <code>CallOnce::call_once</code> \xe2\x80\xa600DmThe error type for fallible <code>Vec</code> and <code>String</code> methods.DfParameters for a <code>Cmdsize</code> hypercall which provides the \xe2\x80\xa6ChFuture for the <code>StreamExt::collect()</code> method.mDenormal maskAkDestination network unknownnEnable RDTSCP.AeEnable ENCLS exiting.AeEnable ENCLV exiting.AbVM-entry controls.ChA read/write wrapper around an Ethernet II frame buffer.CnA guard waiting for a notification from an <code>Event</code>.AlEvent Suppression DescriptorCjA synchronization primitive which can be accessed only \xe2\x80\xa60CnExtendedState subleaf structure for things that need to be \xe2\x80\xa60mFlush to zeroAhA fault injector device.CiFuture for the <code>StreamExt::find_map()</code> method.CiFuture for the <code>StreamExt::for_each()</code> method.EiImplements <code>From&lt;Primitive&gt;</code> for a <code>#[repr(Primitive)] enum</code>.DhA wrapper around an <code>EventListenerFuture</code> that implements \xe2\x80\xa6AoSetting Offloads State commandsBaA 64-bit physical memory address.BjA canonical 64-bit virtual memory address.BaNetwork Device Header Hash ReportAaA Hermit version.ClDebug Control (R/W)  Controls how several debug features \xe2\x80\xa6CdSee Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The \xe2\x80\xa6oSee Table 35-2.CbSee Section 15.3.2.4,  IA32_MCi_MISC MSRs. The \xe2\x80\xa6f06_2EH000000000CaSee Section 15.3.2.3, IA32_MCi_ADDR MSRs. The \xe2\x80\xa6321103203203CdSee Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The \xe2\x80\xa64f06_0FH5CmMisc MAC information of Integrated I/O. (R/O) see Section \xe2\x80\xa66f06_1AH7075AeHost IA32_PAT (full).AfGuest IA32_PAT (full).AeHost IA32_PAT (high).AfGuest IA32_PAT (high).CeSee Table 35-2. See Section 14.1, Enhanced Intel  \xe2\x80\xa6CnReporting Register of Miscellaneous VMX Capabilities (R/O) \xe2\x80\xa6CnNegotiating this feature indicates that the driver can use \xe2\x80\xa6DbDevice-independent Bit. See <code>virtio::F::INDIRECT_DESC</code>.0000BgInternet protocol control message type.0CmA <code>generic_once_cell::Lazy</code>, initialized using \xe2\x80\xa6DeA <code>ByteSlice</code> that conveys no ownership, and so can be \xe2\x80\xa6EiImplements <code>Into&lt;Primitive&gt;</code> for a <code>#[repr(Primitive)] enum</code>.nInvalid OpcodeBd10 \xe2\x80\x94 Break on I/O reads or writes.AcI/O reads or writesChA read/write wrapper around an IPv6 Extension Header \xe2\x80\xa6BaA flat 32-bit kernel code segmentAlA 64-bit kernel code segmentAdGuest LDTR selector.AiVMCS link pointer (full).AiVMCS link pointer (high).nLoad IA32_PAT.0CkA dynamic capacity map/dictionary that performs lookups \xe2\x80\xa6AhA thread-local executor.CnMaximum supported bits for virtual addresses (with 5-level \xe2\x80\xa6CmThe maximum number of items in an argument of environment \xe2\x80\xa6AoSee Section 18.12.1, ESCR MSRs.0AoSee Section 18.12.3, CCCR MSRs.000111111111111ClDebug Control (R/W)  Controls how several debug features \xe2\x80\xa6022CjIFSB Latency Event Control Register  (R/W) See Section \xe2\x80\xa6BiSee Section 15.3.2.3, IA32_MCi_ADDR MSRs.BjSee Section 15.3.2.4,  IA32_MCi_MISC MSRs.101010101010101010101010101010105555C`Power Control Register. See http://biosbits.org.66AaSMI Counter (R/O)777nMWAIT exiting.Bimac80211 hwsim wireless simulation deviceBbTrait that marks memory addresses.nmemory balloonAiMissing a required optionCmMLDv2 Multicast Listener Report Record Type. See RFC 3810 \xe2\x80\xa6ClInterface has a filter mode of EXCLUDE for the specified \xe2\x80\xa6ClInterface has a filter mode of INCLUDE for the specified \xe2\x80\xa6Ai32-bit MurmurHash3 hasherCdAn owned guard that releases the mutex when dropped.AlMaximum number of prioritiesCkEnables the native (internal) error reporting mechanism \xe2\x80\xa6BcNetwork administratively prohibitedAkNetwork unreachable for ToSBiDefines network byte order serialization.BnThe endianness used in many network protocols.ChSet by hardware to indicate that the sign bit of the \xe2\x80\xa6mOverflow maskDjA view into an occupied entry in a <code>HashMap</code>. It is part of \xe2\x80\xa6DjA view into an occupied entry in a <code>HashSet</code>. It is part of \xe2\x80\xa6DiA view into an occupied entry in a <code>HashTable</code>. It is part \xe2\x80\xa6BjAn occupied entry which can be manipulatedDfThe error returned by <code>try_insert</code> when the key already \xe2\x80\xa6CjDouble ended iterator on the underlying buffer ordered \xe2\x80\xa6DgA <code>lock_api::RwLock</code> based on <code>RawOneShotRwLock</code>.0nPAUSE exiting.AcPML address (full).AcPML address (high).CaThe given page is not mapped to a physical frame.00CgAn error which can be returned when parsing an integer.A`PCI capabilitiesAfA write-only I/O port.E`Wrapper for using a <code>PrettyPrint</code> where a <code>Display</code> is \xe2\x80\xa6CiA priority class for an interrupt. Loading CR8 with a \xe2\x80\xa6nRDPMC exiting.nRDTSC exiting.CmAdditional methods for mutexes which support locking with \xe2\x80\xa6DbAdditional methods for <code>RwLock</code>s which support fair \xe2\x80\xa6CjA simple spinning, read-preferring readers-writer lock \xe2\x80\xa6ChA simple, spinning, read-preferring readers-writer lock.B`Builder for <code>Record</code>.AcRouter solicitationAcRouter SolicitationnSave IA32_PAT.CiCharacters legible but marked as if for deletion. Not \xe2\x80\xa6BlSoC vendor specific information (LEAF=0x17).0C`Opaque struct with space for storing one socket.ClA RAII guard that frees the spinlock when it goes out of \xe2\x80\xa6BoTrait defining how data for a String is stored.CdA system segment descriptor such as a LDT or TSS \xe2\x80\xa6ChAutomatically set to 1 on <em>hardware</em> task switch.nTPR threshold.CiFuture for the <code>StreamExt::try_fold()</code> method.CiFuture for the <code>StreamExt::try_next()</code> method.CiAn EOF error was encountered before reading the exact \xe2\x80\xa6CgThe error emitted if the conversion source contains \xe2\x80\xa6AjVMCS pointer is not valid.CiControls whether supervisor-level writes to read-only \xe2\x80\xa6ClIf this bit is set, a \xe2\x80\x9cwrite-through\xe2\x80\x9d policy is used \xe2\x80\xa6BoError returned by <code>Write::write_fmt</code>CgPlaces the local APIC in the x2APIC mode. Processor \xe2\x80\xa6ChLVT Performance Monitoring register. Read/write. See \xe2\x80\xa6CmLocal APIC Version register. Read-only. Same version used \xe2\x80\xa6BfSize of values representing an addressCeThis crate provides functions for aligning addresses.CjAttempts to allocate a page range according to a function.CmReturns a pair of mutable slices which contain, in order, \xe2\x80\xa6BbWays of associativity (Bits 31-22)0DjAssuming that the existing <code>PrimitiveDateTime</code> represents a \xe2\x80\xa6AjVersion Information: Model0DjModifies this set to contain the intersection of <code>self</code> and \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.0000000BgDisables all flags disabled in the set.000111111111111111110000000000000000000011111111111111ClModifies this set to contain the symmetric difference of \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa60000000AiToggles the set of flags.000111111111111111110000000000000000000011111111111111BcBus (Reference) Frequency (in MHz).0DgIf returns <code>true</code> the device is capable of running at 66 \xe2\x80\xa6DiCasts the <code>LenT</code> type to a new type, preserving everything \xe2\x80\xa60CiCast an integer to the unsigned integer of the same size.CmQuery whether the subnetwork described by this CIDR block \xe2\x80\xa6ClQuery whether the subnetwork described by this IPv4 CIDR \xe2\x80\xa6ClQuery whether the subnetwork described by this IPv6 CIDR \xe2\x80\xa6CnReturns whether <code>self</code> contains <code>other</code>.CdGet the number of days in the month of a given year.0CkDequeue as many elements from the buffer into the given \xe2\x80\xa6DjThe driver writes the device status here (see <code>DeviceStatus</code>\xe2\x80\xa6CnThe slowest time that a device will assert DEVSEL# for any \xe2\x80\xa6BaDisable breakpoint in local mode.BeEnable the breakpoint in global mode.CeExtend Uninitialized Enclave Measurement by 256 BytesAkRemove a page from the EPC.AnAccept Changes to an EPC Page.AnRetrieves a Cryptographic Key.AoExtend an EPC Page Permissions.BmCreate a Cryptographic Report of the Enclave.AeRe-Enters an Enclave.CjEnqueue as many elements from the given slice into the \xe2\x80\xa6DhCreates a layout describing the record for <code>self</code> followed byBhCompute and fill in the header checksum.00000CmProduces layout describing a record that could be used to \xe2\x80\xa6CmCreate a big endian integer value from its representation \xe2\x80\xa600000000000CaCreate a little endian integer value from its \xe2\x80\xa600000000000111111111111000000000000DhAttempt to create a <code>Time</code> from the hour, minute, second, \xe2\x80\xa6222222222222111111111111222222222222111111111111ClCreates a new wide volatile pointer from pointers to the \xe2\x80\xa6CeCreate a big endian integer value from its memory \xe2\x80\xa600000000000ChCreate a little endian integer value from its memory \xe2\x80\xa600000000000111111111111000000000000CeConstructs a box from a <code>NonNull</code> pointer.DdCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.Cgextension type FUSE_MAX_NR_SECCTX: maximum value of \xe2\x80\xa6EhCreate a new <code>RandomState</code> <code>BuildHasher</code> based on the provided \xe2\x80\xa6CkReturn the largest contiguous slice of allocated buffer \xe2\x80\xa6DeIf <code>self</code> isn\xe2\x80\x99t empty, returns <code>(base, acme)</code>ClReturns a tuple of references to the key and the mutable \xe2\x80\xa6ClReturns the key-value pair corresponding to the supplied \xe2\x80\xa6DkInserts the given <code>value</code> into the set if it is not present, \xe2\x80\xa6DcObtain the value of the struct as an <code>Option</code> of the \xe2\x80\xa600000000000BcGet a reference to the inner value.CfGet the reference to the underlying value, without \xe2\x80\xa6")