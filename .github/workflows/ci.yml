name: CI

on:
  pull_request:
  merge_group:

env:
  GH_TOKEN: ${{ github.token }}
  RUSTFLAGS: -Dwarnings
  RUSTDOCFLAGS: -Dwarnings

defaults:
  run:
    shell: bash

jobs:
  run-hermit:
    name: Run
    runs-on: ${{ (matrix.arch == 'aarch64' || matrix.arch == 'aarch64_be') && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    env:
      HERMIT_CAREFUL: ${{ matrix.hermit-careful }}
    defaults:
      run:
        working-directory: kernel
    strategy:
      matrix:
        arch: [x86_64]
        profile: [dev, release]
        include:
          - profile: dev
            hermit-careful: 1
          - arch: x86_64
            packages: qemu-system-x86 libcap-ng-dev libseccomp-dev uftrace
            flags: --accel --sudo

    steps:
      - name: Checkout hermit-rs
        uses: actions/checkout@v5
        with:
          repository: hermit-os/hermit-rs
      - name: Checkout hermit-kernel
        uses: actions/checkout@v5
        with:
          path: kernel
      - name: Install QEMU
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends ${{ matrix.packages }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: mkroening/rust-toolchain-toml@main
      - run: rustup component add llvm-tools
        working-directory: .
      - run: rustup target add wasm32-wasip1
        working-directory: .
      - uses: mkroening/rust-toolchain-toml@main
        with:
          toolchain-file: "kernel/rust-toolchain.toml"
      - name: Download loader
        run: gh release download --repo hermit-os/loader --pattern 'hermit-loader-${{ matrix.arch }}*'
      - name: Dowload OpenSBI
        if: matrix.arch == 'riscv64'
        run: |
          gh release download v1.7 --repo riscv-software-src/opensbi --pattern 'opensbi-*-rv-bin.tar.xz'
          tar -xvf opensbi-*-rv-bin.tar.xz opensbi-1.7-rv-bin/share/opensbi/lp64/generic/firmware/fw_jump.bin
      - name: Install Firecracker
        run: |
          # https://github.com/firecracker-microvm/firecracker/blob/v1.5.1/docs/getting-started.md#getting-a-firecracker-binary
          ARCH="$(uname -m)"
          release_url="https://github.com/firecracker-microvm/firecracker/releases"
          latest=$(basename $(curl -fsSLI -o /dev/null -w  %{url_effective} ${release_url}/latest))
          curl -L ${release_url}/download/${latest}/firecracker-${latest}-${ARCH}.tgz \
          | tar -xz

          mkdir -p $HOME/.local/bin
          mv release-${latest}-$(uname -m)/firecracker-${latest}-${ARCH} $HOME/.local/bin/firecracker
          echo $HOME/.local/bin >> $GITHUB_PATH

          $HOME/.local/bin/firecracker --version
        if: matrix.arch == 'x86_64'
      - run: cargo +stable install --locked uhyve --git https://github.com/hermit-os/uhyve.git --rev b6df160bc6c26abc19249c3f847cd526319538cf
        if: matrix.arch == 'x86_64'
      - run: cargo +stable install --locked virtiofsd
        if: matrix.arch == 'x86_64'
      - run: cargo +stable install cargo-careful
        if: matrix.profile == 'dev'
      - run: FIRECRACKER=$HOME/.local/bin/firecracker cargo xtask ci rs --arch ${{ matrix.arch }} --profile ${{ matrix.profile }} --package rusty_demo --no-default-features firecracker --sudo
        if: matrix.arch == 'x86_64'
      - run: FIRECRACKER=$HOME/.local/bin/firecracker cargo xtask ci rs --arch ${{ matrix.arch }} --profile ${{ matrix.profile }} --package rusty_demo --no-default-features --smp 4 firecracker --sudo
        if: matrix.arch == 'x86_64'
