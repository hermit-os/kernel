(function() {
    var type_impls = Object.fromEntries([["hermit_sync",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawMutex-for-RawInterruptMutex%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#88\">Source</a><a href=\"#impl-RawMutex-for-RawInterruptMutex%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> for <a class=\"struct\" href=\"hermit_sync/struct.RawInterruptMutex.html\" title=\"struct hermit_sync::RawInterruptMutex\">RawInterruptMutex</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.INIT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#89\">Source</a><a href=\"#associatedconstant.INIT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"lock_api/mutex/trait.RawMutex.html#associatedconstant.INIT\" class=\"constant\">INIT</a>: <a class=\"struct\" href=\"hermit_sync/struct.RawInterruptMutex.html\" title=\"struct hermit_sync::RawInterruptMutex\">RawInterruptMutex</a>&lt;I&gt;</h4></section></summary><div class='docblock'>Initial value for an unlocked mutex.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.GuardMarker\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#94\">Source</a><a href=\"#associatedtype.GuardMarker\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"lock_api/mutex/trait.RawMutex.html#associatedtype.GuardMarker\" class=\"associatedtype\">GuardMarker</a> = <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a></h4></section></summary><div class='docblock'>Marker type which determines whether a lock guard should be <code>Send</code>. Use\none of the <code>GuardSend</code> or <code>GuardNoSend</code> helper types here.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#97\">Source</a><a href=\"#method.lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lock_api/mutex/trait.RawMutex.html#tymethod.lock\" class=\"fn\">lock</a>(&amp;self)</h4></section></summary><div class='docblock'>Acquires this mutex, blocking the current thread until it is able to do so.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_lock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#107\">Source</a><a href=\"#method.try_lock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lock_api/mutex/trait.RawMutex.html#tymethod.try_lock\" class=\"fn\">try_lock</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Attempts to acquire this mutex without blocking. Returns <code>true</code>\nif the lock was successfully acquired and <code>false</code> otherwise.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#120\">Source</a><a href=\"#method.unlock\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"lock_api/mutex/trait.RawMutex.html#tymethod.unlock\" class=\"fn\">unlock</a>(&amp;self)</h4></section></summary><div class='docblock'>Unlocks this mutex. <a href=\"lock_api/mutex/trait.RawMutex.html#tymethod.unlock\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_locked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#132\">Source</a><a href=\"#method.is_locked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lock_api/mutex/trait.RawMutex.html#method.is_locked\" class=\"fn\">is_locked</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks whether the mutex is currently locked.</div></details></div></details>","RawMutex","hermit_sync::mutex::RawInterruptOneShotMutex","hermit_sync::mutex::RawInterruptSpinMutex","hermit_sync::mutex::RawInterruptTicketMutex"],["<section id=\"impl-Send-for-RawInterruptMutex%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#86\">Source</a><a href=\"#impl-Send-for-RawInterruptMutex%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"hermit_sync/struct.RawInterruptMutex.html\" title=\"struct hermit_sync::RawInterruptMutex\">RawInterruptMutex</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","hermit_sync::mutex::RawInterruptOneShotMutex","hermit_sync::mutex::RawInterruptSpinMutex","hermit_sync::mutex::RawInterruptTicketMutex"],["<section id=\"impl-Sync-for-RawInterruptMutex%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/interrupt_mutex/lib.rs.html#83\">Source</a><a href=\"#impl-Sync-for-RawInterruptMutex%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"hermit_sync/struct.RawInterruptMutex.html\" title=\"struct hermit_sync::RawInterruptMutex\">RawInterruptMutex</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","hermit_sync::mutex::RawInterruptOneShotMutex","hermit_sync::mutex::RawInterruptSpinMutex","hermit_sync::mutex::RawInterruptTicketMutex"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6503]}