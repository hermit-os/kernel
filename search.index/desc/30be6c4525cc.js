rd_("CiReturns a reference to the element at the given index \xe2\x80\xa6CfGet the reference to the underlying value, without \xe2\x80\xa6CmReturn a reference to the value associated with the given \xe2\x80\xa6BnWrite the libpcap global header into the sink.0CmAttempt to grow a previously allocated/reallocated region \xe2\x80\xa6CaGet the HardwareAddress address of the interface.C`Set the Hardware address the interface will use.AeHardware information.AoReturn the hardware type field.CcReturns the hardware protocol type (e.g. ethernet).CkCMPXCHG8B Instruction. The compare-and-exchange 8 bytes \xe2\x80\xa60AmHas Hardware P-state control?0BfIs LAHF/SAHF available in 64-bit mode?0BiLast Branch Record Stack supported if setClPCLMULQDQ. A value of 1 indicates the processor supports \xe2\x80\xa60AbSupports PREFETCHIAgIs PREFETCHW available?0BjSPEC_CTRL virtualization supported if set.0C`SVM supervisor shadow stack restrictions if set.0nHas THERMTRIP?0AbSupports UIRET_UIFCmIncludes a file and safely transmutes it to a value of an \xe2\x80\xa6DjInserts an element into the <code>HashTable</code> with the given hash \xe2\x80\xa6AeInterrupt acknowledgeE`Consumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer.CfChecks whether the address has the demanded alignment.EeReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).DjReturns <code>true</code> if the underlying future should no longer be \xe2\x80\xa6DcReturns <code>true</code> if the stream should no longer be polled.CnA mutable iterator visiting all elements which may match a \xe2\x80\xa6AdL3 Cache Monitoring.0CeReturns the number of leading zeros in the binary \xe2\x80\xa600000000000000000000000000000000000000000000000CiReturns an immutable reference to the wrapped level 4 \xe2\x80\xa600CfNumeric primitives stored in little-endian byte order.DeThe machine check exception (<code>#MC</code>) is model specific. \xe2\x80\xa6BgReturn the maximum response code field.ChReturn the maximum response time, using the encoding \xe2\x80\xa6BnReturn whether Nagle\xe2\x80\x99s Algorithm is enabled.CfNumeric primitives stored in native-endian byte order.FeCreate a new <code>OffsetDateTime</code> with the given <code>Date</code>, <code>Time</code>, and \xe2\x80\xa6CkCreates a new read-only volatile pointer from the given \xe2\x80\xa6DbTurns the given pointer into a read-only <code>VolatileRef</code>.CdCreates a ranged integer without checking the value.00000000000ClCreate a raw octet buffer with an IPv6 Hop-by-Hop Header \xe2\x80\xa6CcImbue a raw octet buffer with ARP packet structure.CdImbue a raw octet buffer with DHCP packet structure.CgImbue a raw octet buffer with Ethernet frame structure.CfImbue a raw octet buffer with ICMPv4 packet structure.CfImbue a raw octet buffer with ICMPv6 packet structure.CfImbue a raw octet buffer with IGMPv2 packet structure.CdImbue a raw octet buffer with IPv4 packet structure.ChCreate a raw octet buffer with an IPv6 packet structure.CkCreate a raw octet buffer with an IPv6 Extension Header \xe2\x80\xa6CjCreate a raw octet buffer with an IPv6 Fragment Header \xe2\x80\xa61CiCreate a raw octet buffer with an IPv6 Routing Header \xe2\x80\xa6CiImbue a raw octet buffer with a Address Record structure.CiCreate a raw octet buffer with an NDISC Option structure.CcImbue a raw octet buffer with TCP packet structure.CcImbue a raw octet buffer with UDP packet structure.CkCreates a new RecursivePageTable without performing any \xe2\x80\xa6CkConstructs a new box with uninitialized contents in the \xe2\x80\xa6DgCreates a <code>SipHasher13</code> that is keyed off the provided keys.DgCreates a <code>SipHasher24</code> that is keyed off the provided keys.DeCreates a <code>SipHasher</code> that is keyed off the provided keys.210DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6BkGet Number of configurable bandwidth eventsBnWrite the libpcap packet header into the sink.0AaEmergency output.BnPerformance time-stamp counter size (in bits).0CcThe physical address of the base of the EPC section0AePlatform information.CeRemoves the last element from a vector and returns itCoRemoves the <em>top</em> (greatest if max-heap, smallest if \xe2\x80\xa6CmPop an element from the list without checking so the list \xe2\x80\xa6AoReturn the protocol type field.AjMaximum virtual queue sizeCkReads IEEE754 single-precision (4 bytes) floating point \xe2\x80\xa60DgReads signed 16 bit integers from <code>src</code> to <code>dst</code>.DiReads signed 32 bit integers from <code>src</code> into <code>dst</code>.DiReads signed 64 bit integers from <code>src</code> into <code>dst</code>.DkReads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.DkReads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.0DkReads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.0CjReturn the maximum number of bytes inside the recv buffer.DjCreates a layout describing the record for <code>n</code> instances of \xe2\x80\xa6AnReplace the month of the year.000DkReserves the minimum capacity for at least <code>additional</code> more \xe2\x80\xa6CjReserve the minimum capacity required to store exactly \xe2\x80\xa6DjReserve the minimum capacity for <code>additional</code> more elements \xe2\x80\xa6C`Create a new PRNG using a <code>u64</code> seed.BgSeeks relative to the current position.AoReturn the segments left field.BcNumber of route segments remaining.0CjReturn the maximum number of bytes inside the transmit \xe2\x80\xa6AhSend an IPI to yourself.BmBits 32-63 of 96 bit processor serial number.0AkSet the ACK delay duration.A`Set address dataBdSets the Ipv4 address of the client.CeSets the condition field of a debug address register.BbSet the destination address field.BdSet the \xe2\x80\x9cdon\xe2\x80\x99t fragment\xe2\x80\x9d flag.AhSet the EtherType field.CnSet the time-to-live (IPv4) or hop limit (IPv6) value used \xe2\x80\xa6AkSet the time to live field.AhSet the hop limit field.BbSets the global maximum log level.DiWrap Counter. With <code>VIRTIO_F_RING_PACKED</code> this is the wrap \xe2\x80\xa6AhSet the operation field.C`Sets the value of the <code>siaddr</code> field.AkSet the total length field.AmSet the urgent pointer field.CaShared memory region 64 bit long physical addressCgShrinks the capacity of the vector as much as possible.CkShrinks the capacity of the map as much as possible. It \xe2\x80\xa6CkShrinks the capacity of the set as much as possible. It \xe2\x80\xa6CmShrinks the capacity of the table as much as possible. It \xe2\x80\xa6CgShrink the capacity of the slab as much as possible \xe2\x80\xa6CfShrink the capacity of the vector as much as possible.CnDefinition of <code>SmartDisplay</code> and its related items.BoThe stack pointer at the time of the interrupt.CmThe stack segment descriptor at the time of the interrupt \xe2\x80\xa6BfReturns the start address of the page.BgReturns the start address of the frame.0BgApply <code>strikethrough</code> effectCbGet the error number from the thread local storageB`Get the Julian day for the date.CjGet the Julian day for the date. The time is not taken \xe2\x80\xa600AiReturn the traffic class.CjSafely transmutes a mutable reference of one type to a \xe2\x80\xa6CmSafely transmutes a mutable or immutable reference of one \xe2\x80\xa6DiAttempts to return a mutable reference to the wrapped <code>T</code>, \xe2\x80\xa6DePoll this <code>TryStream</code> as if it were a <code>Stream</code>.CnConditionally transmutes a value of one type to a value of \xe2\x80\xa6CkAttempts to acquire an owned, reference-counted write lock.DeAttempts to acquire this <code>RwLock</code> with exclusive write \xe2\x80\xa6Cn\xe2\x80\x9cTSC frequency\xe2\x80\x9d = \xe2\x80\x9ccore crystal clock frequency\xe2\x80\x9d * \xe2\x80\xa6AeTSC frequency in kHz.10AfAlign address upwards.AhAlign address downwards.DhUnchecked absolute value. Computes <code>self.abs()</code>, assuming \xe2\x80\xa600000DjUnchecked integer addition. Computes <code>self + rhs</code>, assuming \xe2\x80\xa600000000000DjUnchecked integer division. Computes <code>self / rhs</code>, assuming \xe2\x80\xa600000000000DgUnchecked integer multiplication. Computes <code>self * rhs</code>, \xe2\x80\xa600000000000EhUnchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is \xe2\x80\xa600000000000DkUnchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming \xe2\x80\xa600000000000DhUnchecked remainder. Computes <code>self % rhs</code>, assuming that \xe2\x80\xa600000000000E`Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that \xe2\x80\xa600000000000EaUnchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that \xe2\x80\xa600000000000DdUnchecked integer subtraction. Computes <code>self - rhs</code>, \xe2\x80\xa600000000000AgReleases a shared lock.CfTemporarily unlocks the mutex to execute the given \xe2\x80\xa60DdTemporarily unlocks the <code>RwLock</code> to execute the given \xe2\x80\xa600EbProduces the split parts of <code>self</code>, using <code>Immutable</code> to \xe2\x80\xa6EbProduces the split parts of <code>self</code>, using <code>Unaligned</code> to \xe2\x80\xa60CgUnsafely produces the split parts of <code>self</code>.0BhGet the number of weeks in the ISO year.0C`Get the number of whole minutes in the duration.CnObtain the number of whole minutes the offset is from UTC. \xe2\x80\xa6C`Get the number of whole seconds in the duration.CnObtain the number of whole seconds the offset is from UTC. \xe2\x80\xa6EaConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified \xe2\x80\xa6DdCreates an empty <code>HashTable</code> with the specified capacity.DeConstruct a new, empty <code>Slab</code> with the specified capacity.CbConstruct an empty vector with enough capacity \xe2\x80\xa6BjSee <code>CpuId::with_cpuid_reader</code>.CdReturn new CpuId struct with custom reader function.DiAttempt to create a <code>PrimitiveDateTime</code> using the existing \xe2\x80\xa6oAvailable indexCnOffset within the ring where the next available ring entry \xe2\x80\xa6AbReserved, set to 0EhCreate a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) \xe2\x80\xa6CkFirst, atomically upgrades an upgradable read lock lock \xe2\x80\xa6DiWrites signed 8 bit integers from <code>src</code> into <code>dst</code>.CcWrites a <code>Self</code> value to the given port.EmWrites an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.AeGuest activity state.CeEnables automatic usermode alignment checking if [\xe2\x80\xa6BeError type for <code>AddrRange</code>oAlignment CheckClThe error emitted if the conversion source is improperly \xe2\x80\xa6AkSize of a base page (4 KiB)00AmBIOS Update Trigger Register.C`A priority queue implemented with a binary heap.CkSpecifies the  breakpoint condition for a corresponding \xe2\x80\xa6BbThe size of a hardware breakpoint.ClThe slice passed in was too small to fit the given total \xe2\x80\xa6CiEnable: Physical Address Extension (allows to address \xe2\x80\xa6CmEnable Page Size Extensions (allows for pages larger than \xe2\x80\xa6CdEnables Safer Mode Extensions (Trusted Execution \xe2\x80\xa6ClEnables Streaming SIMD Extensions (SSE) instructions and \xe2\x80\xa6CjIf set, enables support for the virtual interrupt flag \xe2\x80\xa6BcEnables Virtual Machine Extensions.CgInformation about an individual cache in the hierarchy.0BiCommunication administratively prohibitedCkAn error type indicating that a component provided to a \xe2\x80\xa6D`A marker trait used to indicate that an <code>RngCore</code> \xe2\x80\xa6CaDeflate balloon on guest out of memory condition.CdDetermines the order in which strings are processed.nDivide-by-zeroAiDescriptor-table exiting.AgSpecify Delivery StatusCcDiscard the containing packet and notify the senderAhDestination host unknownAgDestination unreachableAhDestination Unreachable.ClProcessor Hard Power-On Configuration  (R/W) Enables and \xe2\x80\xa6oEnable INVPCID.AiEOI-exit bitmap 0 (full).AiEOI-exit bitmap 0 (high).AiEOI-exit bitmap 1 (full).AiEOI-exit bitmap 1 (high).AiEOI-exit bitmap 2 (full).AiEOI-exit bitmap 2 (high).AiEOI-exit bitmap 3 (full).AiEOI-exit bitmap 3 (high).CiIndicates support of 387DX math coprocessor instructions.CgThe range was constructed with the end before the startCkEndpoints have a Type-0 header, so the remainder of the \xe2\x80\xa6CmThe device has support for free page hinting. A virtqueue \xe2\x80\xa6CgError that occurs when force-pushing into a full queue.CfA trait for types that can allocate a frame of memory.DgA possible error value when converting a <code>String</code> from a \xe2\x80\xa6AkSize of a giga page (1 GiB)BcDriver can send gratuitous packets.AkSize of a huge page (1 GiB)BkA \xe2\x80\x9cview\xe2\x80\x9d into a <code>HistoryBuf</code>AiHost precedence violationB`Host administratively prohibitedAhHost unreachable for ToSCeHyperTransport capability, Cap ID = <code>0x08</code>BoInformation about Hypervisor (LEAF=0x4000_0001)0CnAPIC Location and Status (R/W) See Table 35-2. See Section \xe2\x80\xa6f06_2EHAfHost IA32_EFER (full).AgGuest IA32_EFER (full).AfHost IA32_EFER (high).AgGuest IA32_EFER (high).AdP6 Family ProcessorsoSee Table 35-2.606060606060606060610606111f06_0FHf06_1DHf06_1AH09BoIf ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )0CjReporting Register of Basic VMX Capabilities (R/O) See \xe2\x80\xa6AbEnable interrupts.oINVLPG exiting.CiInternet protocol control message subtype for type \xe2\x80\x9c\xe2\x80\xa6DgA <code>lock_api::Mutex</code> based on <code>RawInterruptMutex</code>.0BgThe Invalidate PCID Command to execute.DdAn error type indicating that a <code>FromStr</code> call failed \xe2\x80\xa6CkA high-level representation of an IPv6 Extension Header \xe2\x80\xa6BaIPv6 Extension Header Option TypeC`L1 Cache and TLB Information (LEAF=0x8000_0005).0oLoad IA32_EFER.0DeBase struct for <code>LinearMap</code> and <code>LinearMapView</code>CnSame as fixed mode, except that the interrupt is delivered \xe2\x80\xa6AkSize of a mega page (2 MiB)BcMode-based execute control for EPT.nMOV-DR exitingCkEFSB DRDY Event Control and Counter Register (R/W)  See \xe2\x80\xa6CcEFSB DRDY Event Control and Counter  Register (R/W)AoSee Section 18.12.1, ESCR MSRs.0CkIFSB BUSQ Event Control and Counter  Register (R/W) See \xe2\x80\xa6CbIFSB BUSQ Event Control and Counter Register (R/W)CkIFSB Latency Event Counter Register  (R/W)  See Section \xe2\x80\xa6ClIFSB SNPQ Event Control and Counter  Register (R/W)  See \xe2\x80\xa6CcIFSB SNPQ Event Control and Counter  Register (R/W)55CkLast Branch Record Filtering Select Register (R/W)  See \xe2\x80\xa6CnLast Exception Record To Linear IP (R)  This area contains \xe2\x80\xa6BkSee Section 15.3.2.2, IA32_MCi_STATUS MSRS.0ClSee Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter \xe2\x80\xa6ChApply to Intel Xeon processor 7400 series (processor \xe2\x80\xa6111CeMachine Check EFLAGS/RFLAG Save State See Section \xe2\x80\xa6ClPackage C3 Interrupt Response Limit (R/W)  Note: C-state \xe2\x80\xa6CgPackage C6 Interrupt Response Limit (R/W)  This MSR \xe2\x80\xa6CgPackage C7 Interrupt Response Limit (R/W)  This MSR \xe2\x80\xa6CnPP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL \xe2\x80\xa6CnPP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL \xe2\x80\xa6AoSee Section 18.12.1, ESCR MSRs.000AjThermal Monitor 2 Control.BaUncore U-box perfmon counter MSR.CkHost has to be told before pages from the balloon are used.DkAn empty convencience trait that requires the <code>Mapper</code> trait \xe2\x80\xa6CmThis type represents a change of a page table requiring a \xe2\x80\xa6AeA memory-mapped UART.AfNeighbor AdvertisementAoDestination network unreachableAeState not recoverableCmThis feature indicates that memory accesses by the driver \xe2\x80\xa6DcDevice-independent Bit. See <code>virtio::F::ORDER_PLATFORM</code>.0000CoA <code>PrimitiveDateTime</code> with a <code>UtcOffset</code>.EjAn optional <code>RangedI8</code>; similar to <code>Option&lt;RangedI8&gt;</code> with \xe2\x80\xa6EjAn optional <code>RangedU8</code>; similar to <code>Option&lt;RangedU8&gt;</code> with \xe2\x80\xa6CeThe device has support for free page reporting. A \xe2\x80\xa6CbSize of a region covered by a PML4 Entry (512 GiB)nPrecision maskCmIf this flag is set, it indicates that the page fault was \xe2\x80\xa6AlSize and header of a packet.CjInvalid parameters in <code>PageRange</code> construction.AjA 64-bit page table entry.BfPossible flags for a page table entry.B`A 9-bit index into a page table.AhA value between 1 and 4.CkAn range of physical memory frames, exclusive the upper \xe2\x80\xa6ClA marker trait for access types which allow reading port \xe2\x80\xa6CiFuture for the <code>StreamExt::position()</code> method.A`Priority class 1A`Priority class 2A`Priority class 3A`Priority class 4A`Priority class 5A`Priority class 6A`Priority class 7A`Priority class 8A`Priority class 9BcRepresents a protection ring level.AfProtocol not supportedoRDRAND exiting.oRDSEED exiting.DjAdditional methods for <code>RwLock</code>s which support locking with \xe2\x80\xa6BlA fair ticket lock with exponential backoff.BoError returned by <code>Read::read_exact</code>ChAn access marker type indicating that a port is only \xe2\x80\xa6CkA mutex which can be recursively locked by a single thread.EgA trait for restricting one <code>Access</code> type to another <code>Access</code> \xe2\x80\xa6BbDescriptor Ring Change Event FlagsoSave IA32_EFER.BjA guard that releases the acquired permit.A`Serial I/O port.EgThe type returned by <code>set_logger</code> if <code>set_logger</code> has already \xe2\x80\xa6AnIntel SGX EPC Enumeration Leaf0BnIterator over the SGX sub-leafs (ECX &gt;= 2).0CeA vendor brand string as queried from the cpuid leaf.0AiSocket type not supportedDgA <code>lock_api::MutexGuard</code> based on <code>RawSpinMutex</code>.CbA <code>ByteSlice</code> that can be split in two.AcSource route failedBoA static-lifetimed async <code>Executor</code>.AmSize of a tera page (512 GiB)oTimestamp replyBoTLB 1-GiB Pages Information (LEAF=0x8000_0019).0CoAn error indicating that an <code>translate</code> call failed.CdA type that can be used with turbofish syntax in \xe2\x80\xa6nUnderflow maskA`Use I/O bitmaps.oUse TPR shadow.ClThe future returned by <code>RwLock::upgradable_read</code>.oVMCS shadowing.DkA view into a vacant entry in a <code>HashMap</code>. It is part of the \xe2\x80\xa6DhImplementation of <code>VecStorage</code> that stores the data in an \xe2\x80\xa6BeVirtualization Exception (Intel-only)oWBINVD exiting.CfLVT CMCI register. Read/write. See Figure 10-8 for \xe2\x80\xa6CmAllocate a frame of the appropriate size and return it if \xe2\x80\xa6Aeallocator-api2 crate.Cb(Virtual) Bus (local apic timer) frequency in kHz.0CeGet the number of fractional seconds in the duration.0A`Async executors.AkVersion Information: Family0CjA macro that matches flags values, similar to Rust\xe2\x80\x99s \xe2\x80\xa6ClTemporarily yields an exclusive lock to a waiting thread \xe2\x80\xa60BbC-bit location in page table entry0EfConvert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to \xe2\x80\xa6C`Clear any reserved fields in the message header.AdSet reserved fields.B`Initialize reserved fields to 0.CkReturn the probability of corrupting a packet, in percents.CiDefines the current Hermit kernel version in the note \xe2\x80\xa6BcDescriptor Ring Change Event OffsetCkThe device uses this to report which feature bits it is \xe2\x80\xa6BbDisable breakpoint in global mode.ClThe driver writes this to accept feature bits offered by \xe2\x80\xa6ClReturns the amount of time elapsed from an earlier point \xe2\x80\xa6DhDetermine the <code>Duration</code> that, if added to the parameter, \xe2\x80\xa6EbDetermine the <code>Duration</code> that, if added to <code>self</code>, would \xe2\x80\xa6CeAtomically enable interrupts and put the CPU to sleepAnNotify async tasks or threads.CmThis crate provides two thread-safe, non-blocking, no-std \xe2\x80\xa6ClReturns an iterator over all of the available nodes with \xe2\x80\xa6DnCreates a <code>Span</code> given a <code>base</code> and a <code>size</code>.DhAttempt to create a <code>Time</code> from the hour, minute, second, \xe2\x80\xa60E`Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and \xe2\x80\xa6DgCreates a <code>SmallVec</code> directly from the raw components of \xe2\x80\xa6CkConverts the given slice of IEEE754 single-precision (4 \xe2\x80\xa6CkConverts the given slice of IEEE754 double-precision (8 \xe2\x80\xa6CkConverts the given slice of signed 16 bit integers to a \xe2\x80\xa6CkConverts the given slice of signed 32 bit integers to a \xe2\x80\xa6CkConverts the given slice of signed 64 bit integers to a \xe2\x80\xa6CmConverts the given slice of unsigned 16 bit integers to a \xe2\x80\xa6CmConverts the given slice of unsigned 32 bit integers to a \xe2\x80\xa6CmConverts the given slice of unsigned 64 bit integers to a \xe2\x80\xa6FdConstructs a new <code>PageRange</code> from a given <code>start</code> and <code>end</code>, or \xe2\x80\xa6CfConverts a string slice in a given base to an integer.00000000000BkTransmutes into an enum from its primitive.CaQuery basic information about caches (LEAF=0x02).0B`Is there support for 1GiB pages.0C`4K page size entries supported by this structure0AnCheck support for 64-bit mode.CkSEV guest execution only allowed from a 64-bit host if set.10kAVX512VBMI20jAVX512VBMIjAVX512VNNI0AdSupports CLFLUSHOPT.0AiCheck support legacy cmp.0CiCMPXCHG16B Available. A value of 1 indicates that the \xe2\x80\xa60CbFull debug state swap supported for SEV-ES guests.0CjA value of 1 indicates the indicates the presence of a \xe2\x80\xa60BiWBINVD/WBNOINVD are interruptible if set.0CmBandwidth counters can be configured to measure bandwidth \xe2\x80\xa6jVPCLMULQDQ0AhAlso flush global pages.EhTakes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.CoDecomposes a <code>Vec&lt;T&gt;</code> into its raw components.DiAn invalid opcode exception (<code>#UD</code>) occurs when an attempt \xe2\x80\xa6CnWhether the value\xe2\x80\x99s permitted range is conditional, i.e. \xe2\x80\xa6CnTrue if the bit n (corresponding to the sub-leaf index) is \xe2\x80\xa60BlTell whether or not the cell is initialized.DgReturns <code>true</code> if the address is an IPv4-mapped address (\xe2\x80\xa6CnQuery whether the address falls into the \xe2\x80\x9cunspecified\xe2\x80\x9d \xe2\x80\xa6DhReturns <code>true</code> for the special \xe2\x80\x98unspecified\xe2\x80\x99 address (\xe2\x80\xa6EgReturns <code>true</code> for the special \xe2\x80\x98unspecified\xe2\x80\x99 address (<code>::</code>\xe2\x80\xa6CaThe DHCP IP lease duration, specified in seconds.CdReturn the local endpoint, or None if not connected.CkAcquires an exclusive lock, blocking the current thread \xe2\x80\xa6BdMaximum burst size, in terms of MTU.CeFunctions to read and write model specific registers.DiInterprets the given <code>source</code> as a <code>&amp;mut Self</code>.CmReports a value that may be used to further differentiate \xe2\x80\xa6BgReturn the Neighbor Solicitation flags.CgNumeric primitives stored in network-endian byte order.CnCreates a new volatile pointer with restricted access from \xe2\x80\xa6DiTurns the given pointer into a <code>VolatileRef</code> instance with \xe2\x80\xa6CmCreates a ranged integer with the given value, saturating \xe2\x80\xa600000000000ClNotifies a number of active listeners without emitting a \xe2\x80\xa6ChReturns double ended iterator for iterating over the \xe2\x80\xa6CiOne-shot locks that panic instead of (dead)locking on \xe2\x80\xa6CnEnsures a value is in the entry by inserting the result of \xe2\x80\xa6000CmWrites the given arguments to the formatter, padding them \xe2\x80\xa6CcFeeds a slice of this type into the state provided.0CjAppends an <code>item</code> to the back of the collectionCnPushes an item onto the binary heap without first checking \xe2\x80\xa6CmPushes a value onto the list without checking if the list \xe2\x80\xa6CjVirtual queue\xe2\x80\x99s Descriptor Area 64 bit long physical \xe2\x80\xa6CmThe driver writes the physical address of Descriptor Area \xe2\x80\xa6B`Return the reachable time field.CmRead as many elements from allocated buffer elements into \xe2\x80\xa6CdReads a <code>Self</code> value from the given port.DjReads signed 128 bit integers from <code>src</code> into <code>dst</code>.DhLocks this <code>RwLock</code> with shared read access, blocking the \xe2\x80\xa6DlReads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.DeInterprets the given <code>source</code> as a <code>&amp;Self</code>.AaRegister a waker.DdReturns the value of the <code>giaddr</code> field, zero if not set.DkThis field is also known as <code>giaddr</code> in the RFC. In order to \xe2\x80\xa6ClThe DHCP IP renew duration (T1 interval), in seconds, if \xe2\x80\xa6BdReplace the minutes within the hour.000CkReplace the offset. The date and time components remain \xe2\x80\xa6BfReplace the seconds within the minute.000F`Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.DkSaturating absolute value. Computes <code>self.abs()</code>, saturating \xe2\x80\xa600000DbSaturating integer addition. Computes <code>self + rhs</code>, \xe2\x80\xa600000000000DdComputes <code>self + duration</code>, saturating value on overflow.DeComputes <code>self + rhs</code>, saturating if an overflow occurred.111DhSaturating integer multiplication. Computes <code>self * rhs</code>, \xe2\x80\xa600000000000DeComputes <code>self * rhs</code>, saturating if an overflow occurred.DbSaturating integer negation. Computes <code>self - rhs</code>, \xe2\x80\xa600000DkSaturating integer exponentiation. Computes <code>self.pow(exp)</code>, \xe2\x80\xa600000000000DeSaturating integer subtraction. Computes <code>self - rhs</code>, \xe2\x80\xa600000000000DdComputes <code>self - duration</code>, saturating value on overflow.DeComputes <code>self - rhs</code>, saturating if an overflow occurred.111BeSet the acknowledgement number field.CnCreate a new segment, TSS or LDT descriptor by setting the \xe2\x80\xa60ChSet the identifier field (for echo request and reply \xe2\x80\xa60AiSet the flow label field.ClSets the handler function for the IDT entry and sets the \xe2\x80\xa6BaSet the header length, in octets.CkSet the extension header data length. The length of the \xe2\x80\xa61AlSet the keep-alive interval.AnSet the address being queried.BcReturn the multicast address field.BbSet the \xe2\x80\x9cmore fragments\xe2\x80\x9d flag.BbSet the more fragments flag field.AfSet the prefix length.AnSet the sequence number field.AjSet the window size field.CkCreates an optional ranged integer without checking the \xe2\x80\xa600000000000EeSwaps elements at indices <code>i</code> and <code>j</code> without checking that \xe2\x80\xa6DiLike <code>synch::futex_wait</code>, but does extra sanity checks and \xe2\x80\xa6DbLike <code>synch::futex_wake</code>, but does extra sanity checks.CiRead the entries of a directory. Similar as the Linux \xe2\x80\xa6DfConverts this address to an <code>IPv4</code> address if it\xe2\x80\x99s an \xe2\x80\xa6DbConverts this address to an IPv4-mapped <code>IPv6</code> address.CfReturns the number of trailing zeros in the binary \xe2\x80\xa600000000000000000000000000000000000000000000000AkReturns the transaction ID.DkThis field is also known as <code>xid</code> in the RFC. It is a random \xe2\x80\xa6ChTranslates the given virtual address to the physical \xe2\x80\xa6CfReturn the frame that the specified page is mapped to.CaFill <code>dest</code> entirely with random data.CiAttempts to acquire this lock until a timeout is reached.000DkAttempts to make a new <code>MappedMutexGuard</code> for a component of \xe2\x80\xa60DhAttempts to make  a new <code>MappedReentrantMutexGuard</code> for a \xe2\x80\xa60DdAttempts to make  a new <code>MappedRwLockReadGuard</code> for a \xe2\x80\xa6DeAttempts to make  a new <code>MappedRwLockWriteGuard</code> for a \xe2\x80\xa60CkConstructs a new box with uninitialized contents on the \xe2\x80\xa6DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6DhAttempts to acquire this <code>RwLock</code> with shared read access \xe2\x80\xa6AhAlign address downwards.00AgGet the Unix timestamp.0BmObtain the width of the value before padding.fSafety0AfAlign address upwards.BhReturn the valid lifetime of the prefix.EbProduces the split parts of <code>self</code>, using <code>IntoBytes</code> to \xe2\x80\xa60mvector nr. 20CaSet whether the <code>#</code> flag is specified.DgCreates an empty <code>HashMap</code> which will use the given hash \xe2\x80\xa6CiCreates a new empty hash set which will use the given \xe2\x80\xa6DiAttempt to create a <code>PrimitiveDateTime</code> using the existing \xe2\x80\xa60DiWrap Counter. With <code>VIRTIO_F_RING_PACKED</code> this is the wrap \xe2\x80\xa6CaSet the optional precision for numeric types. \xe2\x80\xa6CaSet whether the <code>+</code> flag is specified.ClWrites IEEE754 single-precision (4 bytes) floating point \xe2\x80\xa6ClWrites IEEE754 double-precision (8 bytes) floating point \xe2\x80\xa6DjWrites signed 16 bit integers from <code>src</code> into <code>dst</code>.DjWrites signed 32 bit integers from <code>src</code> into <code>dst</code>.DjWrites signed 64 bit integers from <code>src</code> into <code>dst</code>.DlWrites unsigned 16 bit integers from <code>src</code> into <code>dst</code>.DlWrites unsigned 32 bit integers from <code>src</code> into <code>dst</code>.DlWrites unsigned 64 bit integers from <code>src</code> into <code>dst</code>.CeNext instruction accesses one of the debug registers.CkThis feature indicates that the device can be used on a \xe2\x80\xa6DdDevice-independent Bit. See <code>virtio::F::ACCESS_PLATFORM</code>.0000CnEnable automatic alignment checking if CR0.AM is set. Only \xe2\x80\xa6AdAddress unreachable.CkThe logical processor invalidates all mappings\xe2\x80\x94except \xe2\x80\xa6CnInterface wishes to listen to the sources in the specified \xe2\x80\xa6BaLog2 of base page size (12 bits).0CdAn array list of all available breakpoint registers.CnA mutual exclusion (Mutex) type based on busy-waiting with \xe2\x80\xa6EdBase struct for <code>BinaryHeap</code> and <code>BinaryHeapView</code>, generic \xe2\x80\xa6CnInterface no longer wishes to listen to the sources in the \xe2\x80\xa6AdSize of a cache-line0CjIf this flag is set, the memory access that caused the \xe2\x80\xa6A`CR0 read shadow.AgEnables 5-Level Paging.BlEnables process-context identifiers (PCIDs).BfEnable Performance-Monitoring CountersBiEnable Supervisor Mode Access Prevention.BlEnable Supervisor Mode Execution Protection.ClEnable User-Mode Instruction Prevention (the SGDT, SIDT, \xe2\x80\xa6A`CR4 read shadow.CmInterface has changed to a filter mode of EXCLUDE for the \xe2\x80\xa6CmInterface has changed to a filter mode of INCLUDE for the \xe2\x80\xa6CjCode Segment types for descriptors. See also Intel 3a, \xe2\x80\xa6AcA concurrent queue.BnThe connection was reset by the remote server.CmAn error type indicating that a conversion failed because \xe2\x80\xa6Cl11 \xe2\x80\x94 Break on data reads or writes but not instruction \xe2\x80\xa6C`Data reads or writes but not instruction fetchesCjData Segment types for descriptors. See also Intel 3a, \xe2\x80\xa6CkFlags for a GDT descriptor. Not all flags are valid for \xe2\x80\xa6BeThe possible descriptor table values.AmSpecify IPI Destination Mode.AeMMIO Device RegistersBlThe possible message types of a DHCP packet.B`A six-octet Ethernet II address.ClThis structure defines the CPU-internal exception vector \xe2\x80\xa6AkCode Execute-Only, accessedDbAn error indicating that an <code>update_flags</code> call failed.DjThe entry does not have the <code>PRESENT</code> flag set, so it isn\xe2\x80\x99\xe2\x80\xa6DfA common trait for all handler functions usable in <code>Entry</code>.CnRepresentation of an hardware address, such as an Ethernet \xe2\x80\xa6EdBase struct for <code>HistoryBuf</code> and <code>HistoryBufView</code>, generic \xe2\x80\xa6AlDestination host unreachableClFixed-Function Performance Counter Register 0 (R/W)  See \xe2\x80\xa6ClFixed-Function Performance Counter Register 1 (R/W)  See \xe2\x80\xa6ClFixed-Function Performance Counter Register 2 (R/W)  See \xe2\x80\xa6ClSee Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter \xe2\x80\xa6f06_2EH000000000100111f06_0FHf06_1DHf06_1AH03CiMachine Check Status. (R) See Table 35-2. See Section \xe2\x80\xa6BnSee Section 35.16, MSRs in Pentium Processors.0CfPer-Logical-Processor TSC ADJUST (R/W) See Table 35-2.CiCapability Reporting Register of VM-function Controls \xe2\x80\xa6CkIf( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )Ckx2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 )CiError Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )Bgx2APIC Interrupt Command register (R/W)Bix2APIC Logical Destination register (R/O)Bhx2APIC Processor Priority register (R/O)Bcx2APIC Task Priority register (R/W)AiLength of an IPv6 header.A`Interrupt StatusCfA high-level representation of an IPv6 Routing Header.BjIPv6 Extension Routing Header Routing TypeAlSize of a large page (4 MiB)AlSize of a large page (2 MiB)AfLinux Boot Parameters.CjIf this flag is set, the page fault is a result of the \xe2\x80\xa6A`MONITOR exiting.AoSee Section 18.12.3, CCCR MSRs.000AoSee Section 18.12.1, ESCR MSRs.0BjSee Section 18.12.2, Performance Counters.0BkUncore M-box 0 perfmon DSP unit select MSR.BkUncore M-box 0 perfmon ISS unit select MSR.BkUncore M-box 0 perfmon MAP unit select MSR.BkUncore M-box 0 perfmon PGT unit select MSR.BkUncore M-box 0 perfmon PLD unit select MSR.BkUncore M-box 0 perfmon ZDP unit select MSR.BkUncore M-box 1 perfmon DSP unit select MSR.BkUncore M-box 1 perfmon ISS unit select MSR.BkUncore M-box 1 perfmon MAP unit select MSR.BkUncore M-box 1 perfmon PGT unit select MSR.BkUncore M-box 1 perfmon PLD unit select MSR.BkUncore M-box 1 perfmon ZDP unit select MSR.ClSee Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter \xe2\x80\xa60000000000000000====CkPrecise Event-Based Sampling (PEBS) (R/W)  Controls the \xe2\x80\xa6Cfsee See Section 18.7.1.2, Load Latency Performance \xe2\x80\xa6AnModel Specific Platform ID (R)CiSMM Blocked (SMM-RO) Reports the blocked state of all \xe2\x80\xa6CkSMM Delayed (SMM-RO) Reports the interruptible state of \xe2\x80\xa6CmEnhanced SMM Capabilities (SMM-RO) Reports SMM capability \xe2\x80\xa6CbSee Section 18.7.2.2, Uncore Performance Event \xe2\x80\xa60000000BaUncore W-box perfmon counter MSR.000ChA Mapper implementation that relies on a PhysAddr to \xe2\x80\xa6BbBuilder for <code>Metadata</code>.BoA high-level representation of an NDISC Option.AaNDISC Option TypeAeNeighbor SolicitationCkA Mapper implementation that requires that the complete \xe2\x80\xa6ElAn optional <code>RangedI16</code>; similar to <code>Option&lt;RangedI16&gt;</code> with \xe2\x80\xa6ElAn optional <code>RangedI32</code>; similar to <code>Option&lt;RangedI32&gt;</code> with \xe2\x80\xa6ElAn optional <code>RangedI64</code>; similar to <code>Option&lt;RangedI64&gt;</code> with \xe2\x80\xa6ElAn optional <code>RangedU16</code>; similar to <code>Option&lt;RangedU16&gt;</code> with \xe2\x80\xa6ElAn optional <code>RangedU32</code>; similar to <code>Option&lt;RangedU32&gt;</code> with \xe2\x80\xa6ElAn optional <code>RangedU64</code>; similar to <code>Option&lt;RangedU64&gt;</code> with \xe2\x80\xa6DhImplementation of <code>VecStorage</code> that stores the data in an \xe2\x80\xa6AgA packet was processed.D`Invalid parameters used in <code>PageLayout</code> construction.DhThe type returned by <code>from_str</code> when the string doesn\xe2\x80\x99t \xe2\x80\xa6CjFuture for the <code>StreamExt::partition()</code> method.CnThe type of metadata stored in a pointer to <code>Self</code>.AlDestination port unreachableAaPort unreachable.ClA marker trait for access types which allow writing port \xe2\x80\xa6CgPower management capability, Cap ID = <code>0x01</code>BnPrimary processor-based VM-execution controls.AaPriority class 10AaPriority class 11AaPriority class 12AaPriority class 13AaPriority class 14AaPriority class 15BcProcessor Serial Number (LEAF=0x3).0oQueue InterruptClA one-shot mutex that panics instead of (dead)locking on \xe2\x80\xa60CnAn access marker type indicating that a port is allowed to \xe2\x80\xa6AlData Read/Write, expand-downCaA guard that releases the read lock when dropped.CnRAII structure used to release the shared read access of a \xe2\x80\xa6BkEnable WRSS{D,Q}W instructions (WR_SHTK_EN)BaCS register target for CPL 0 codeCgSpecifies which element to load into a segment from \xe2\x80\xa60AmWrite a char to the terminal.EbErrors that could be returned by <code>Write</code> on <code>&amp;mut [u8]</code>.AdSource host isolatedCiStream for the <code>stop_after_future()</code> function.AbTSC offset (full).AbTSC offset (high).DcThe return value of the <code>Translate::translate</code> function.ChThe error type returned when a checked integral type \xe2\x80\xa6CdThe error type for <code>try_reserve</code> methods.0CnControls whether accesses from userspace (i.e. ring 3) are \xe2\x80\xa6A`Use MSR bitmaps.A`Use TSC scaling.AiVirtualize APIC accesses.AaVM-exit controls.BjA wide volatile pointer for 64-bit fields.DkThe <code>WouldBlockError</code> error indicates that the serial device \xe2\x80\xa6ChAn access marker type indicating that a port is only \xe2\x80\xa6CgLVT Error register. Read/write. See Figure 10-8 for \xe2\x80\xa6CgLVT LINT0 register. Read/write. See Figure 10-8 for \xe2\x80\xa6CgLVT LINT1 register. Read/write. See Figure 10-8 for \xe2\x80\xa6CgLVT Timer register. Read/write. See Figure 10-8 for \xe2\x80\xa6DbAn alignment check exception (<code>#AC</code>) occurs when an \xe2\x80\xa6DjBehaves like <code>allocate</code>, but also ensures that the returned \xe2\x80\xa6CnReturns the total amount of memory allocated internally by \xe2\x80\xa600CdReturn the interval for packet rate limiting, in \xe2\x80\xa6CmTemporarily yields an upgradable lock to a waiting thread \xe2\x80\xa60EeComputes <code>self + duration</code>, returning <code>None</code> if an overflow \xe2\x80\xa6EeComputes <code>self - duration</code>, returning <code>None</code> if an overflow \xe2\x80\xa6DjCollects <code>amount</code> values at random from the iterable into a \xe2\x80\xa6Be<code>clock-frequency</code> propertyCmQuery whether the subnetwork described by this CIDR block \xe2\x80\xa6ClQuery whether the subnetwork described by this IPv4 CIDR \xe2\x80\xa6ClQuery whether the subnetwork described by this IPV6 CIDR \xe2\x80\xa6BoMiscellaneous tools for concurrent programming.DfReturns a reference to the wrapped <code>T</code> without checking \xe2\x80\xa6BiDescriptor Ring Change Event Wrap CounterBoFlags representing features the device supportsCeFlags representing device features understood and \xe2\x80\xa6CcData TLB number of entries for 2-MB and 4-MB pages.CfL2 Data TLB number of entries for 2-MB and 4-MB pages.10CgEmit a hint to the compiler that the value is in range.00000000000DiSearches for a node which contains a <code>compatible</code> property \xe2\x80\xa6BoCreate a <code>Date</code> from the Julian day.EnConstructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or \xe2\x80\xa6FbConstructs a <code>PageLayout</code> from a given <code>size</code> and <code>align</code>, or \xe2\x80\xa6ClConverts the given slice of signed 128 bit integers to a \xe2\x80\xa6CnConverts the given slice of unsigned 128 bit integers to a \xe2\x80\xa6AnParse a flags value from text.Cjstruct fuse_ext_header - extension header @size: total \xe2\x80\xa6ChEither get the value or initialize it with the given \xe2\x80\xa6DiGets the contents of the cell, initializing it with <code>f</code> if \xe2\x80\xa600000CmReturn the largest contiguous slice of unallocated buffer \xe2\x80\xa6C`Return information about the vendor (LEAF=0x00).0Ca1GB page size entries supported by this structure0Ca2MB page size entries supported by this structure0Ca4MB page size entries supported by this structure0CgLOCK MOV CR0 means MOV CR8. See \xe2\x80\x9cMOV(CRn)\xe2\x80\x9d in APM3.0AeSupports AVX512_BF16.AeSupports AVX512_FP16.kAVX512_IFMA0kAVX512VBMI2CaPerformance Monitoring Version 2 supported if setBkHas PREFETCHWT1 (Intel\xc2\xae Xeon Phi\xe2\x84\xa2 only).0CnIntel Turbo Boost Technology Available (see description of \xe2\x80\xa60Bf<code>#interrupt-cells</code> propertyCnA mutex for sharing data with interrupt handlers or signal \xe2\x80\xa6ChCoverts <code>self</code> into a <code>&amp;[u8]</code>.EdReturns <code>true</code> if this address part of the <code>198.18.0.0/15</code> \xe2\x80\xa6D`Returns <code>true</code> if this is an address reserved for \xe2\x80\xa6EjReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.00000000000000000000000EdReturns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).CjInstruction TLB number of entries for 2-MB and 4-MB pages.CjL2 Instruction TLB number of entries for 2-MB and 4-MB \xe2\x80\xa610BlReturn the Source/Target Link-layer Address.AjReturn the listen endpointClAcquires an upgradable lock, blocking the current thread \xe2\x80\xa6DhRearranges the internal storage of the <code>Deque</code> to make it \xe2\x80\xa6BjReturn the maximum packet size, in octets.CmReturns the address\xe2\x80\x99s multicast scope if the address is \xe2\x80\xa6EjInterprets the prefix of the given <code>source</code> as a <code>&amp;mut Self</code> \xe2\x80\xa6EjInterprets the suffix of the given <code>source</code> as a <code>&amp;mut Self</code> \xe2\x80\xa6CkCreates a new UART interface on the given memory mapped \xe2\x80\xa6ChCalculates the first occurrence of a weekday that is \xe2\x80\xa6CiThis is the minimum number of bytes required for each \xe2\x80\xa6CbNumber of Northbridge Performance Monitor CountersClEnsures a value is in the entry by inserting the default \xe2\x80\xa6CeReturn the maximum number packets that can be stored.CjObtain the width of the value after padding, given the \xe2\x80\xa6ChCompute the width of multiple items while optionally \xe2\x80\xa6CdThe range of all possible physical memory addresses.CcReturn the MTU field (for packet too big messages).Bf<code>None</code> means \xe2\x80\x9cforever\xe2\x80\x9d.9CjVirtual queue\xe2\x80\x99s Descriptor Area 64 bit long physical \xe2\x80\xa6CmThe driver writes the physical address of Descriptor Area \xe2\x80\xa6CeReturns a range of pages, inclusive <code>end</code>.CfReturns a range of frames, inclusive <code>end</code>.DeReads a copy of <code>Self</code> from the given <code>source</code>.CmThe DHCP IP rebind duration (T2 interval), in seconds, if \xe2\x80\xa6EfInterprets the prefix of the given <code>source</code> as a <code>&amp;Self</code> \xe2\x80\xa6DeInterprets the suffix of the given bytes as a <code>&amp;Self</code>.CeReturn the remote endpoint, or None if not connected.AlReplace the day of the year.000BaReturn the router lifetime field.CiReports the valid bits of SECS.ATTRIBUTES[127:0] that \xe2\x80\xa60CfSet the probability of dropping a packet, in percents.CmSet the sequence number field (for echo request and reply \xe2\x80\xa60BcSet the fragment offset, in octets.AnSet the fragment offset field.AkSet whether to ignore NAKs.CcA thread-unsafe version of <code>set_logger</code>.CiSet the maximum packet reception rate, in packets per \xe2\x80\xa6ClSet the maximum packet transmission rate, in packets per \xe2\x80\xa6BeSet the next header (protocol) field.AjSet the next header field.0AdSet the option type.0AgSet the payload length.AmSet the payload length field.BmReturn the record type for the given sources.CgAssigns a Interrupt Stack Table (IST) stack to this \xe2\x80\xa6AmSet the target address field.AiVQ number to be notified.DjCreates an inline <code>SmallVec</code> containing the arguments. This \xe2\x80\xa6FeCreates a new task without <code>Send</code>, <code>Sync</code>, and <code>&#39;static</code> bounds.0DbCreate a [<code>std::time::Duration</code>] from the number of \xe2\x80\xa6CkReturns the current seek position from the start of the \xe2\x80\xa6CeNumber of available address space identifiers (ASID).0ChReturns the base page size, in bytes, of the current \xe2\x80\xa6BcDestroy and deallocate a semaphore.BeTry to acquire a lock on a semaphore.CdWake up the task with the identifier <code>id</code>DkConverts the <code>Level</code> to the equivalent <code>LevelFilter</code>.BdGet the year and ordinal day number.000CkAttempts to get an owned permit for a concurrent operation.CcAttempts to acquire a shared lock without blocking.DdAttempts to make  a new <code>MappedRwLockReadGuard</code> for a \xe2\x80\xa6CjAttempts to upgrade an upgradable lock to an exclusive \xe2\x80\xa6ClTries to atomically upgrade an upgradable read lock into \xe2\x80\xa6DeAttempts to acquire this <code>RwLock</code> with exclusive write \xe2\x80\xa6AhAlign address downwards.AjUhyve Hypervisor InterfaceAcSet underline colorBiUpdate the IP addresses of the interface.CmAcquires a read lock with the possibility to upgrade to a \xe2\x80\xa6DhLocks this <code>RwLock</code> with upgradable read access, blocking \xe2\x80\xa6AmValidate the header checksum.000AmValidate the packet checksum.0CaSet whether the <code>-</code> flag is specified.DkWrites signed 128 bit integers from <code>src</code> into <code>dst</code>.DeWrites a copy of <code>self</code> to the prefix of <code>dst</code>.DeWrites a copy of <code>self</code> to the suffix of <code>dst</code>.DmWrites unsigned 128 bit integers from <code>src</code> into <code>dst</code>.CjA nonexistent interface was requested or the requested \xe2\x80\xa6DhWARNING: <code>AssumeUnlockable</code> may cause undefined behaviour \xe2\x80\xa6ChThis table is taken from Intel manual (Section CPUID \xe2\x80\xa60AaCR3-load exiting.AaCR3-target count.B`Enables unmasked SSE exceptions.AaCR8-load exiting.AgGuest CS access rights.CnError due to the computed capacity exceeding the collection\xe2\x80\xa60DgOverflow <code>usize::MAX</code> or other error during size computationCnAn unsafe marker trait for types where clones deref to the \xe2\x80\xa6AgGuest DS access rights.AjA buffer for DHCP options.DdAn error type indicating that a <code>TryFrom</code> call failed \xe2\x80\xa6AbEPT-violation #VE.AgGuest ES access rights.AaException bitmap.AgEthernet protocol type.CdStructured Extended Feature Identifiers (LEAF=0x07).0AgGuest FS access rights.AmConfiguration for formatting.ChA trait for types that can deallocate a frame of memory.AgGuest GS access rights.AnHop limit exceeded in transit.CgEnum containing all valid port mappings for hypercalls.AbIA-32e mode guest.f06_2EH00000000000CmPerformance Event Select for Counter 0 (R/W) Supports all \xe2\x80\xa6CmPerformance Event Select for Counter 1 (R/W) Supports all \xe2\x80\xa6CmPerformance Event Select for Counter 2 (R/W) Supports all \xe2\x80\xa6CmPerformance Event Select for Counter 3 (R/W) Supports all \xe2\x80\xa6BjSee Table 35-2; If CPUID.0AH:EAX[15:8] = 8000CeSee Table 35-2. See Section 14.1, Enhanced Intel  \xe2\x80\xa6CmPlatform ID (R)  See Table 35-2. The operating system can \xe2\x80\xa6CkCS register target for CPL 0 code (R/W) See Table 35-2. \xe2\x80\xa6AfHost IA32_SYSENTER_CS.AgGuest IA32_SYSENTER_CS.Ccx2APIC Interrupt Request register bits [31:0] (R/O)Cdx2APIC Interrupt Request register bits [63:32] (R/O)Cdx2APIC Interrupt Request register bits [95:64] (R/O)Cex2APIC Interrupt Request register bits [127:96] (R/O)Cfx2APIC Interrupt Request register bits [159:128] (R/O)Cfx2APIC Interrupt Request register bits [191:160] (R/O)Cfx2APIC Interrupt Request register bits [223:192] (R/O)Cfx2APIC Interrupt Request register bits [255:224] (R/O)Blx2APIC In-Service register bits [31:0] (R/O)Bmx2APIC In-Service register bits [63:32] (R/O)Bmx2APIC In-Service register bits [95:64] (R/O)Bnx2APIC In-Service register bits [127:96] (R/O)Box2APIC In-Service register bits [159:128] (R/O)Box2APIC In-Service register bits [191:160] (R/O)Box2APIC In-Service register bits [223:192] (R/O)Box2APIC In-Service register bits [255:224] (R/O)Box2APIC Spurious Interrupt Vector register (R/W)Bnx2APIC Trigger Mode register bits [31:0] (R/O)Box2APIC Trigger Mode register bits [63:32] (R/O)Box2APIC Trigger Mode register bits [95:64] (R/O)C`x2APIC Trigger Mode register bits [127:96] (R/O)Cax2APIC Trigger Mode register bits [159:128] (R/O)Cax2APIC Trigger Mode register bits [191:160] (R/O)Cax2APIC Trigger Mode register bits [223:192] (R/O)Cax2APIC Trigger Mode register bits [255:224] (R/O)AgGuest interrupt status.CaAn index provided was out-of-bounds for the slab.DhA <code>ByteSliceMut</code> that conveys no ownership, and so can be \xe2\x80\xa6CoA value that can be converted into a <code>Notification</code>.CeThe given page table was not suitable to create a \xe2\x80\xa6BkAn internet endpoint address for listening.CgA high-level representation of an IPv6 Fragment header.CiA high-level representation of an IPv6 Hop-by-Hop Header.BiAn iterator over all defined named flags.BfInformation about L3 cache monitoring.0BcIndicates that long mode is active.C`Activates long mode, requires activating paging.CoTrait defining how data for a <code>LinearMap</code> is stored.BcUncore B-box 0 perfmon counter MSR.000BjUncore B-box 0 perfmon local box mask MSR.BcUncore B-box 1 perfmon counter MSR.000BjUncore B-box 1 perfmon local box mask MSR.BjSee Section 18.12.2, Performance Counters.000BcUncore C-box 0 perfmon counter MSR.00000BcUncore C-box 1 perfmon counter MSR.00000BcUncore C-box 2 perfmon counter MSR.00000BcUncore C-box 3 perfmon counter MSR.00000BcUncore C-box 4 perfmon counter MSR.00000BcUncore C-box 5 perfmon counter MSR.00000BcUncore C-box 6 perfmon counter MSR.00000BcUncore C-box 7 perfmon counter MSR.00000BcUncore C-box 8 perfmon counter MSR.00000BcUncore C-box 9 perfmon counter MSR.00000CnLast Branch Record 0 (R/W)  One of four last branch record \xe2\x80\xa6CaLast Branch Record 1 (R/W) See description of \xe2\x80\xa6BoLast Branch Record 2 See description of the \xe2\x80\xa6BoLast Branch Record 3 See description of the \xe2\x80\xa6CaLast Branch Record 4 (R/W) See description of \xe2\x80\xa6CaLast Branch Record 5 (R/W) See description of \xe2\x80\xa6CaLast Branch Record 6 (R/W) See description of \xe2\x80\xa6CaLast Branch Record 7 (R/W) See description of \xe2\x80\xa6ChLast Exception Record From Linear IP (R)  Contains a \xe2\x80\xa6BcUncore M-box 0 perfmon counter MSR.00000BcUncore M-box 1 perfmon counter MSR.00000BaPlatform Feature Requirements (R)BcUncore R-box 0 perfmon counter MSR.0000000BcUncore R-box 1 perfmon counter MSR.0BcUncore S-box 0 perfmon counter MSR.000BjUncore S-box 0 perfmon local box mask MSR.BcUncore S-box 1 perfmon counter MSR.000BjUncore S-box 1 perfmon local box mask MSR.DkAn RAII mutex guard returned by <code>MutexGuard::map</code>, which can \xe2\x80\xa6ChA read/write wrapper around an MLDv2 Listener Report \xe2\x80\xa6CiInformation about how monitor/mwait works on this CPU \xe2\x80\xa60CnThis trait is implemented for 4KiB and 2MiB pages, but not \xe2\x80\xa6AbNotification Data.0CeA thread-safe cell which can be written to only once.EnAn optional <code>RangedI128</code>; similar to <code>Option&lt;RangedI128&gt;</code> with \xe2\x80\xa6EnAn optional <code>RangedU128</code>; similar to <code>Option&lt;RangedU128&gt;</code> with \xe2\x80\xa6BoA trait for fields that can be accessed via \xe2\x80\xa6CjThe operation lacked the necessary privileges to complete.CmA passed <code>usize</code> was not a valid physical address.CkA passed <code>u64</code> was not a valid physical address.000B`Pin-based VM-execution controls.B`Destination protocol unreachableCiA one-shot readers-writer lock that panics instead of \xe2\x80\xa60DhAdditional methods for <code>RwLock</code>s which support atomically \xe2\x80\xa6AhData Read-Only, accessedAaRedirected HeaderCbA guard that releases the write lock when dropped.CmRAII structure used to release the exclusive write access \xe2\x80\xa6AgGuest SS access rights.BjThe statically resolved maximum log level.AfCPL 0 code entry pointAmStack pointer for CPL 0 stackA`The linked list.AgGuest TR access rights.ChAlthough hardware task-switching is not supported in \xe2\x80\xa6ChIn 64-bit mode the TSS holds information that is not \xe2\x80\xa6ChQuery information about thermal and power management \xe2\x80\xa60DiA <code>lock_api::MutexGuard</code> based on <code>RawTicketMutex</code>.ClFuture for the <code>StreamExt::try_collect()</code> method.CmFuture for the <code>StreamExt::try_for_each()</code> method.EnImplements <code>TryFrom&lt;Primitive&gt;</code> for a <code>#[repr(Primitive)] enum</code>\xe2\x80\xa6AbVM-entry controls.AjAn invalid virtual addressCjA passed <code>u64</code> was not a valid virtual address.AkAn invalid virtual address.01ChVital product data capability, Cap ID = <code>0x3</code>AlVMM Communication (AMD-only)Alx87 Floating-Point ExceptionCkIdentifies the size of the bandwidth specifier field in theAmOffset within the 4 KiB page.000000ClEmits a \xe2\x80\x98magic breakpoint\xe2\x80\x99 instruction for the Bochs \xe2\x80\xa6BaAddress to Linux boot parameters.EfIf the current value equals <code>current</code>, stores <code>new</code> into the \xe2\x80\xa60CaA concurrent multi-producer multi-consumer queue.BaL1 data cache line size in bytes.0BbDeallocate the given unused frame.DeCall <code>f</code> with a single buffer element, and dequeue the \xe2\x80\xa6BbDescriptor Ring Change Event FlagsBoThe descriptor table this error code refers to.BmL1 Data TLB number of entries for 1-GB pages.0BmL2 Data TLB number of entries for 1-GB pages.0DeCall <code>f</code> with a single buffer element, and enqueue the \xe2\x80\xa6BiExtended APIC ID of the logical processorCnTranslate the given physical frame to a virtual page table \xe2\x80\xa6BbConvert from a bits value exactly.000000000000000000000000000000000000000EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6DeConstructs a box from a <code>NonNull</code> pointer in the given \xe2\x80\xa6BmForms a GDT from a slice of <code>u64</code>.Ckstruct fuse_supp_groups - Supplementary group extension \xe2\x80\xa6CjGenerate a new set of results immediately, setting the \xe2\x80\xa60CcReturns mutable references to many indices at once.CjQuery a set of features that are available on this CPU \xe2\x80\xa60BmGets the current retry/timeouts configurationBfReturns the value as a primitive type.00000000000AmOffset within the 1 GiB page.AoHas 100 MHz multiplier Control?0lAVX512BITALG0BaFlexible HWP is supported if set.0AeFrequency ID control.0CfIndicates that QM_CTR bit 61 is an overflow bit if setChIndicates support for the pause intercept filter if set.0CiA value of 1 indicates that the processors local APIC \xe2\x80\xa60DiIndicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if \xe2\x80\xa60CaIntel\xc2\xae Turbo Boost Max Technology 3.0 available.0AcVoltage ID control.0:::BhL1 instruction cache line size in bytes.0CkSearches for the interrupt parent, if the node contains oneCkRepresents the state of the device\xe2\x80\x99s INTx# signal. If \xe2\x80\xa6A`Interrupt statusCeConverts the vector into <code>Box&lt;[T]&gt;</code>.DgConverts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>ElConverts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating \xe2\x80\xa6BdAn invalid hex flag was encountered.DjReturns <code>true</code> if this address is in a range designated for \xe2\x80\xa6D`Returns <code>true</code> if this is an address reserved for \xe2\x80\xa6CjBit-granular map of isolation/contention of allocation \xe2\x80\xa6000CdL1 Instruction TLB number of entries for 1-GB pages.0CdL2 Instruction TLB number of entries for 1-GB pages.0BjUniversal crate for machine address types.DfReturns a route to 0.0.0.0/0 via the <code>gateway</code>, with no \xe2\x80\xa6DeReturns a route to ::/0 via the <code>gateway</code>, with no expiry.CiConstructs a new boxed slice with uninitialized contents.CmConstructs a new boxed slice with uninitialized contents, \xe2\x80\xa6CmReturns the next lower level or <code>None</code> for level 1DoImplement <code>next_u64</code> via <code>next_u32</code>, little-endian order.BlNumber of physical threads in the processor.0ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6BkOnly if VIRTIO_NET_F_HASH_REPORT negotiatedBiReturns the 9-bit level page table index.000CiReturns the table index of this page at the specified \xe2\x80\xa6CjReturn the maximum number of bytes in the payload ring \xe2\x80\xa6BcPhysical address of the mapped areaCeA lightweight version of pin-project written with \xe2\x80\xa6ChAppend a PadN option to the vector of hop-by-hop optionsCjVirtual queue\xe2\x80\x99s Device Area 64 bit long physical addressCiThe driver writes the physical address of Device Area \xe2\x80\xa6CjVirtual queue\xe2\x80\x99s Driver Area 64 bit long physical addressCiThe driver writes the physical address of Driver Area \xe2\x80\xa6ClThe driver reads this to calculate the offset from start \xe2\x80\xa6BeRead from device configuration space.EcReads a copy of <code>Self</code> from the prefix of the given <code>source</code>.EcReads a copy of <code>Self</code> from the suffix of the given <code>source</code>.AiSerial port base address.BhReturn the length of the auxiliary data.CkSets the handler address for the IDT entry and sets the \xe2\x80\xa6AnSet the hardware length field.BaSets the hardware address length.AiSet the Ipv6 Home AddressDeSets the value of the <code>magic cookie</code> field in the DHCP \xe2\x80\xa6CkSet the memory address that will be written to when the \xe2\x80\xa6AbSet interrupt maskBaSet the prefix information flags.AnSet the protocol length field.AnSet the retransmit time field.BeSet the retry/timeouts configuration.BcSet the Router Advertisement flags.AeSet the routing type.BiStarting address represented as a pointerDbCreate a [<code>std::time::Duration</code>] from the number of \xe2\x80\xa60CjReturns the maximum number of elements the deque can hold.CmRemoves an element from anywhere in the deque and returns \xe2\x80\xa6BoFinds the resolution (or precision) of a clock.BlDetermine the priority of the current threadAnGet the system\xe2\x80\x99s clock time.EhFill <code>len</code> bytes in <code>buf</code> with cryptographically secure random \xe2\x80\xa6CnSet priority of the thread with the identifier <code>id</code>AoOffset within the 512 GiB page.A`Threads per core0CcReturns whether the processor supports flushing \xe2\x80\xa6AmGet the year, month, and day.000C`Get the ISO 8601 year, week number, and weekday.000CmWrite only the contained, defined, named flags in a flags \xe2\x80\xa6CfChecks whether the address has the demanded alignment.AkReleases an exclusive lock.AhAlign address downwards.DjConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the \xe2\x80\xa6DgCreates an empty <code>HashTable</code> with the specified capacity \xe2\x80\xa6AiVQ number to be notified.BoThe given address was not sufficiently aligned.GjA <code>lock_api::RwLock</code> based on <code>RawRwSpinlock</code><code>&lt;</code><code>Backoff</code><code>&gt;</code>.DgReturned by <code>Barrier::wait()</code> when all tasks have called it.AbCR3-store exiting.AcCR3-target value 0.AcCR3-target value 1.AcCR3-target value 2.AcCR3-target value 3.AbCR8-store exiting.CiCompactPCI HotSwap capability, Cap ID = <code>0x06</code>AoA congestion control algorithm.CiThe connection was aborted (terminated) by the remote \xe2\x80\xa6C`The connection was refused by the remote server.AlControl Protection ExceptionDbA <code>ByteSlice</code> which can be copied without violating \xe2\x80\xa6ClThe native reader uses the cpuid instruction to read the \xe2\x80\xa6BnMakes building descriptors easier (hopefully).C`Common device configuration space functionality.AcDevice tree addressBcErroneous header field encountered.AgEvent Suppression FlagsAmCode Execute-Only, conformingClInformation for saving/restoring extended register state \xe2\x80\xa60AmYields ExtendedState structs.0AeGuest-linear address.AhGeneral Protection FaultCbTrait defining how data for a container is stored.BnBIOS Update Signature ID (R/W) See Table 35-2.AjGuest IA32_BNDCFGS (full).AjGuest IA32_BNDCFGS (high).ClCPL 0 code entry point (R/W) See Table 35-2. See Section \xe2\x80\xa6AgHost IA32_SYSENTER_EIP.AhGuest IA32_SYSENTER_EIP.CkStack pointer for CPL 0 stack (R/W) See Table 35-2. See \xe2\x80\xa6AgHost IA32_SYSENTER_ESP.AhGuest IA32_SYSENTER_ESP.ClThermal Monitor Status (R/W) See Section 14.5.2, Thermal \xe2\x80\xa6CkTSC Target of Local APIC s TSC Deadline Mode (R/W)  See \xe2\x80\xa6ChEnable legacy treatment for indirect branch tracking \xe2\x80\xa6CjIf this flag is set, it indicates that the access that \xe2\x80\xa6AaInvalid operationDaA <code>generic_once_cell::OnceCell</code>, initialized using \xe2\x80\xa6CjA read/write wrapper around an IPv6 Routing Header buffer.AbLoad IA32_BNDCFGS.AbMonitor trap flag.BkUncore B-box 0 perfmon local box match MSR.BkUncore B-box 1 perfmon local box match MSR.BaMC Bank Error Configuration (R/W)AlTrace Control Register (R/W)CmTSX Ctrl Register for TSX Async Abot (TAA) Migration. See \xe2\x80\xa6AhSee http://biosbits.org.BlOffcore Response Event Select Register (R/W)0Ahsee http://biosbits.org.BcUncore R-box 1 perfmon counter MSR.00BbUncore R-box 1perfmon counter MSR.11BkUncore S-box 0 perfmon local box match MSR.BkUncore S-box 1 perfmon local box match MSR.CnSystem Management Mode Physical Address Mask register  (WO \xe2\x80\xa6AdA memory reservationClThis feature indicates that the driver passes extra data \xe2\x80\xa6DfDevice-independent Bit. See <code>virtio::F::NOTIFICATION_DATA</code>.0000ChThis feature indicates that the driver uses the data \xe2\x80\xa6DfDevice-independent Bit. See <code>virtio::F::NOTIF_CONFIG_DATA</code>.0000B`Ignored, should always be unset.BoEnables the no-execute page-protection feature.CdCreate <code>Duration</code>s from numeric literals.DdEnables the SIMD floating-point exception (<code>#XF</code>) for \xe2\x80\xa6DjA <code>lock_api::MutexGuard</code> based on <code>RawOneShotMutex</code>.0EkAn optional <code>RangedIsize</code>; similar to <code>Option&lt;RangedIsize&gt;</code> \xe2\x80\xa6EkAn optional <code>RangedUsize</code>; similar to <code>Option&lt;RangedUsize&gt;</code> \xe2\x80\xa6BiPage tables have 512 = 4096 / 32 entries.BiPage tables have 512 = 4096 / 64 entries.AjProcess posted interrupts.CeThe given page is already mapped to a physical frame.DgPCI Standard Hot-Plug Controller capability, Cap ID = <code>0x0C</code>AbPrefix InformationAgCombined date and time.CnA mutex for sharing data with interrupt handlers or signal \xe2\x80\xa60ClA raw mutex type that wraps another raw mutex to provide \xe2\x80\xa6CgQuality of service enforcement information (LEAF=0x10).0CcIntel Resource Director Technology RDT (LEAF=0x0F).0AiData Read/Write, accessedC`Secondary processor-based VM-execution controls.AcSegment Not PresentCgDescribes an error code referencing a segment selector.CaAn owned guard that releases the acquired permit.BaPort address = <code>0x880</code>AoWrite a buffer to the terminal.AmSIMD Floating-Point ExceptionDjA shorthand for <code>SplitByteSlice</code> and <code>ByteSliceMut</code>.DjWhen set, only privilege-level 0 can execute the <code>RDTSC</code> or \xe2\x80\xa6AjUnconditional I/O exiting.D`The future returned by <code>RwLock::upgradable_read_arc</code>.AgVirtualize x2APIC mode.AmEnable the virtual-8086 mode.BhVirtual image of the INTERRUPT_FLAG bit.ClLVT Thermal Sensor register. Read/write. See Figure 10-8 \xe2\x80\xa6ClReturns the underlying byte slice including the trailing \xe2\x80\xa6EfConvert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to \xe2\x80\xa6EgConvert the <code>UtcDateTime</code> from UTC to the provided <code>UtcOffset</code>\xe2\x80\xa6BcThe \xe2\x80\x9cclient identifier\xe2\x80\x9d option.AmConfiguration atomicity valueCkConfiguration atomicity value.  The device changes this \xe2\x80\xa6CnReturn the largest number of elements that can be added to \xe2\x80\xa6ChConversion factor from reported IA32_QM_CTR value to \xe2\x80\xa60ChBit width of general-purpose, performance monitoring \xe2\x80\xa60BcReturn the current hop limit field.CfDequeue the given number of allocated buffer elements.DfCall <code>f</code> with the largest contiguous slice of allocated \xe2\x80\xa6CgReturns the item in the front of the queue, without \xe2\x80\xa60ChNumber of Interrupt Thresholds in Digital Thermal Sensor0BdEffective address of the mapped areaAjInitialize a Pending Page.DhCall <code>f</code> with the largest contiguous slice of unallocated \xe2\x80\xa6DjAdds an <code>item</code> to the end of the queue, without checking if \xe2\x80\xa60CfExtends the <code>CString</code> with the given bytes.DcClones and appends all elements in a slice to the <code>Vec</code>.0ChClones and writes all elements in a slice to the buffer.CiCopy elements from a slice and append them to the vector.BcVersion Information: Extended Model0ClFormat the value using the given formatter and metadata. \xe2\x80\xa6ChForcibly unlocks the mutex using a fair unlock protocol.0AmForcibly unlocks a read lock.D`Create a new <code>Instant</code> from a number of milliseconds.DgAttempt to create a <code>Date</code> from the year and ordinal day \xe2\x80\xa6EaCreates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a \xe2\x80\xa6AnParse a flags value from text.hOverviewCnValue of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address \xe2\x80\xa60ClReturns the key-value pair corresponding to the supplied \xe2\x80\xa6CkReturns a mutable reference to the element at the given \xe2\x80\xa6CkReturn a mutable reference to the value associated with \xe2\x80\xa6AgSupports AVX512_4FMAPS.AgSupports AVX512_4VNNIW.AfSupports AVX_VNNI_INT8AoIBS feature flags valid if set.CmIndicates that TLB flush events, including CR3 writes and \xe2\x80\xa60CkFXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR \xe2\x80\xa60AkIs Invariant TSC available?0BgSupports L3 Cache Intel RDT Monitoring.0CgMONITOR/MWAIT. A value of 1 indicates the processor \xe2\x80\xa60AoNested paging supported if set.0CjCopy elements from a slice into the vector at position \xe2\x80\xa6BgConvert this value into a notification.CnReturns the maximum count of pages to be flushed supported \xe2\x80\xa6BkMaximum page count for INVLPGB instruction.0AbDeassert INIT IPI.00DkReturns <code>true</code> if the address is a globally routable unicast \xe2\x80\xa6AkL2 Cache Line size in bytes000AmOffset within the 2 MiB page.AmOffset within the 4 MiB page.00111CfReturns a mutable reference to the wrapped level 4 \xe2\x80\xa600CiAn upper bound on how long to wait between retrying a \xe2\x80\xa6ClObtain the number of minutes past the hour the offset is \xe2\x80\xa6ChGet the week number where week 1 begins on the first \xe2\x80\xa6000CnReturns the next higher level or <code>None</code> for level 4EaImplement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.EaImplement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.CmAn unsigned integer which is the nominal frequency of the \xe2\x80\xa60CmReturns a non-zero thread ID which identifies the current \xe2\x80\xa6CkNotifies a number of active and still unnotified listeners.BcNumber of Core Performance CountersCjReturn the pointer field (for parameter problem messages).CjVirtual queue\xe2\x80\x99s Device Area 64 bit long physical addressCiThe driver writes the physical address of Device Area \xe2\x80\xa6CjVirtual queue\xe2\x80\x99s Driver Area 64 bit long physical addressCiThe driver writes the physical address of Driver Area \xe2\x80\xa6CkThe driver uses this to specify the queue vector for MSI-X.DiThis field exists only if <code>VIRTIO_F_NOTIF_CONFIG_DATA</code> has \xe2\x80\xa6CmReplace the date and time, which are assumed to be in the \xe2\x80\xa6CjThe \xe2\x80\x9cserver identifier\xe2\x80\x9d option. It is used both to \xe2\x80\xa6CiSet the code segment that will be used by this interrupt.CiEnable/disable masking of all interrupts for this PCI \xe2\x80\xa6AkSet the group address fieldCaSet the HardwareAddress address of the interface.AlSet the hardware type field.CdSets the hardware address type (only ethernet is \xe2\x80\xa6BdSet the maximum response code field.CeSet the maximum response time, using the encoding \xe2\x80\xa6BfEnable or disable Nagle\xe2\x80\x99s Algorithm.AlSet the protocol type field.CkProvides an optional way to manually supply a source of \xe2\x80\xa6AlSet the segments left field.AlSet the traffic class field.DkComputes the size of an object of type <code>Self</code> with the given \xe2\x80\xa6ClTake elements from this stream until the provided future \xe2\x80\xa6ChGet the week number where week 1 begins on the first \xe2\x80\xa6000CmRemoves an element from anywhere in the deque and returns \xe2\x80\xa6B`Get the current time of a clock.ClCreate a cryptographicly secure 32bit random number with \xe2\x80\xa6ClCreate a cryptographicly secure 64bit random number with \xe2\x80\xa6BeTry to acquire a lock on a semaphore.BhReturn whether TCP Timestamp is enabled.CkConstructs a new box with uninitialized contents in the \xe2\x80\xa6DkConstructs a new <code>Box</code> with uninitialized contents, with the \xe2\x80\xa6CfTries to reserve the minimum capacity for at least \xe2\x80\xa6DjReserve the minimum capacity for <code>additional</code> more elements \xe2\x80\xa6ClConditionally transmutes a mutable reference of one type \xe2\x80\xa6CmConditionally transmutes a mutable or immutable reference \xe2\x80\xa6CjAttempts to upgrade an upgradable lock to an exclusive \xe2\x80\xa6ClTries to atomically upgrade an upgradable read lock into \xe2\x80\xa6CnFirst, tries to atomically upgrade an upgradable read lock \xe2\x80\xa6CfChecks whether the address has the demanded alignment.00AlReleases an upgradable lock.CkObtain the width of the value before padding, given the \xe2\x80\xa6CiCreates a segment descriptor for a 64-bit ring 3 code \xe2\x80\xa6CjCreates a segment descriptor for a ring 3 data segment \xe2\x80\xa6DkProduces the split parts of <code>self</code>, using a dynamic check to \xe2\x80\xa60BnGet the number of nanoseconds in the duration.CdReturn new CpuId struct with custom reader function.FkAligns <code>base</code> upward and <code>acme</code> downward by <code>align_of::&lt;usize&gt;()</code>\xe2\x80\xa6CdWrite as many elements from the given slice into \xe2\x80\xa6AnReturns the Logical x2APIC ID.DkA copy of <code>core::hash::BuildHasherDefault</code>, but with a const \xe2\x80\xa6AcClear IA32_BNDCFGS.DbA <code>ByteSlice</code> which can be cloned without violating \xe2\x80\xa6CaError type for APIs with fallible heap allocationCkIndicates that the device has experienced an error from \xe2\x80\xa6EfDefault hash builder for the <code>S</code> type parameter of <code>HashMap</code> \xe2\x80\xa6BeA description of device capabilities.AdDevice Not AvailableClDiscard the containing packet and only notify the sender \xe2\x80\xa6AcExit qualification.CeA general handler function for an interrupt or an \xe2\x80\xa6AkGuest IA32_DEBUGCTL (full).AkGuest IA32_DEBUGCTL (high).CgSwap Target of BASE Address of GS (R/W) See Table 35-2.ClDefault Memory Types (R/W)  Sets the memory type for the \xe2\x80\xa6AkGuest IA32_RTIT_CTL (full).AkGuest IA32_RTIT_CTL (high).oSee Table 35-2.AkIf IA32_MTRR_CAP[SMRR]  = 1CkCapability Reporting Register of VM-exit Controls (R/O) \xe2\x80\xa6CkCapability Reporting Register of VMCS Field Enumeration \xe2\x80\xa6Cbx2APIC ID register (R/O) See x2APIC Specification.B`IDT-vectoring information field.CiInternet protocol control message subtype for type \xe2\x80\x9c\xe2\x80\xa6CnInternet protocol control message subtype for type \xe2\x80\x9cTime \xe2\x80\xa6CmInternet protocol control message subtype for the type \xe2\x80\x9c\xe2\x80\xa60DkA <code>lock_api::Mutex</code> based on <code>RawInterruptSpinMutex</code>.CdA read/write wrapper around an IPv6 Fragment Header.CiA read/write wrapper around an IPv6 Hop-by-Hop Header \xe2\x80\xa6CcL2/L3 Cache and TLB Information (LEAF=0x8000_0006).0AiGuest LDTR access rights.AcLoad IA32_RTIT_CTL.ClProcessor Hard Power-On Configuration (R/W) Enables and  \xe2\x80\xa6ClL3/FSB Common Control Register (R/W) Apply to Intel Xeon \xe2\x80\xa6BjSee Section 18.12.2, Performance Counters.000AcTrace End Address 0AcTrace End Address 1AcTrace End Address 3AcTrace End Address 4BeTrace Filter CR3 Match Register (R/W)CnLast Branch Record Stack TOS (R/W)  Contains an index (0-3 \xe2\x80\xa6CjPKG RAPL Parameters (R/W) See Section 14.7.3,  Package \xe2\x80\xa6CbUncore R-box 0 perfmon QLX unit Port 0 select MSR.CbUncore R-box 0 perfmon QLX unit Port 1 select MSR.CbUncore R-box 0 perfmon QLX unit Port 2 select MSR.CbUncore R-box 0 perfmon QLX unit Port 3 select MSR.CbUncore R-box 1 perfmon QLX unit Port 4 select MSR.CbUncore R-box 1 perfmon QLX unit Port 5 select MSR.CbUncore R-box 1 perfmon QLX unit Port 6 select MSR.CbUncore R-box 1 perfmon QLX unit Port 7 select MSR.BlUncore C-Box configuration information (R/O)AcNMI-window exiting.BfTwo indices provided were overlapping.AcPAUSE-loop exiting.BcDescribes an page fault error code.CgAn allocator that allocates memory in page granularity.BlA range of pages with inclusive upper bound.CmPCI-PCI Bridges have a Type-1 header, so the remainder of \xe2\x80\xa6BnIntel Processor Trace Information (LEAF=0x14).0AjUnparsed hardware address.DhAdditional methods for <code>RwLock</code>s which support atomically \xe2\x80\xa6DgAdditional methods for <code>RwLock</code>s which support recursive \xe2\x80\xa6BeData Read-Only, expand-down, accessedCmA recursive page table is a last level page table with an \xe2\x80\xa6CmAn owned, reference-counting guard that releases the read \xe2\x80\xa6AlActivate secondary controls.CjSlot identification capability, Cap ID = <code>0x04</code>ClYou should check the state of sockets again for received \xe2\x80\xa6CjA packet was processed, which might have caused socket \xe2\x80\xa6AcUnrestricted guest.AcUse TSC offsetting.BjUnrecognized Next Header type encountered.BeUnrecognized IPv6 option encountered.EfWhen returned from <code>Repr::parse</code>, this field will be <code>None</code>. \xe2\x80\xa6CjConverts the range of 2MiB pages to a range of 4KiB pages.DkChecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, \xe2\x80\xa600000000000DjChecked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>\xe2\x80\xa600000000000CcThe driver sets the Configuration Vector for MSI-X.C`Return the current congestion control algorithm.CiReturns the page that contains the given virtual address.CkReturns the frame that contains the given physical address.CdGet the number of days in the month of a given year.CeGet the next-lowest <code>Level</code> from this one.CkGet the next-lowest <code>LevelFilter</code> from this one.ClLet the CPU disable hardware interrupts when the handler \xe2\x80\xa6BeDowncasts the box to a concrete type.00DeCopies elements from <code>src</code> range to the end of the vector.BdVersion Information: Extended Family0AmExtended Processor Signature.0AnForcibly unlocks a write lock.CfConvert from a bits value, unsetting any unknown bits.000000000ClConvert from underlying bit representation, dropping any \xe2\x80\xa60001111111111111111100000000000000000000110111111111111DdAttempt to create a <code>Date</code> from the year, month, and day.DfAttempt to create a <code>Date</code> from the ISO year, week, and \xe2\x80\xa6CjReturns the page that starts at the given virtual address.CkReturns the frame that starts at the given virtual address.DkCreate a <code>UtcOffset</code> representing an offset by the number of \xe2\x80\xa6CjReturn two mutable references to the values associated \xe2\x80\xa6DbReturns the minimum <code>Span</code> containing this heap\xe2\x80\x99s \xe2\x80\xa6DjInserts a value computed from <code>f</code> into the set if the given \xe2\x80\xa6CkGet an address from the interface that could be used as \xe2\x80\xa6BbSignals a memory allocation error.AeAutomatic IBRS if setAgSupports AVX_NE_CONVERTAgSupports AVX_VNNI_INT16C`CPUID disable for non-privileged software if setC`Indicates support for the decode assists if set.0AdExtended APIC space.0CcIndicates support for processor feedback interface.0BdIBS fetch sampling supported if set.CnINVLPGB support for invalidating guest nested translations \xe2\x80\xa60BcAMD extensions to MMX instructions.0C`SMM_CTL MSR (C001_0116h) is not supported if setBgThe Page Flush MSR is available if set.0CnIf true, Indicates that IA32_RTIT_CTL.CR3Filter can be set \xe2\x80\xa60DiDetermine if the given <code>Ipv6Address</code> is the solicited node \xe2\x80\xa6B`Are fast system calls available.0BfIA32_TSC_ADJUST MSR is supported if 1.0BlSupports XSAVES/XRSTORS and IA32_XSS if set.0CfGet the next-highest <code>Level</code> from this one.ClGet the next-highest <code>LevelFilter</code> from this one.CnA named flag that doesn\xe2\x80\x99t correspond to any on the flags \xe2\x80\xa6DcYield a set of all named flags defined by <code>Self::FLAGS</code>.0CnReports the maximum MBA throttling value supported for the \xe2\x80\xa60BfGet the configured max lease duration.BiMaximum range (zero-based) of RMID of L3.0CjMinimum ASID value for an SEV enabled, SEV-ES disabled \xe2\x80\xa60CiThe hop-by-hop header containing a MLDv2 router alert \xe2\x80\xa6DkThe module path of the message, if it is a <code>&#39;static</code> string.DaSet <code>module_path</code> to a <code>&#39;static</code> stringBjNumber of Last Branch Record Stack entriesCmThis is the total number of request virtqueues exposed by \xe2\x80\xa6BoGet the one-indexed number of days from Monday.BoGet the one-indexed number of days from Sunday.ClNumber of general-purpose performance monitoring counter \xe2\x80\xa60CkEnsures a value is in the entry by inserting, if empty, \xe2\x80\xa600DkReturns the amount of padding we must insert after <code>self</code> to \xe2\x80\xa6BlPoll the future using the provided strategy.CnRemoves an item from the back of the deque and returns it, \xe2\x80\xa6BlReturn the preferred lifetime of the prefix.BbGet the packet reassembly timeout.CeDetermine how many bytes are remaining in the buffer.CmProvides shared access to the key and owned access to the \xe2\x80\xa6BjReplace the nanoseconds within the second.000DhThe Security Exception (<code>#SX</code>) signals security-sensitive \xe2\x80\xa6ChSet the probability of corrupting a packet, in percents.BcDescriptor Ring Change Event OffsetCeSet the flags of an existing page table level 2 entryCeSet the flags of an existing page table level 3 entryCeSet the flags of an existing page level 4 table entryCfA thread-unsafe version of <code>set_max_level</code>.BdSet the Neighbor Solicitation flags.AmSet the reachable time field.C`Sets the value of the <code>giaddr</code> field.AhSets the transaction ID.BeSet the valid lifetime of the prefix.DbGenerate a software interrupt by invoking the <code>int</code> \xe2\x80\xa6DkA fixed sorted priority linked list, similar to <code>BinaryHeap</code> \xe2\x80\xa6CkReturns the remaining spare capacity of the vector as a \xe2\x80\xa60DgReturns vector content as a slice of <code>T</code>, along with the \xe2\x80\xa6BiUnsafely splits <code>self</code> in two.0CnSplits the slice at the midpoint, possibly omitting bounds \xe2\x80\xa6ClThis module defines an unsafe marker trait, StableDeref, \xe2\x80\xa6CjGet the number of nanoseconds past the number of whole \xe2\x80\xa6BjReturns the pointer to <code>errno</code>.Bh<code>timebase-frequency</code> propertyDfConverts this address to an IPv4-compatible <code>IPv6</code> address.CgWrite a flags value as text, ignoring any unknown bits.CgAttempts to acquire an exclusive lock without blocking.EgAttempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> \xe2\x80\xa6DeAttempts to acquire this <code>RwLock</code> with shared read access.E`Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code>.CfChecks whether the address has the demanded alignment.CdReleases a shared lock using a fair unlock protocol.CeGet the number of whole microseconds in the duration.CeGet the number of whole milliseconds in the duration.BgRun a closure with disabled interrupts.0FkAligns <code>base</code> downward and <code>acme</code> upward by <code>align_of::&lt;usize&gt;()</code>\xe2\x80\xa6DiThe x87 Floating-Point Exception-Pending exception (<code>#MF</code>) \xe2\x80\xa6AiSupport for PKRU in XCR0.0BoThe error type of well-aligned, fallible casts.CeAn error returned when trying to use an invalid ASID.BhThe condition for a hardware breakpoint.AdClear IA32_RTIT_CTL.AdConceal VMX from PT.00AdCR0 guest/host mask.CnEnables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and \xe2\x80\xa6BkEnable XSAVE and Processor Extended States.AdCR4 guest/host mask.CaControl channel offloads reconfiguration support.BaIterator over caches (LEAF=0x04).0AcDenormals are zerosAcDivide-by-zero maskDcForce all x87 and MMX instructions to cause an <code>#NE</code> \xe2\x80\xa6AdEnable VM functions.AiEPTP-list address (full).AiEPTP-list address (high).AjThe Ethernet header lengthDaA future that runs using the [<code>event-listener</code>] crate.AkCode Execute/Read, accessedEcEnable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute \xe2\x80\xa6BbFragment reassembly time exceeded.CoThe error type returned by <code>Slab::get_disjoint_mut</code>.AoHypervisor Injection (AMD-only)CaBIOS Update Trigger Register (W)  See Table 35-2.ClFixed-Function-Counter Control Register (R/W)  See Table \xe2\x80\xa6ClVariable Range Base MTRR See Section 11.11.2.3, Variable \xe2\x80\xa6ClVariable Range Mask MTRR See Section 11.11.2.3, Variable \xe2\x80\xa6000000Amif IA32_MTRR_CAP[7:0] &gt;  8Amif IA32_MTRR_CAP[7:0] &gt;  92222222210CnCapability Reporting Register of CR0 Bits Fixed to 0 (R/O) \xe2\x80\xa6CnCapability Reporting Register of CR0 Bits Fixed to 1 (R/O) \xe2\x80\xa6CnCapability Reporting Register of CR4 Bits Fixed to 0 (R/O) \xe2\x80\xa6CnCapability Reporting Register of CR4 Bits Fixed to 1 (R/O) \xe2\x80\xa6AlIf CPUID.01H:ECX.[bit 5] = 10ClCapability Reporting Register of VM-entry Controls (R/O) \xe2\x80\xa6Bmx2APIC LVT Performance Monitor register (R/W)Cbx2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )CnEnable no-track opcode prefix for indirect branch tracking \xe2\x80\xa6CiEnable suppression of indirect branch tracking (SUPPRESS)DlA <code>lock_api::MutexGuard</code> based on <code>RawInterruptMutex</code>.0ClWrapper type for the interrupt stack frame pushed by the \xe2\x80\xa6CmThe page table entry for the given virtual address points \xe2\x80\xa6ChThe page table entry for the given page points to an \xe2\x80\xa60ChA builder struct to construct the parameters for the \xe2\x80\xa6AlA iterator for IPv6 options.AdLoad debug controls.CjEnables monitoring of the coprocessor, typical for x87 \xe2\x80\xa6ClDRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL \xe2\x80\xa6BjUncore M-box 0 perfmon MIC THR select MSR.BjUncore M-box 1 perfmon MIC THR select MSR.CcFixed-Function Performance Counter Register 0 (R/W)CcFixed-Function Performance Counter Register 1 (R/W)CcFixed-Function Performance Counter Register 2 (R/W)AnPackage RAPL Perf Status (R/O)CkPKG RAPL Power Limit Control (R/W)  See Section 14.7.3, \xe2\x80\xa6CgPP0 Performance Throttling Status (R/O) See Section \xe2\x80\xa6CkPP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, \xe2\x80\xa6CkPP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, \xe2\x80\xa6CgUnit Multipliers used in RAPL Interfaces (R/O)  See \xe2\x80\xa6BfUncore U-box perfmon event select MSR.BkUncore W-box perfmon local box control MSR.CiA RAII guard returned by <code>SpinlockGuard::map</code>.CdMemory Bandwidth Allocation Enumeration Sub-leaf \xe2\x80\xa60CfEnables the use of 4MB physical frames; ignored if \xe2\x80\xa6BlEnables protection keys for user-mode pages.DgAn upper level page table entry has the <code>HUGE_PAGE</code> flag \xe2\x80\xa6000CfAn RAII implementation of a \xe2\x80\x9cscoped lock\xe2\x80\x9d of a \xe2\x80\xa6CmAn owned, reference-counted guard that releases the write \xe2\x80\xa6DmA <code>lock_api::RwLockReadGuard</code> based on <code>RawRwSpinLock</code>.DmA <code>lock_api::RwLockReadGuard</code> based on <code>RawRwSpinlock</code>.AdSave debug controls.AiSource Link-layer AddressCjA static async <code>LocalExecutor</code> created from \xe2\x80\xa6CgA lazy iterator producing elements in the symmetric \xe2\x80\xa6AfTSC multiplier (full).AfTSC multiplier (high).AiTarget Link-layer AddressDdDetails of the allocation that caused a <code>TryReserveError</code>oGenerates a \xe2\x80\xa6AlVirtual-APIC address (full).AlVirtual-APIC address (high).CmAttempts to allocate a page range outside of a given page \xe2\x80\xa6DhCreates a new <code>Duration</code> from the specified number of seconds0C`Remove all empty P1-P3 tables in a certain rangeBgSystem Coherency Line Size (Bits 11-00)0DeReturns a mutable reference to the wrapped <code>T</code> without \xe2\x80\xa6BfDevice (host) features word selection.BiActivated (guest) features word selectionChEnqueue the given number of unallocated buffer elements.EjImplement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, \xe2\x80\xa6DgImplement <code>fill_bytes</code> by reading chunks from the output \xe2\x80\xa60CnConvert from underlying bit representation, preserving all \xe2\x80\xa6000000000000000000000000DkInstantiates a <code>CString</code> copying from the giving byte slice, \xe2\x80\xa6DkCreate an <code>OffsetDateTime</code> from the provided Unix timestamp. \xe2\x80\xa6DcCreate a <code>UtcDateTime</code> from the provided Unix timestamp.DiConvert UTF-8 bytes into a <code>String</code>, without checking that \xe2\x80\xa60CnReturns information provided by the hypervisor, if running \xe2\x80\xa60CeContains SoC vendor specific information (LEAF=0x17).0oAVX512VPOPCNTDQ0DhIf returns <code>true</code> the device implements the pointer for a \xe2\x80\xa6BiIs there support for execute disable bit.0BmSupport for MWAITX and MONITORX instructions.0AoSupports Intel Processor Trace.0BgSupports Enhanced REP MOVSB/STOSB if 1.0BnSMM paging configuration lock supported if setBmIndicates support for VMCB clean bits if set.0BmReturns the initial mapped area, if it existsCgThis value points to the instruction that should be \xe2\x80\xa6ClCoverts <code>self</code> into a <code>&amp;mut [u8]</code>.CnReturns true when the compacted format of an XSAVE area is \xe2\x80\xa60DbCheck if this <code>RwLock</code> is currently exclusively locked.00CiCreates a segment descriptor for a 64-bit kernel code \xe2\x80\xa6CjCreates a segment descriptor for a kernel data segment \xe2\x80\xa6AcLinear Address Bits0ClMaximum number of addressable IDs for logical processors \xe2\x80\xa6000C`Returns an iterator over the memory reservationsBcMultiboot boot information address.ClConstructs a new boxed slice with uninitialized contents \xe2\x80\xa60AcNodes per processor0BoReturn the number of Multicast Address Records.DcCalculates the <code>n</code>th occurrence of a weekday that is \xe2\x80\xa60CjReturn the current number of bytes in the payload ring \xe2\x80\xa6CaProcess one incoming packet queued in the device.CkRemoves an item from the front of the deque and returns \xe2\x80\xa6CeAppends an <code>item</code> to the back of the dequeBhRegister a waker for receive operations.BeRegister a waker for send operations.BkReplace the microseconds within the second.000BkReplace the milliseconds within the second.000CnObtain the number of seconds past the minute the offset is \xe2\x80\xa6DfAn segment-not-present exception (<code>#NP</code>) occurs when an \xe2\x80\xa6CkSet the interval for packet rate limiting, in milliseconds.BiDescriptor Ring Change Event Wrap CounterDbSet a general handler in an <code>InterruptDescriptorTable</code>.BiSet the Source/Target Link-layer Address.BgSet the maximum packet size, in octets.C`Set the MTU field (for packet too big messages).CkSet the required privilege level (DPL) for invoking the \xe2\x80\xa6AnSet the router lifetime field.CnCreates a new descriptor with selector and offset (for IDT \xe2\x80\xa60B`Enable or disable TCP Timestamp.CdDetermines if the <code>0</code> flag was specified.DjThe SIMD Floating-Point Exception (<code>#XF</code>) is used to handle \xe2\x80\xa6DbAn stack segment exception (<code>#SS</code>) can occur in the \xe2\x80\xa6CkGet the number of microseconds past the number of whole \xe2\x80\xa6CkGet the number of milliseconds past the number of whole \xe2\x80\xa6CnNumber of C0 sub C-states supported using MWAIT (Bits 03 - \xe2\x80\xa60CnNumber of C1 sub C-states supported using MWAIT (Bits 07 - \xe2\x80\xa60CnNumber of C2 sub C-states supported using MWAIT (Bits 11 - \xe2\x80\xa60CnNumber of C3 sub C-states supported using MWAIT (Bits 15 - \xe2\x80\xa60CnNumber of C4 sub C-states supported using MWAIT (Bits 19 - \xe2\x80\xa60CnNumber of C5 sub C-states supported using MWAIT (Bits 23 - \xe2\x80\xa60CnNumber of C6 sub C-states supported using MWAIT (Bits 27 - \xe2\x80\xa60CnNumber of C7 sub C-states supported using MWAIT (Bits 31 - \xe2\x80\xa60CdSleep a clock for a specified number of nanoseconds.ChAttempts to acquire a shared lock until a timeout is \xe2\x80\xa6ChAttempts to acquire an upgradable lock without blocking.DjAttempts to interpret the prefix of the given <code>source</code> as a \xe2\x80\xa6DjAttempts to interpret the suffix of the given <code>source</code> as a \xe2\x80\xa6DfAttempts to read the given <code>source</code> as a <code>Self</code>.21CkAttempts to acquire a read lock with the possibility to \xe2\x80\xa6DeAttempts to acquire this <code>RwLock</code> with upgradable read \xe2\x80\xa6CkAcquires an owned, reference-counted read lock with the \xe2\x80\xa6CfChecks whether the address has the demanded alignment.CeTranslate a virtual memory address to a physical one.BcDescriptor Ring Change Event OffsetCgIndicates whether the task gets woken up while running.CnWrite a new P4 table address into the CR3 register without \xe2\x80\xa6ClSet by hardware if last arithmetic operation generated a \xe2\x80\xa6ClA RAII guard that frees the exponential backoff spinlock \xe2\x80\xa6CjA description of checksum behavior for every supported \xe2\x80\xa6ClEnables I/O breakpoint capability and enforces treatment \xe2\x80\xa6AfDebug Address RegisterAiIPI Destination ShorthandCgA handler function that must not return, e.g. for a \xe2\x80\xa6BmWhat kidn of extended register state this is.0BgInformation about topology (LEAF=0x0B).0ClControl Features in IA-32 Processor (R/W) See Table 35-2 \xe2\x80\xa6BoSMM Monitor Configuration (R/W) See Table 35-2.CgThermal Interrupt Control (R/W) See Section 14.5.2, \xe2\x80\xa6Bjx2APIC Divide Configuration register (R/W)Ckx2APIC LVT Corrected Machine Check Interrupt register (R/W)BbIf ( CPUID.01H:ECX.[bit 21]  = 1 )CiInternet protocol control message subtype for type \xe2\x80\x9c\xe2\x80\xa60BbIEEE 802.15.4 packets without FCS.AeInstruction executionCmx86 Exception description (see also Intel Vol. 3a Chapter \xe2\x80\xa6DmA <code>lock_api::Mutex</code> based on <code>RawInterruptTicketMutex</code>.ChTrait to define functions that build an architecture \xe2\x80\xa6BmUncore B-box 0 perfmon local box control MSR.BmUncore B-box 1 perfmon local box control MSR.BmUncore C-box 0 perfmon local box control MSR.BmUncore C-box 1 perfmon local box control MSR.BmUncore C-box 2 perfmon local box control MSR.BmUncore C-box 3 perfmon local box control MSR.BmUncore C-box 4 perfmon local box control MSR.BmUncore C-box 5 perfmon local box control MSR.BmUncore C-box 6 perfmon local box control MSR.BmUncore C-box 7 perfmon local box control MSR.BmUncore C-box 8 perfmon local box control MSR.BmUncore C-box 9 perfmon local box control MSR.ChDRAM Performance Throttling Status (R/O) See Section \xe2\x80\xa6ClDRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, \xe2\x80\xa6CmProcessor Frequency Configuration The bit field layout of \xe2\x80\xa6CkProcessor Hard Power-On Configuration (R/W) Enables and \xe2\x80\xa6ClProcessor Soft Power-On Configuration (R/W)  Enables and \xe2\x80\xa6CgGBUSQ Event Control and Counter  Register (R/W) See \xe2\x80\xa6CmGBUSQ Event Control/Counter Register (R/W) Apply to Intel \xe2\x80\xa6ChGSNPQ Event Control and Counter  Register (R/W)  See \xe2\x80\xa6CmGSNPQ Event Control/Counter Register (R/W) Apply to Intel \xe2\x80\xa6CmFSB Event Control and Counter Register (R/W)  See Section \xe2\x80\xa6CkFSB Event Control/Counter Register (R/W) Apply to Intel \xe2\x80\xa600AeTrace Start Address 0AeTrace Start Address 1AeTrace Start Address 3AeTrace Start Address 4AmTracing Status Register (R/W)BmUncore M-box 0 perfmon local box control MSR.BmUncore M-box 1 perfmon local box control MSR.A`See Table 19-26.CfSee Section 18.4.2, Global Counter Control Facilities.CkPackage C2 Residency Note: C-state values are processor \xe2\x80\xa6ClNote: C-state values are processor specific C-state code \xe2\x80\xa6CkPackage C4 Residency Note: C-state values are processor \xe2\x80\xa6CkPackage C6 Residency Note: C-state values are processor \xe2\x80\xa622BmUncore R-box 0 perfmon local box control MSR.BmUncore R-box 1 perfmon local box control MSR.BmUncore S-box 0 perfmon local box control MSR.BmUncore S-box 1 perfmon local box control MSR.BfUncore Arb unit, performance counter 0BfUncore Arb unit, performance counter 1BfUncore W-box perfmon event select MSR.000BbUncore W-box perfmon fixed counterCaEncrypted Memory Capabilities (LEAF=0x8000_001F).0CkA high level representation of an MLDv2 Listener Report \xe2\x80\xa6AfNon-Maskable InterruptDaCreate [<code>std::time::Duration</code>]s from numeric literals.CgIf this flag is set, the page fault was caused by a \xe2\x80\xa6CjA page fault handler function that pushes a page fault \xe2\x80\xa6C`Processor name (LEAF=0x8000_0002..=0x8000_0004).0DhAdditional methods for <code>RwLock</code>s which support upgradable \xe2\x80\xa6DnA <code>lock_api::RwLockWriteGuard</code> based on <code>RawRwSpinLock</code>.DnA <code>lock_api::RwLockWriteGuard</code> based on <code>RawRwSpinlock</code>.A`The linked list.AnActivate VMX-preemption timer.AeVM-instruction error.CcDivide Configuration Register (DCR; for Timer). \xe2\x80\xa6DgA bound-range exception (<code>#BR</code>) exception can occur as a \xe2\x80\xa6B`Length of the capacity bit mask.000AlL1 data cache associativity.0AlL1 data cache lines per tag.0CeDefines the hermit entry version in the note section.DkA device not available exception (<code>#NM</code>) occurs under any of \xe2\x80\xa6BoDowngrades an upgradable lock to a shared lock.CkEnumeration of Monitor-Mwait extensions (beyond EAX and \xe2\x80\xa60CdRetrieve more elaborate information about caches \xe2\x80\xa60C`Retrieve serial number of processor (LEAF=0x03).0CnComplex Cache Indexing (Bit 2) False: Direct mapped cache. \xe2\x80\xa60CmThe processor supports performance-energy bias preference \xe2\x80\xa60CmHWP Capabilities. Highest Performance change is supported \xe2\x80\xa60ClHWP Notification. IA32_HWP_INTERRUPT MSR is supported if \xe2\x80\xa60CnDirty victim writes to all types of memory is supported if \xe2\x80\xa6CmIf true, Generated packets which contain IP payloads have \xe2\x80\xa60BePrefetch control MSR supported if setCaDisallowing IBS use by the host supported if set.0CgSYSENTER and SYSEXIT Instructions. The SYSENTER and \xe2\x80\xa60AkSupport for PT in IA32_XSS.0BcL1 instruction cache associativity.0BcL1 instruction cache lines per tag.0BhIs this address aligned to a 4 KiB page?00000AkFully associative structureAgFully Associative cache10BhIs this address aligned to a 1 GiB page?00CcSelf Initializing cache level (does not need SW \xe2\x80\xa60CmUser/supervisor; if 0, user-mode accesses are not allowed \xe2\x80\xa6000CnUser/supervisor; user-mode accesses are not allowed to the \xe2\x80\xa600CnLargest monitor-line size in bytes (default is processor\xe2\x80\x99\xe2\x80\xa60DjCreates a new <code>MutexGuard</code> without checking if the mutex is \xe2\x80\xa6DjCreates a new <code>ReentrantMutexGuard</code> without checking if the \xe2\x80\xa6CdNumber of encrypted guests supported simultaneouslys0ClThe size of the Microcode patch in 16-byte multiples. If \xe2\x80\xa6CfAppends an <code>item</code> to the front of the dequeCmAppends an element if there is sufficient spare capacity, \xe2\x80\xa6CkReturn the selective acknowledgement ranges, if any. If \xe2\x80\xa6BbDescriptor Ring Change Event FlagsCnOffset within the ring where the next available ring entry \xe2\x80\xa6AiSet the outgoing options.AbReserved, set to 0BiReturn the source hardware address field.BiReturn the source protocol address field.BoNumber of supported interrupts by this IO APIC.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa60ClVisits the values representing the symmetric difference, \xe2\x80\xa6011111111DkReturns the symmetric difference between the flags in <code>self</code> \xe2\x80\xa6000222222222222222220000000000000000000022222222222222BiReturn the target hardware address field.BiReturn the target protocol address field.CmConstructs a new boxed slice with uninitialized contents. \xe2\x80\xa6CmConstructs a new boxed slice with uninitialized contents, \xe2\x80\xa6EhAttempts to read a <code>Self</code> from the prefix of the given <code>source</code>\xe2\x80\xa6EhAttempts to read a <code>Self</code> from the suffix of the given <code>source</code>\xe2\x80\xa6DkUnchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>\xe2\x80\xa600000000000BkUnchecked Euclidean remainder. Computes \xe2\x80\xa600000000000BfGet the Unix timestamp in nanoseconds.0ClUpdates the P4 table address in the CR3 register without \xe2\x80\xa6BiDescriptor Ring Change Event Wrap CounterAnAcknowledge interrupt on exit.AkAPIC-access address (full).AkAPIC-access address (high).BeDirect cache access info (LEAF=0x09).0AfEnable XSAVES/XRSTORS.AmCode Execute/Read, conformingCjGives information about the current level in the topology.0CkAn additional frame was needed for the mapping process, \xe2\x80\xa6BbEnables debug register protection.CnTrait that defines the architecture specific functions for \xe2\x80\xa6BlA 64-bit mode global descriptor table (GDT).BkClock Modulation (R/W)  See Table 35-2. \xe2\x80\xa6Afif CPUID.6H:ECX[3] = 1CjFixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.CkFixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .011111CnSee Table 35-2. See Section 18.4.2, Global Counter Control \xe2\x80\xa6f06_0FHCmIf ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit \xe2\x80\xa6Bcx2APIC Current Count register (R/O)BbIf ( CPUID.01H:ECX.[bit 21]  = 1 )00Bix2APIC LVT Timer Interrupt register (R/W)AoAddress of I/O bitmap A (full).AoAddress of I/O bitmap A (high).AoAddress of I/O bitmap B (full).AoAddress of I/O bitmap B (high).DnA <code>lock_api::Mutex</code> based on <code>RawInterruptOneShotMutex</code>.CiAction required when parsing the given IPv6 Extension \xe2\x80\xa6CnA high-level representation of an IPv6 Router Alert Header \xe2\x80\xa6BhUncore B-box 0 perfmon event select MSR.000BhUncore B-box 1 perfmon event select MSR.00BhUncore B-box 1vperfmon event select MSR.AnAddress of MSR bitmaps (full).AnAddress of MSR bitmaps (high).BhUncore C-box 0 perfmon event select MSR.00000BhUncore C-box 1 perfmon event select MSR.00000BhUncore C-box 2 perfmon event select MSR.00000BhUncore C-box 3 perfmon event select MSR.00000BhUncore C-box 4 perfmon event select MSR.00000BhUncore C-box 5 perfmon event select MSR.00000BhUncore C-box 6 perfmon event select MSR.00000BhUncore C-box 7 perfmon event select MSR.00000BhUncore C-box 8 perfmon event select MSR.00000BhUncore C-box 9 perfmon event select MSR.00000BmConfigTDP Level 1 ratio and power level (R/O)BmConfigTDP Level 2 ratio and power level (R/O)ClNote: C-state values are processor specific C-state code \xe2\x80\xa60000CbUncore M-box 0 perfmon local box address mask MSR.BhUncore M-box 0 perfmon event select MSR.00000CnUncore M-box 0 perfmon local box address match/mask config \xe2\x80\xa6CbUncore M-box 0 perfmon time stamp unit select MSR.CbUncore M-box 1 perfmon local box address mask MSR.BhUncore M-box 1 perfmon event select MSR.00000CnUncore M-box 1 perfmon local box address match/mask config \xe2\x80\xa6CbUncore M-box 1 perfmon time stamp unit select MSR.CfRO. This applies to processors that do not support \xe2\x80\xa6CfSee Section 18.4.2, Global Counter Control Facilities.::CmPKG Energy Status (R/O)  See Section 14.7.3, Package RAPL \xe2\x80\xa6CmPP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL \xe2\x80\xa6CmPP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL \xe2\x80\xa6BhUncore R-box 0 perfmon event select MSR.0000000CeUncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.CeUncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.BhUncore R-box 1 perfmon event select MSR.0CeUncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.CeUncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.BhUncore S-box 0 perfmon event select MSR.000BhUncore S-box 1 perfmon event select MSR.000CmMaximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.\xe2\x80\xa6ChSee Section 18.7.2.1, Uncore Performance Monitoring  \xe2\x80\xa6BjUncore W-box perfmon local box status MSR.DjAn RAII read lock guard returned by <code>RwLockReadGuard::map</code>, \xe2\x80\xa6AgEnables protected mode.CnProvides a virtual address mapping for physical page table \xe2\x80\xa6CbProcessor Topology Information (LEAF=0x8000_001E).0BaToward zero (positive + negative)BlAn interrupt-safe <code>RawSpinMutex</code>.DhAdditional methods for <code>RwLock</code>s which support upgradable \xe2\x80\xa6BfEnables SMX instructions (Intel Only).AjThe solicited node prefix.EhBase struct for <code>SortedLinkedList</code> and <code>SortedLinkedListView</code>, \xe2\x80\xa6AgVM-exit MSR-load count.DiImplementation of <code>HistoryBufStorage</code> that stores the data \xe2\x80\xa6BaAdd a segment, then remove_front.CnReturn address of nearest 4 KiB page (higher or equal than \xe2\x80\xa600000CnReturn address of nearest 1 GiB page (higher or equal than \xe2\x80\xa600AhClear the reserved bits.DfThis method will return <code>true</code> if any unknown bits are set.0CeThe driver uses this to select which feature bits \xe2\x80\xa60BdData TLB associativity for 4K pages.BgL2 Data TLB associativity for 4K pages.10AnLocal exact breakpoint enable.CkEnables debug-register protection, which causes a debug \xe2\x80\xa6DfConstructs a <code>Ref</code> from the given bytes with DST length \xe2\x80\xa6BnTLB 1-GiB Pages Information (LEAF=0x8000_0019)0EdWhen host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check \xe2\x80\xa60BiHardware Coordination Feedback Capability0BfHWP PECI override is supported if set.0CaInstruction Retired Counter MSR available if set.0BkL3 Miss Filtering for IBS supported if set.C`Processor ignores nested data breakpoints if setBbOp counting mode supported if set.CmSupport of Power Event Trace. Writes can set IA32_RTIT_CTL\xe2\x80\xa60AlSupport for HDC in IA32_XSS.0oInitial APIC ID0CjThe full 64-bit canonical forms of the interrupt stack \xe2\x80\xa6BhIs this address aligned to a 4 MiB page?00BhIs this address aligned to a 2 MiB page?00AiPage-level write-through.0CnPage-level write-through; indirectly determines the memory \xe2\x80\xa60111DfReturns <code>true</code> if the address is a unicast address with \xe2\x80\xa6BkInstruction TLB associativity for 4K pages.BnL2 Instruction TLB associativity for 4K pages.10AfL2 Associativity field0AgL2 cache lines per tag.01100CmThe segment limit is interpreted in 4-KByte units if this \xe2\x80\xa6CkAcquires a shared lock without deadlocking in case of a \xe2\x80\xa6ClMaximum number of addressable IDs for processor cores in \xe2\x80\xa60AjMaximum transmission unit.B`Multiplier for queue_notify_off.0DiWill be <code>true</code> whenever the device detects a parity error, \xe2\x80\xa6AePhysical Address Bits0CiThe full 64-bit canonical forms of the stack pointers \xe2\x80\xa6DcWill return <code>true</code>, by a master device, whenever its \xe2\x80\xa60B`Set the current hop limit field.DiWrap Counter. With <code>VIRTIO_F_RING_PACKED</code> this is the wrap \xe2\x80\xa6CgSet the pointer field (for parameter problem messages).ClSmallest monitor-line size in bytes (default is processor\xe2\x80\xa60CbRemoves an element from the vector and returns it.ChAttempts to acquire a shared lock until a timeout is \xe2\x80\xa6ClTries to atomically upgrade an upgradable read lock into \xe2\x80\xa6DhSimilar to <code>Descriptor::tss_segment</code>, but unsafe since it \xe2\x80\xa6ChReleases an exclusive lock using a fair unlock protocol.BbDescriptor Ring Change Event FlagsCnOffset within the ring where the next available ring entry \xe2\x80\xa6AbReserved, set to 0B`Support for AVX 256-bit in XCR0.0B`Support for SSE 128-bit in XCR0.0BmIf set, disables ability to take time-stamps.CjIf set, enables support for the virtual interrupt flag \xe2\x80\xa6CnA struct describing a pointer to a descriptor table (GDT / \xe2\x80\xa60AkEnable user wait and pause.ClA handler function for an exception that pushes an error \xe2\x80\xa6CjFixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.00CfSee Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.CnSee Table 35-2. See Section 18.4.2, Global Counter Control \xe2\x80\xa6ClCapability Reporting Register of EPT and VPID (R/O)  See \xe2\x80\xa6ClCapability Reporting Register of Pin-based VM-execution  \xe2\x80\xa6Bcx2APIC Initial Count register (R/W)AiIDT-vectoring error code.AmGuest interruptibility state.AfInvalid operation maskBlUncore B-box 0 perfmon local box status MSR.BlUncore B-box 1 perfmon local box status MSR.BlUncore C-box 0 perfmon local box status MSR.BlUncore C-box 1 perfmon local box status MSR.BlUncore C-box 2 perfmon local box status MSR.BlUncore C-box 3 perfmon local box status MSR.BlUncore C-box 4 perfmon local box status MSR.BlUncore C-box 5 perfmon local box status MSR.BlUncore C-box 6 perfmon local box status MSR.BlUncore C-box 7 perfmon local box status MSR.BlUncore C-box 8 perfmon local box status MSR.BlUncore C-box 9 perfmon local box status MSR.AgConfigTDP Control (R/W)AgNominal TDP Ratio (R/O)CkDRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL \xe2\x80\xa6CnLast Branch Record 0 (R/W)  One of 16 pairs of last branch \xe2\x80\xa6CgLast Branch Record 1 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 2 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 3 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 4 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 5 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 6 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 7 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 8 To IP (R/W) See description of \xe2\x80\xa6CgLast Branch Record 9 To IP (R/W) See description of \xe2\x80\xa6CcUncore M-box 0 perfmon local box address match MSR.BlUncore M-box 0 perfmon local box status MSR.CcUncore M-box 1 perfmon local box address match MSR.BlUncore M-box 1 perfmon local box status MSR.BlUncore R-box 0 perfmon local box status MSR.BlUncore R-box 1 perfmon local box status MSR.BhUncore R-box 1 perfmon event select MSR.00000CfUncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.CfUncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.CfUncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.CfUncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.CfUncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.CfUncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.BlUncore S-box 0 perfmon local box status MSR.BlUncore S-box 1 perfmon local box status MSR.CbSee Section 18.7.2.2, Uncore Performance Event \xe2\x80\xa60000000BeUncore C-Box 0, performance counter 0BeUncore C-Box 0, performance counter 1BeUncore C-Box 1, performance counter 0BeUncore C-Box 1, performance counter 1BeUncore C-Box 2, performance counter 0BeUncore C-Box 2, performance counter 1BfUncore C-Box 3, performance counter 0.BfUncore C-Box 3, performance counter 1.AdUncore fixed counterBhUncore U-box perfmon global control MSR.DjAn RAII write lock guard returned by <code>RwLockWriteGuard::map</code>\xe2\x80\xa6CjSpecifies how many MSI interrupts one device can have. \xe2\x80\xa6E`A <code>lock_api::RwLockReadGuard</code> based on <code>RawOneShotRwLock</code>.0CkAn overaligned volatile pointer for fields that require \xe2\x80\xa6DiImplementation of <code>HistoryBufStorage</code> that stores the data \xe2\x80\xa6AoGuest pending debug exceptions.B`Pin-based VM-execution controls.BlProcessor Frequency Information (LEAF=0x16).0DfEnables the <code>syscall</code> and <code>sysret</code> instructions.AhVM-entry MSR-load count.AkVM-exit instruction length.AhVM-exit MSR-store count.BoInitial Count register (for Timer). Read/write.CmAdd a default ipv4 gateway (ie. \xe2\x80\x9cip route add 0.0.0.0/0 \xe2\x80\xa6CkAdd a default ipv6 gateway (ie. \xe2\x80\x9cip -6 route add ::/0 \xe2\x80\xa6CnReturn address of nearest 4 MiB page (higher or equal than \xe2\x80\xa600CnReturn address of nearest 2 MiB page (higher or equal than \xe2\x80\xa600CmProvides shared access to the key and owned access to the \xe2\x80\xa6CjCLFLUSH line size (Value \xe2\x88\x97 8 = cache line size in bytes)0AoGlobal exact breakpoint enable.CmOnly flush the final translation and not the cached upper \xe2\x80\xa6CjForcibly unlocks a read lock using a fair unlock protocol.DiConstructs a <code>Ref</code> from the prefix of the given bytes with \xe2\x80\xa6DiConstructs a <code>Ref</code> from the suffix of the given bytes with \xe2\x80\xa6DjAttempts to get mutable references to <code>N</code> values in the map \xe2\x80\xa600CiInformation about how monitor/mwait works on this CPU \xe2\x80\xa60ChQuery information about thermal and power management \xe2\x80\xa60BhIBS execution sampling supported if set.BmFXSAVE and FXRSTOR instruction optimizations.0ClFreezing Core Performance Counters and LBR Stack on Core \xe2\x80\xa6BiIndicates support for LBR Virtualization.0C`Does device supports masking individual vectors?DjThe Hypervisor Injection Exception (<code>#HV</code>) is injected by a \xe2\x80\xa6ChThe maximum supported enclave size in 64-bit mode is \xe2\x80\xa60CiAn non maskable interrupt exception (NMI) occurs as a \xe2\x80\xa6CkNumber of logical processors at the current hierarchy levelCmThe parameter request list informs the server about which \xe2\x80\xa6CjReports a static efficiency ranking between cores of a \xe2\x80\xa6DfReturns <code>true</code> if all internal feature requirements are \xe2\x80\xa60DhCreates a new <code>Duration</code> from the specified number of seconds0BhSet an algorithm for congestion control.AkSet the max lease duration.CkSet the memory address that will be written to when the \xe2\x80\xa6BiSet the preferred lifetime of the prefix.BbSet the packet reassembly timeout.ClWill be <code>true</code> whenever the device asserts SERR#.DgWill return <code>true</code> whenever a target device terminates a \xe2\x80\xa6BiUnsafely splits <code>self</code> in two.0CbSet the current task state to <code>blocked</code>ClAttempts to acquire an exclusive lock until a timeout is \xe2\x80\xa6DhAttempts to acquire this <code>RwLock</code> with shared read access \xe2\x80\xa6CiReleases an upgradable lock using a fair unlock protocol.DiWrap Counter. With <code>VIRTIO_F_RING_PACKED</code> this is the wrap \xe2\x80\xa6D`Accelerated graphics port capability, Cap ID = <code>0x02</code>DhBridge subsystem vendor/device ID capability, Cap ID = <code>0x0D</code>CjEnable shared (PDE or PTE) address translation between \xe2\x80\xa6BbDeactivate dual-monitor treatment.AnExecutive-VMCS pointer (full).AnExecutive-VMCS pointer (high).BiExtended CPU Topology (LEAF=0x8000_0026).AhHost address-space size.CkSee Section 17.13, Time-Stamp Counter,  and see Table 35-2.CmCapability Reporting Register of Primary Processor-based  \xe2\x80\xa6CjCapability Reporting Register of VM-exit Flex Controls \xe2\x80\xa6Cbx2APIC LVT Thermal Sensor Interrupt register (R/W)BgIntel PT uses guest physical addresses.E`A <code>lock_api::MutexGuard</code> based on <code>RawInterruptSpinMutex</code>.BnEnables the machine-check exception mechanism.ChLast Branch Record 10 To IP (R/W) See description of \xe2\x80\xa6ChLast Branch Record 11 To IP (R/W) See description of \xe2\x80\xa6ChLast Branch Record 12 To IP (R/W) See description of \xe2\x80\xa6ChLast Branch Record 13 To IP (R/W) See description of \xe2\x80\xa6ChLast Branch Record 14 To IP (R/W) See description of \xe2\x80\xa6ChLast Branch Record 15 To IP (R/W) See description of \xe2\x80\xa6BmFixed-Function-Counter Control Register (R/W)CiPower Management IO Redirection in C-state (R/W)  See \xe2\x80\xa6CeEnhanced SMM Feature Control (SMM-RW) Reports SMM \xe2\x80\xa6BkUncore Arb unit, counter 0 event select MSRBkUncore Arb unit, counter 1 event select MSRBbUncore fixed counter control (R/W)CdUncore W-box perfmon local box overflow control MSR.EaA <code>lock_api::RwLockWriteGuard</code> based on <code>RawOneShotRwLock</code>.0CnUse a writethrough cache policy for the table (otherwise a \xe2\x80\xa6DkAn error which can be returned when parsing a <code>HermitVersion</code>\xe2\x80\xa6CkAn range of physical memory frames, inclusive the upper \xe2\x80\xa6CoResult returned by <code>Interface::poll_ingress_single</code>.CkPlatform Quality of Service Information (LEAF=0x8000_0020).BnAn interrupt-safe <code>RawTicketMutex</code>.DgAdditional methods for <code>RwLock</code>s which support recursive \xe2\x80\xa6BfData Read/Write, expand-down, accessedCjParameters for a <code>SerialWriteBuffer</code> hypercall.BcIterator for SoC vendor attributes.0CbTrait defining how data for a container is stored.CmSystem-Segment and Gate-Descriptor Types 32-bit mode. See \xe2\x80\xa6ClSystem-Segment and Gate-Descriptor Types 64-bit mode See \xe2\x80\xa6CmThe version of the Uhyve interface. Note: This is not the \xe2\x80\xa6AlVM-entry instruction length.B`VM-exit instruction information.AmVMREAD-bitmap address (full).AmVMREAD-bitmap address (high).AjXSS-exiting bitmap (full).AjXSS-exiting bitmap (high).CmReturn address of nearest 4 KiB page (lower or equal than \xe2\x80\xa600000CmReturn address of nearest 1 GiB page (lower or equal than \xe2\x80\xa600DjReturns the hardware address of the client (called <code>chaddr</code> \xe2\x80\xa6DfThis field is also known as <code>chaddr</code> in the RFC and for \xe2\x80\xa6CgA #CP exception is generated when shadow stacks are \xe2\x80\xa6BkDowngrades into an upgradable reader guard.0CcDowngrades an exclusive lock to an upgradable lock.CnAtomically downgrades a write lock into an upgradable read \xe2\x80\xa6DiCall <code>f</code> with a packet from the buffer large enough to fit \xe2\x80\xa6DhA strategy for using the [<code>event-listener</code>] crate in both \xe2\x80\xa6CmNumber of fixed-function performance counters (if Version \xe2\x80\xa60CkForcibly unlocks a write lock using a fair unlock protocol.CnReturns the 4KiB memory page with the specified page table \xe2\x80\xa6ClInformation for saving/restoring extended register state \xe2\x80\xa60CgQuality of service enforcement information (LEAF=0x10).0CfQuality of service monitoring information (LEAF=0x0F).0CkGet an address from the interface that could be used as \xe2\x80\xa60CaBreakpoint Addressing masking extended to bit 31.0BeAlternate Injection supported if set.0CmSet to 1 if all components at the current hierarchy level \xe2\x80\xa6AmSupports AVX512_VP2INTERSECT.1ChHWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is \xe2\x80\xa60CiMisaligned SSE mode. See \xe2\x80\x9cMisaligned Access Support \xe2\x80\xa60AlTopology extensions support.0BjThe REQUEST timeout doubles every 2 tries.ClInsert a key-value pair into the map without checking if \xe2\x80\xa6ChInsert a value the set without checking if the value \xe2\x80\xa6DjConsumes the <code>Box</code>, returning a wrapped raw pointer and the \xe2\x80\xa6CeThe virtual address range of the loaded kernel image.ClReturns the local breakpoint enable flag of the provided \xe2\x80\xa6BhCreates a new mapping in the page table.CnNumber of simultaneously available host encryption key IDs \xe2\x80\xa6BnReturn how many interrupts the device is usingC`Get the zero-indexed number of days from Monday.C`Get the zero-indexed number of days from Sunday.AkMaximum Frequency (in MHz).0Al<strong>DEPRECATED</strong>.0CmReturns whether the selective acknowledgement SYN flag is \xe2\x80\xa6BlSet the number of Multicast Address Records.CbReturns the number of processors currently online.CmAttempts to acquire an upgradable lock until a timeout is \xe2\x80\xa6ClConstructs a new boxed slice with uninitialized contents \xe2\x80\xa60CmAttempts to acquire an owned, reference-counted read lock \xe2\x80\xa6DeAttempts to acquire this <code>RwLock</code> with upgradable read \xe2\x80\xa6ClTries to atomically upgrade an upgradable read lock into \xe2\x80\xa6CaEnables Control-flow Enforcement Technology (CET)ClIf set, enables debug register based breaks on I/O space \xe2\x80\xa6B`Enable machine check interrupts.ChGives information about the current level in the cpu \xe2\x80\xa6AnGuest-physical address (full).AnGuest-physical address (high).CcSee Section 8.10.5, Monitor/Mwait Address Range \xe2\x80\xa6CnCapability Reporting Register of Secondary Processor-based \xe2\x80\xa6CkCapability Reporting Register of VM-entry Flex Controls \xe2\x80\xa6AiInterrupt-window exiting.BoAn Interrupt Descriptor Table with 256 entries.CmRepresents the interrupt stack frame pushed by the CPU on \xe2\x80\xa6CfUncore B-box 0 perfmon local box overflow control MSR.CfUncore B-box 1 perfmon local box overflow control MSR.CfUncore C-box 0 perfmon local box overflow control MSR.CfUncore C-box 1 perfmon local box overflow control MSR.CfUncore C-box 2 perfmon local box overflow control MSR.CfUncore C-box 3 perfmon local box overflow control MSR.CfUncore C-box 4 perfmon local box overflow control MSR.CfUncore C-box 5 perfmon local box overflow control MSR.CfUncore C-box 6 perfmon local box overflow control MSR.CfUncore C-box 7 perfmon local box overflow control MSR.CfUncore C-box 8 perfmon local box overflow control MSR.CfUncore C-box 9 perfmon local box overflow control MSR.ClLast Branch Record 0 From IP (R/W) One of eight pairs of \xe2\x80\xa6CiLast Branch Record 1 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 2 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 3 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 4 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 5 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 6 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 7 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 8 From IP (R/W) See description of \xe2\x80\xa6CiLast Branch Record 9 From IP (R/W) See description of \xe2\x80\xa6CfUncore M-box 0 perfmon local box overflow control MSR.CfUncore M-box 1 perfmon local box overflow control MSR.CfSee Section 18.4.2, Global Counter Control Facilities.CfUncore R-box 0 perfmon local box overflow control MSR.CfUncore R-box 1 perfmon local box overflow control MSR.CfUncore S-box 0 perfmon local box overflow control MSR.CfUncore S-box 1 perfmon local box overflow control MSR.AiUncore PMU global controlBgUncore U-box perfmon global status MSR.BnUncore U-box perfmon fixed counter control MSRAkPage-fault error-code mask.AnDisable caching for the table.BoAn interrupt-safe <code>RawOneShotMutex</code>.CnTrait to define functions that build architecture specific \xe2\x80\xa6AhUsed Buffer NotificationAmAPIC-register virtualization.BaVM-exit interruption information.AnVMWRITE-bitmap address (full).AnVMWRITE-bitmap address (high).CmReturn address of nearest 4 MiB page (lower or equal than \xe2\x80\xa600CmReturn address of nearest 2 MiB page (lower or equal than \xe2\x80\xa600BoData TLB associativity for 2-MB and 4-MB pages.CbL2 Data TLB associativity for 2-MB and 4-MB pages.10DfA general protection fault (<code>#GP</code>) can occur in various \xe2\x80\xa6CjIntel Processor Trace Enumeration Information (LEAF=0x14).0CmReturns the global breakpoint enable flag of the provided \xe2\x80\xa6Ae3DNow AMD extensions.0BiDeprecates FPU CS and FPU DS values if 1.0CnFast access mode for the IA32_HWP_REQUEST MSR is supported \xe2\x80\xa60AnSupports occupancy monitoring.0CaProcessor performance counter extensions support.0BfRestricted Injection supported if set.0CfIf true, ToPA tables can hold any number of output \xe2\x80\xa60BhUpper Address Ignore is supported if setCcWrite-Back Invalidate/Invalidate (Bit 0) False: \xe2\x80\xa60CfInstruction TLB associativity for 2-MB and 4-MB pages.CiL2 Instruction TLB associativity for 2-MB and 4-MB pages.10DiThis returns <code>true</code> only when the following conditions are \xe2\x80\xa6BdHow many interrupts this device has?DfReturns the <code>PageTableFrameMapping</code> used for converting \xe2\x80\xa6BePhysical Line partitions (Bits 21-12)0BbProcessor Base Frequency (in MHz).0BfSet the source hardware address field.BfSet the source protocol address field.BfSet the target hardware address field.BfSet the target protocol address field.ClAttempts to acquire an exclusive lock until a timeout is \xe2\x80\xa6DhAttempts to acquire this <code>RwLock</code> with shared read access \xe2\x80\xa6BkTransmutes into an enum from its primitive.DfCreates an empty <code>HashMap</code> with the specified capacity, \xe2\x80\xa6DhCreates an empty <code>HashSet</code> with the specified capacity, usingCaSet whether the <code>0</code> flag is specified.AoSupport for legacy x87 in XCR0.0AoSupport for MPX BNDCSR in XCR0.0BeEnables use of Protection Keys (MPK).BcConsole Device Configuration LayoutBcNetwork Device Configuration LayoutBbSocket Device Configuration LayoutAdDevice configurationCfTraditional Memory Balloon Device Configuration LayoutAlENCLS-exiting bitmap (full).AlENCLS-exiting bitmap (high).BgCode Execute-Only, conforming, accessedAhIf CPUID.06H: EAX[6] = 1CnSee Table 35-2. See Section 18.4.2, Global Counter Control \xe2\x80\xa6BkThe link-local all nodes multicast address.EbA <code>lock_api::MutexGuard</code> based on <code>RawInterruptTicketMutex</code>.BmBreakpoint 0 is enabled for the current task.BmBreakpoint 1 is enabled for the current task.BmBreakpoint 2 is enabled for the current task.BmBreakpoint 3 is enabled for the current task.B`Trace Output Base Register (R/W)CjLast Branch Record 10 From IP (R/W) See description of \xe2\x80\xa6CjLast Branch Record 11 From IP (R/W) See description of \xe2\x80\xa6CjLast Branch Record 12 From IP (R/W) See description of \xe2\x80\xa6CjLast Branch Record 13 From IP (R/W) See description of \xe2\x80\xa6CjLast Branch Record 14 From IP (R/W) See description of \xe2\x80\xa6CjLast Branch Record 15 From IP (R/W) See description of \xe2\x80\xa6ChSee Section 18.7.2.1, Uncore Performance Monitoring  \xe2\x80\xa6BjUncore C-Box 0, counter 0 event select MSRBjUncore C-Box 0, counter 1 event select MSRBjUncore C-Box 1, counter 0 event select MSRBjUncore C-Box 1, counter 1 event select MSRBjUncore C-Box 2, counter 0 event select MSRBjUncore C-Box 2, counter 1 event select MSRBjUncore C-Box 3, counter 0 event select MSRBkUncore C-Box 3, counter 1 event select MSR.DjAn RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, \xe2\x80\xa6AlPage-fault error-code match.ClEnables protection keys for supervisor-mode pages (Intel \xe2\x80\xa6CkInfo about performance monitoring \xe2\x80\x93 how many counters \xe2\x80\xa60AhToward negative infinityAhToward positive infinityDhAdditional methods for <code>RwLock</code>s which support upgradable \xe2\x80\xa6CgA guard that releases the upgradable read lock when \xe2\x80\xa6CmRAII structure used to release the upgradable read access \xe2\x80\xa6AjSave VMX-preemption timer.CeTrait to implement for building a task-gate (this \xe2\x80\xa6CjIndicates that an external, maskable interrupt is pending.B`VM-exit MSR-load address (full).B`VM-exit MSR-load address (high).AlVM-function controls (full).AlVM-function controls (high).BnCurrent Count register (for Timer). Read-only.AhClear the reserved bits.CmSpecifies the ratio of the compute unit power accumulator \xe2\x80\xa60BiL1 Data TLB associativity for 1-GB pages.0BiL2 Data TLB associativity for 1-GB pages.0DhIf returns <code>true</code> the device can accept fast back-to-back \xe2\x80\xa6BgCreates a layout, bypassing all checks.BlCreates a page layout, bypassing all checks.DcConstruct an <code>OffsetDateTime</code> from the provided Unix \xe2\x80\xa6DjConstruct an <code>UtcDateTime</code> from the provided Unix timestamp \xe2\x80\xa6BhExtended CPU Topology (LEAF=0x8000_0026)CfFind out about more features supported by this CPU \xe2\x80\xa60CcL1 Instruction Cache Information (LEAF=0x8000_0005)0CfHardware cache coherency across encryption domains \xe2\x80\xa60CkReports whether the response of the delay values is linear.0BcIs MCA overflow recovery available?0BhHas Processor power reporting interface?0BlFP Error Pointers Restored by XRSTOR if set.0CbVMSAVE and VMLOAD virtualization supported if set.0CjSupports treating interrupts as break-event for MWAIT, \xe2\x80\xa60CoDecomposes a <code>Vec&lt;T&gt;</code> into its raw components.C`L1 Instruction TLB associativity for 1-GB pages.0C`L2 Instruction TLB associativity for 1-GB pages.0DkCreates a new <code>RwLockReadGuard</code> without checking if the lock \xe2\x80\xa6ClMaximum number of addressable IDs for logical processors \xe2\x80\xa60EgInterprets the given <code>source</code> as a <code>&amp;mut Self</code> with a DST \xe2\x80\xa6CnNotifies a number of active and still unnotified listeners \xe2\x80\xa6EjInterprets the given <code>source</code> as a <code>&amp;Self</code> with a DST length \xe2\x80\xa6AoRemove the default ipv4 gatewayAoRemove the default ipv6 gatewayCnSet the buffer into which incoming DHCP packets are copied \xe2\x80\xa6ClAttempts to acquire a shared lock without deadlocking in \xe2\x80\xa6CmAttempts to acquire an upgradable lock until a timeout is \xe2\x80\xa6DeAttempts to acquire this <code>RwLock</code> with upgradable read \xe2\x80\xa6CeReturns the cluster ID a given APIC ID belongs to \xe2\x80\xa6B`Support for MPX BNDREGS in XCR0.0HeA <code>lock_api::RwLockReadGuard</code> based on <code>RawRwSpinlock</code><code>&lt;</code><code>Backoff</code><code>&gt;</code>\xe2\x80\xa6BfA valid debug address register number.AkExternal-interrupt exiting.BfBreakpoint 0 is enabled for all tasks.BfBreakpoint 1 is enabled for all tasks.BfBreakpoint 2 is enabled for all tasks.BfBreakpoint 3 is enabled for all tasks.BbHost IA32_PERF_GLOBAL_CTRL (full).BcGuest IA32_PERF_GLOBAL_CTRL (full).BbHost IA32_PERF_GLOBAL_CTRL (high).BcGuest IA32_PERF_GLOBAL_CTRL (high).CfDisable suppression of CET on legacy compatibility \xe2\x80\xa6AmAll multicast-capable routersAkAll multicast-capable nodesEcA <code>lock_api::MutexGuard</code> based on <code>RawInterruptOneShotMutex</code>.AkLoad IA32_PERF_GLOBAL_CTRL.0CmC-State Configuration Control (R/W)  Note: C-state values \xe2\x80\xa6AgConfigTDP Control (R/W)AfUncore PMU main statusCaUncore U-box perfmon global overflow control MSR.D`A RAII guard returned by <code>BackoffSpinlockGuard::map</code>.CnNote type for specifying the Uhyve interface version in an \xe2\x80\xa6ChEnables physical address extensions and 2MB physical \xe2\x80\xa6AkVirtual-interrupt delivery.BfEnables VMX instructions (Intel Only).AnVM-entry exception error code.BaVM-entry MSR-load address (full).BaVM-entry MSR-load address (high).BaVM-exit MSR-store address (full).BaVM-exit MSR-store address (high).AkVMX-preemption timer value.EfConstructs a new <code>SmallVec</code> on the stack from an <code>A</code> without \xe2\x80\xa6BgInformation about topology (LEAF=0x0B).0C`Informations about memory encryption support \xe2\x80\xa60DcObtain the value of the struct as an <code>Option</code> of the \xe2\x80\xa600000000000ChRetrieve processor brand string (LEAF=0x8000_000{2..4}).0AeAnyThread deprecation0BhInvalid RIP indication supported if set.CiIf true, Indicates support of IP Filtering, TraceStop \xe2\x80\xa60CfIndicates support for the PAUSE filter cycle count \xe2\x80\xa60BaEFER.LMSLE is unsupported if set.0BdCore cycle event not available if 1.0BmInstruction retired event not available if 1.0CmChecks whether the mutex is currently held by the current \xe2\x80\xa60DkCreates a new <code>RwLockReadGuard</code> without checking if the lock \xe2\x80\xa6ClThe maximum supported enclave size in non-64-bit mode is \xe2\x80\xa60DjThe size of the <code>apic_id_size</code> field determines the maximum \xe2\x80\xa60EjInterprets the prefix of the given <code>source</code> as a <code>&amp;mut Self</code> \xe2\x80\xa6EjInterprets the suffix of the given <code>source</code> as a <code>&amp;mut Self</code> \xe2\x80\xa6AnPhysical Address bit reduction0EjInterprets the prefix of the given <code>source</code> as a DST <code>&amp;Self</code> \xe2\x80\xa6EjInterprets the suffix of the given <code>source</code> as a DST <code>&amp;Self</code> \xe2\x80\xa6BcDescriptor Ring Change Event OffsetAoSet the parameter request list.GeA <code>lock_api::RwLockWriteGuard</code> based on <code>RawRwSpinlock</code><code>&lt;</code><code>Backoff</code>\xe2\x80\xa6CkCapability Reporting Register of Pin-based VM-execution \xe2\x80\xa6BmThe link-local all routers multicast address.ChSee Section 18.7.2.1, Uncore Performance Monitoring  \xe2\x80\xa6CmAllows software running at any privilege level to use the \xe2\x80\xa6CgPerformance Optimization Identifier (LEAF=0x8000_001A).0BiSub-page-permission-table pointer (full).BiSub-page-permission-table pointer (high).DkChanges how the <code>invlpg</code> instruction operates on TLB entries \xe2\x80\xa6DjImplementation of <code>SortedLinkedListStorage</code> that stores the \xe2\x80\xa6CmNumber of configurable Address Ranges for filtering (Bits \xe2\x80\xa60ChInformations about processor topology (LEAF=0x8000_001E)0AkGuest Physical Address Bits0BjNB performance counter extensions support.0CjNull segment selector loads also clear the destination \xe2\x80\xa6BlHas Read-only effective frequency interface?0CjAlso flush nestred translations that could be used for \xe2\x80\xa6CdLast-level cache reference event not available if 1.0BjReference cycles event not available if 1.0BhMemory Bandwidth Allocation Information.0BhSets the ethernet address of the client.BiDescriptor Ring Change Event Wrap CounterCmSet how many interrupts the device will use. If requested \xe2\x80\xa6BgReturns the processor frequency in MHz.DjThe VMM Communication Exception (<code>#VC</code>) is always generated \xe2\x80\xa6DfCreates an empty <code>HashMap</code> with the specified capacity, \xe2\x80\xa6DhCreates an empty <code>HashSet</code> with the specified capacity, usingBcDescriptor Ring Change Event OffsetBbSupport for AVX512 OPMASK in XCR0.0AnCommon configuration structureAhIf CPUID.06H: EAX[6] = 1CmCapability Reporting Register of Primary Processor-based  \xe2\x80\xa6BbException vector number is invalidCfSee Section 18.7.2.3, Uncore Address/Opcode Match MSR.DjImplementation of <code>SortedLinkedListStorage</code> that stores the \xe2\x80\xa6ChAn owned, reference-counting guard that releases the \xe2\x80\xa6CkEnables hardware-supported performance enhancements for \xe2\x80\xa6B`VM-exit interruption error code.CnReturns the 1GiB memory page with the specified page table \xe2\x80\xa6CnReturns the 2MiB memory page with the specified page table \xe2\x80\xa6CjReturns the page that starts at the given virtual address.CkReturns the frame that starts at the given virtual address.CiAdvanced Power Management Information (LEAF=0x8000_0007).0BeDirect cache access info (LEAF=0x09).0CcL2/L3 Cache and TLB Information (LEAF=0x8000_0006).0BlProcessor Frequency Information (LEAF=0x16).0CeIs Code and Data Prioritization Technology supported?0BoReads to local DRAM memory is supported if set.C`Reads to remote DRAM memory is supported if set.BmSupport for L3 performance counter extension.0EgConsumes the <code>Box</code>, returning a wrapped <code>NonNull</code> pointer and \xe2\x80\xa6AiPage-level cache disable.0CnPage-level cache disable; indirectly determines the memory \xe2\x80\xa60111BbDescriptor Ring Change Event FlagsCnNumber of bits to shift right on x2APIC ID to get a unique \xe2\x80\xa60BiDescriptor Ring Change Event Wrap CounterBgCode Execute/Read, conforming, accessedBlWhere the extended register state is stored.0CdSee Section 8.10.5, Monitor/Mwait Address  Range \xe2\x80\xa6BoThe link-local all RPL nodes multicast address.ChEnable detection of exact instruction causing a data \xe2\x80\xa6AhSee http://biosbits.org.ChSee Section 18.7.2.1, Uncore Performance Monitoring  \xe2\x80\xa6CoA <code>lock_api::RwLockUpgradableReadGuard</code> based on \xe2\x80\xa60AgEnables SVM extensions.CdVirtualization-exception information address (full).CdVirtualization-exception information address (high).ClReturns the alignment for the address space described by \xe2\x80\xa6CjUnsafely creates a <code>CString</code> from a byte slice.DeConstructs a new <code>SmallVec</code> on the stack from an array \xe2\x80\xa6C`Extended information about topology (LEAF=0x1F).0CjHWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is \xe2\x80\xa60ChNon-temporal writes to local memory is supported if set.CiNon-temporal writes to remote memory is supported if set.BlLFENCE is always dispatch serializing if setCkIf true, Indicates support of output to Trace Transport \xe2\x80\xa60BbSet priority of the current threadCnReturns the alignment for the address space described by a \xe2\x80\xa6ChAttempts to acquire a shared lock until a timeout is \xe2\x80\xa6ElAttempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> with \xe2\x80\xa6EjAttempts to interpret the given <code>source</code> as a <code>&amp;Self</code> with a \xe2\x80\xa6BbDescriptor Ring Change Event FlagsBdSupport for AVX512 ZMM Hi16 in XCR0.0AnDevice Configuration InterruptCeExtended Feature Identification 2 (LEAF=0x8000_0021).ChEnable detection of exact instruction causing a data \xe2\x80\xa6BkEnable certain limit checks in 64-bit mode.BiTrace Output Mask Pointers Register (R/W)ChDefines the Uhyve interface version in the note section.CbInformations about Platform Quality of Service \xe2\x80\xa6BaData access breakpoint extension.0BdSupports local bandwidth monitoring.0CdIbsOpCurCnt and IbsOpMaxCnt extend by 7 bits if set.CiIf true, Indicates support of Single-Range Output scheme.0BdSupports total bandwidth monitoring.0CeBitmap of supported MTC period encodings (Bit 31:16).0DjAttempts to interpret the prefix of the given <code>source</code> as a \xe2\x80\xa6DjAttempts to interpret the suffix of the given <code>source</code> as a \xe2\x80\xa610CkReturns the logical address relative to a cluster for a \xe2\x80\xa6BbSupport for AVX512 ZMM Hi256 XCR0.0CgA handler function with an error code that must not \xe2\x80\xa6ChSee Section 18.7.2.1, Uncore Performance Monitoring  \xe2\x80\xa6BkPosted-interrupt descriptor address (full).BkPosted-interrupt descriptor address (high).BnPrimary processor-based VM-execution controls.CfProcessor Capacity Parameters and Extended Feature \xe2\x80\xa60ChEnables advanced debugging of RTM transactional regions.BhVM-entry interruption-information field.BnInfo about performance monitoring (LEAF=0x0A).0CcSupports INVD execution prevention after BIOS Done.BeSupports Memory Bandwidth Allocation.0CaLast-level cache misses event not available if 1.0DiCreates a new <code>RwLockUpgradableReadGuard</code> without checking \xe2\x80\xa6EbSets the optional <code>sname</code> (\xe2\x80\x9cserver name\xe2\x80\x9d) and <code>file</code> \xe2\x80\xa6ChAttempts to acquire a shared lock until a timeout is \xe2\x80\xa6CcBandwidth Monitoring Event Counters Information \xe2\x80\xa6AnCommon configuration structureClCompactPCI Central Resource Control capability, Cap ID = \xe2\x80\xa6CoA <code>lock_api::RwLockUpgradableReadGuard</code> based on \xe2\x80\xa60GaPrevents the execution of the <code>SGDT</code>, <code>SIDT</code>, <code>SLDT</code>, <code>SMSW</code>, and \xe2\x80\xa6DjAttempts to get mutable references to <code>N</code> values in the map \xe2\x80\xa6CbSet to 1 if processor power efficiency ranking \xe2\x80\xa6BjRead write of op counter supported if set.CcBranch mispredict retired event not available if 1.0ClIf IA32_EFER.NXE = 1, execute-disable. If 1, instruction \xe2\x80\xa60000CbMaximum size (bytes, from the beginning of the \xe2\x80\xa60BaConfiguration Change NotificationCnThe link-local all MLVDv2-capable routers multicast address\xe2\x80\xa6CfEnables support for protected-mode virtual interrupts.C`Secondary processor-based VM-execution controls.CjEnables restrictions for supervisor-mode software when \xe2\x80\xa6ChBit width of fixed-function performance counters (if \xe2\x80\xa60BoInformations about performance optimization \xe2\x80\xa60ClReads to local memory identified as \xe2\x80\x9cSlow Memory\xe2\x80\x9d is \xe2\x80\xa6CmReads to remote memory identified as \xe2\x80\x9cSlow Memory\xe2\x80\x9d is \xe2\x80\xa6CdBranch instruction retired event not available if 1.0ClBitmap of supported Configurable PSB frequency encodings \xe2\x80\xa60AeMMIO Device RegistersBmExtended Performance Monitoring and Debug \xe2\x80\xa6==ChExtended Processor and Processor Feature Identifiers \xe2\x80\xa60CkMulti-Key Encrypted Memory Capabilities (LEAF=0x8000_0023).CfProcessor Capacity Parameters and Extended Feature \xe2\x80\xa60CaBranch target address reporting supported if set.CbSet the current task state to <code>blocked</code>CoA <code>lock_api::RwLockUpgradableReadGuard</code> based on \xe2\x80\xa6CgPerformance Optimization Identifier (LEAF=0x8000_001A).BePosted-interrupt notification vector.CiPrevents the execution of instructions that reside in \xe2\x80\xa6CbFused branch micro-op indication supported if set.CdExtended Feature Identification 2 (LEAF=0x8000_0021)ClHWP Energy Performance Preference. IA32_HWP_REQUEST[bits \xe2\x80\xa60ClIgnoring Idle Logical Processor HWP request is supported \xe2\x80\xa60>BoL3 Memory Bandwidth Enforcement Information \xe2\x80\xa6CgIf true, Indicates support of MTC timing packet and \xe2\x80\xa601BoGet L3 Memory Bandwidth Enforcement InformationCmBitmap of supported Cycle Threshold value encodings (Bits \xe2\x80\xa60CcQuery deterministic address translation feature \xe2\x80\xa60CjInstruction-Based Sampling Capabilities (LEAF=0x8000_001B)CjMulti-Key Encrypted Memory Capabilities (LEAF=0x8000_0023)CcGet Bandwidth Monitoring Event Counters InformationCfIf true, Indicates support of Configurable PSB and \xe2\x80\xa60CnSupports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, \xe2\x80\xa60BmExtended Performance Monitoring and Debug \xe2\x80\xa6CdGet L3 Slow Memory Bandwidth Enforcement InformationChExtended Processor and Processor Feature Identifiers \xe2\x80\xa605CdSupports ENCLV instruction leaves EINCVIRTCHILD, \xe2\x80\xa60")