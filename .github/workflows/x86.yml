name: x86

on:
  pull_request:
  push:
    branches:
      - master
      - staging
      - trying

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  test:
    name: x86 tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Install cargo-binutils
        run: cargo install cargo-binutils
      - name: Checkout rusty-hermit
        uses: actions/checkout@v2
        with:
          repository: hermitcore/rusty-hermit
          submodules: true
      - name: Remove libhermit-rs submodule
        run: git rm -r libhermit-rs
      - name: Checkout libhermit-rs
        uses: actions/checkout@v2
        with:
          path: libhermit-rs
      - name: Rustup (apply rust-toolchain.toml)
        working-directory: libhermit-rs
        run: rustup show
      - name: Build minimal kernel
        working-directory: libhermit-rs
        run: cargo build --no-default-features -Z build-std=core,alloc
      - name: Build dev profile
        run: cargo build
      - name: Unittests on host (ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory: libhermit-rs
        run: cargo test --lib --target x86_64-unknown-linux-gnu
      - name: Install QEMU, NASM (ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install qemu-system-x86 nasm
      - name: Install QEMU, NASM (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install qemu nasm
      - name: Install QEMU, NASM, GNU make (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          choco install qemu nasm make
          echo "C:\Program Files\qemu" >> $GITHUB_PATH
          echo "C:\Program Files\NASM" >> $GITHUB_PATH
      - name: Build loader
        run: |
          sed -i.old 's/OBJCOPY := $(shell find $(SYSROOT) -name llvm-objcopy)/OBJCOPY := $(shell find $(SYSROOT) -name llvm-objcopy -o -name llvm-objcopy.exe)/g' loader/Makefile
          make -C loader release=1
      - name: Test dev profile
        run: |
          qemu-system-x86_64 -display none -smp 1 -m 128M -serial stdio \
            -cpu qemu64,apic,fsgsbase,rdtscp,xsave,xsaveopt,fxsr \
            -kernel loader/target/x86_64-unknown-hermit-loader/release/rusty-loader \
            -initrd target/x86_64-unknown-hermit/debug/rusty_demo
      - name: Integration tests (ubuntu)
        working-directory: libhermit-rs
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cargo test --tests --no-fail-fast -- --bootloader_path=../loader/target/x86_64-unknown-hermit-loader/release/rusty-loader
        continue-on-error: true
      - name: Build release profile
        run: cargo build --release
      - name: Test release profile
        run: |
          qemu-system-x86_64 -display none -smp 1 -m 128M -serial stdio \
            -cpu qemu64,apic,fsgsbase,rdtscp,xsave,xsaveopt,fxsr \
            -kernel loader/target/x86_64-unknown-hermit-loader/release/rusty-loader \
            -initrd target/x86_64-unknown-hermit/release/rusty_demo
